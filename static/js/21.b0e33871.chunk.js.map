{"version":3,"sources":["../node_modules/lodash/_root.js","../node_modules/lodash/isArray.js","../node_modules/lodash/_getNative.js","../node_modules/lodash/_baseGetTag.js","../node_modules/lodash/isObjectLike.js","../node_modules/lodash/_ListCache.js","../node_modules/lodash/_assocIndexOf.js","../node_modules/lodash/_Symbol.js","../node_modules/lodash/isObject.js","../node_modules/lodash/_nativeCreate.js","../node_modules/lodash/_getMapData.js","../node_modules/lodash/keys.js","../node_modules/lodash/isSymbol.js","../node_modules/lodash/_toKey.js","../node_modules/lodash/_baseIsEqual.js","../node_modules/lodash/_Map.js","../node_modules/lodash/_MapCache.js","../node_modules/lodash/isLength.js","../node_modules/lodash/isArrayLike.js","../node_modules/lodash/_baseIteratee.js","../node_modules/lodash/_isKey.js","../node_modules/chart.js/dist/Chart.js","../node_modules/lodash/_Stack.js","../node_modules/lodash/eq.js","../node_modules/lodash/isFunction.js","../node_modules/lodash/_freeGlobal.js","../node_modules/lodash/_toSource.js","../node_modules/lodash/_equalArrays.js","../node_modules/lodash/isArguments.js","../node_modules/lodash/isBuffer.js","../node_modules/lodash/_isIndex.js","../node_modules/lodash/isTypedArray.js","../node_modules/lodash/_isStrictComparable.js","../node_modules/lodash/_matchesStrictComparable.js","../node_modules/lodash/_baseGet.js","../node_modules/lodash/_castPath.js","../node_modules/react-chartjs-2/es/index.js","../node_modules/lodash/isEqual.js","../node_modules/lodash/_baseIsEqualDeep.js","../node_modules/lodash/_listCacheClear.js","../node_modules/lodash/_listCacheDelete.js","../node_modules/lodash/_listCacheGet.js","../node_modules/lodash/_listCacheHas.js","../node_modules/lodash/_listCacheSet.js","../node_modules/lodash/_stackClear.js","../node_modules/lodash/_stackDelete.js","../node_modules/lodash/_stackGet.js","../node_modules/lodash/_stackHas.js","../node_modules/lodash/_stackSet.js","../node_modules/lodash/_baseIsNative.js","../node_modules/lodash/_getRawTag.js","../node_modules/lodash/_objectToString.js","../node_modules/lodash/_isMasked.js","../node_modules/lodash/_coreJsData.js","../node_modules/lodash/_getValue.js","../node_modules/lodash/_mapCacheClear.js","../node_modules/lodash/_Hash.js","../node_modules/lodash/_hashClear.js","../node_modules/lodash/_hashDelete.js","../node_modules/lodash/_hashGet.js","../node_modules/lodash/_hashHas.js","../node_modules/lodash/_hashSet.js","../node_modules/lodash/_mapCacheDelete.js","../node_modules/lodash/_isKeyable.js","../node_modules/lodash/_mapCacheGet.js","../node_modules/lodash/_mapCacheHas.js","../node_modules/lodash/_mapCacheSet.js","../node_modules/lodash/_SetCache.js","../node_modules/lodash/_setCacheAdd.js","../node_modules/lodash/_setCacheHas.js","../node_modules/lodash/_arraySome.js","../node_modules/lodash/_cacheHas.js","../node_modules/lodash/_equalByTag.js","../node_modules/lodash/_Uint8Array.js","../node_modules/lodash/_mapToArray.js","../node_modules/lodash/_setToArray.js","../node_modules/lodash/_equalObjects.js","../node_modules/lodash/_getAllKeys.js","../node_modules/lodash/_baseGetAllKeys.js","../node_modules/lodash/_arrayPush.js","../node_modules/lodash/_getSymbols.js","../node_modules/lodash/_arrayFilter.js","../node_modules/lodash/stubArray.js","../node_modules/lodash/_arrayLikeKeys.js","../node_modules/lodash/_baseTimes.js","../node_modules/lodash/_baseIsArguments.js","../node_modules/lodash/stubFalse.js","../node_modules/lodash/_baseIsTypedArray.js","../node_modules/lodash/_baseUnary.js","../node_modules/lodash/_nodeUtil.js","../node_modules/lodash/_baseKeys.js","../node_modules/lodash/_isPrototype.js","../node_modules/lodash/_nativeKeys.js","../node_modules/lodash/_overArg.js","../node_modules/lodash/_getTag.js","../node_modules/lodash/_DataView.js","../node_modules/lodash/_Promise.js","../node_modules/lodash/_Set.js","../node_modules/lodash/_WeakMap.js","../node_modules/lodash/find.js","../node_modules/lodash/_createFind.js","../node_modules/lodash/_baseMatches.js","../node_modules/lodash/_baseIsMatch.js","../node_modules/lodash/_getMatchData.js","../node_modules/lodash/_baseMatchesProperty.js","../node_modules/lodash/get.js","../node_modules/lodash/_stringToPath.js","../node_modules/lodash/_memoizeCapped.js","../node_modules/lodash/memoize.js","../node_modules/lodash/toString.js","../node_modules/lodash/_baseToString.js","../node_modules/lodash/_arrayMap.js","../node_modules/lodash/hasIn.js","../node_modules/lodash/_baseHasIn.js","../node_modules/lodash/_hasPath.js","../node_modules/lodash/identity.js","../node_modules/lodash/property.js","../node_modules/lodash/_baseProperty.js","../node_modules/lodash/_basePropertyDeep.js","../node_modules/lodash/findIndex.js","../node_modules/lodash/_baseFindIndex.js","../node_modules/lodash/toInteger.js","../node_modules/lodash/toFinite.js","../node_modules/lodash/toNumber.js","../node_modules/lodash/keyBy.js","../node_modules/lodash/_baseAssignValue.js","../node_modules/lodash/_defineProperty.js","../node_modules/lodash/_createAggregator.js","../node_modules/lodash/_arrayAggregator.js","../node_modules/lodash/_baseAggregator.js","../node_modules/lodash/_baseEach.js","../node_modules/lodash/_baseForOwn.js","../node_modules/lodash/_baseFor.js","../node_modules/lodash/_createBaseFor.js","../node_modules/lodash/_createBaseEach.js","../node_modules/@coreui/coreui-plugin-chartjs-custom-tooltips/dist/umd/custom-tooltips.js","../node_modules/@coreui/coreui/dist/js/coreui-utilities.js"],"names":["freeGlobal","__webpack_require__","freeSelf","self","Object","root","Function","module","exports","isArray","Array","baseIsNative","getValue","object","key","value","undefined","Symbol","getRawTag","objectToString","nullTag","undefinedTag","symToStringTag","toStringTag","listCacheClear","listCacheDelete","listCacheGet","listCacheHas","listCacheSet","ListCache","entries","index","length","this","clear","entry","set","prototype","get","has","eq","array","type","nativeCreate","getNative","isKeyable","map","data","__data__","arrayLikeKeys","baseKeys","isArrayLike","baseGetTag","isObjectLike","symbolTag","isSymbol","INFINITY","result","baseIsEqualDeep","baseIsEqual","other","bitmask","customizer","stack","Map","mapCacheClear","mapCacheDelete","mapCacheGet","mapCacheHas","mapCacheSet","MapCache","MAX_SAFE_INTEGER","isFunction","isLength","baseMatches","baseMatchesProperty","identity","property","reIsDeepProp","reIsPlainProp","test","moment","hasOwnProperty","conversions","rgb2hsl","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","rgb2xyz","rgb2lab","rgb2lch","args","lab2lch","hsl2rgb","hsl2hsv","hsl","h","s","l","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2rgb","hsv2hsl","hsv","sl","v","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2rgb","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2rgb","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2rgb","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2rgb","xyz2lab","xyz2lch","lab2xyz","lab2rgb","lch2lab","lch2xyz","lch2rgb","rgb","r","g","b","min","Math","max","delta","w","k","reverseKeywords","JSON","stringify","pow","x","y","z","xyz","t1","t2","t3","val","i","hi","floor","f","p","q","t","hwb","n","wh","bl","ratio","cmyk","c","m","lab","y2","a","hr","atan2","PI","sqrt","lch","cos","sin","keyword","cssKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","convert","Converter","func","arg","slice","call","arguments","pair","exec","from","to","round","convs","routeSpace","space","values","getValues","setValues","vals","fspace","forEach","colorConvert","colorName","colorString","getRgba","getHsla","getRgb","string","rgba","getHsl","hsla","getHwb","getAlpha","hexString","hexDouble","rgbString","alpha","rgbaString","percentString","percentaString","hslString","hslaString","hwbString","reverseNames","match","hexAlpha","parseInt","parseFloat","scale","isNaN","num","str","toString","toUpperCase","name","Color","obj","valid","lightness","whiteness","isValid","setSpace","rgbArray","hslArray","hsvArray","hwbArray","concat","cmykArray","rgbaArray","hslaArray","setChannel","hue","saturation","saturationv","blackness","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","weight","w1","w2","toJSON","clone","source","target","prop","console","error","spaces","maxes","charAt","capped","chans","sname","svalues","window","chartjsColor","helpers","noop","uid","id","isNullOrUndef","substr","isObject","isFinite","_isFinite","_x","apply","Number","valueOrDefault","defaultValue","valueAtIndexOrDefault","callback","fn","thisArg","each","loopable","reverse","len","keys","arrayEquals","a0","a1","ilen","v0","v1","klen","_merger","options","tval","sval","merge","_mergerIf","mergeIf","sources","merger","extend","setFn","inherits","extensions","me","ChartElement","constructor","Surrogate","__super__","helpers_core","callCallback","indexOf","item","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","helpers_easing","easingEffects","RAD_PER_DEG","DOUBLE_PI","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","exports$1","chart","ctx","clearRect","width","height","roundedRect","radius","left","top","right","bottom","moveTo","arc","closePath","rect","drawPoint","style","rotation","xOffset","yOffset","size","cornerRadius","rad","beginPath","lineTo","SQRT1_2","fill","stroke","drawImage","_isPointInArea","point","area","clipArea","save","clip","unclipArea","restore","previous","flip","stepped","steppedLine","midpoint","tension","bezierCurveTo","controlPointPreviousX","controlPointNextX","controlPointPreviousY","controlPointNextY","helpers_canvas","drawRoundedRectangle","defaults","_set","scope","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","defaultLineHeight","showLines","core_defaults","helpers_options","toLineHeight","matches","toPadding","_parseFont","globalDefaults","global","fontSize","font","family","fontFamily","lineHeight","fontStyle","toFontString","resolve","inputs","context","helpers$1","easing","canvas","Element","configuration","initialize","hidden","pivot","_view","_model","_start","transition","ease","model","start","view","actual","origin","c0","c1","interpolate","tooltipPosition","hasValue","isNumber","core_element","exports$2","currentStep","numSteps","render","onAnimationProgress","onAnimationComplete","core_animation","defineProperty","animation","duration","onProgress","onComplete","core_animations","animations","request","addAnimation","lazy","startTime","Date","now","animating","push","requestAnimationFrame","cancelAnimation","findIndex","splice","requestAnimFrame","startDigest","advance","nextStep","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","DatasetController","datasetIndex","datasetElementType","dataElementType","linkScales","addElements","updateIndex","meta","getMeta","dataset","getDataset","xAxisID","scales","xAxes","yAxisID","yAxes","datasets","getDatasetMeta","getScaleForId","scaleID","_getValueScaleId","_getIndexScaleId","_getValueScale","_getIndexScale","reset","update","destroy","_data","createMetaDataset","_chart","_datasetIndex","createMetaData","_index","metaData","addElementAndReset","element","updateElement","buildOrUpdateElements","isExtensible","configurable","enumerable","method","base","res","resyncElements","easingValue","elements","draw","removeHoverStyle","$previousStyle","setHoverStyle","custom","getHoverColor","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","hoverBorderWidth","numMeta","numData","insertElements","count","onDataPush","onDataPop","pop","onDataShift","shift","onDataSplice","onDataUnshift","core_datasetController","borderAlign","element_arc","inLabelRange","mouseX","vm","hoverRadius","inRange","chartX","chartY","pointRelativePosition","getAngleFromPoint","angle","distance","startAngle","endAngle","betweenAngles","withinRadius","innerRadius","outerRadius","getCenterPoint","halfAngle","halfRadius","getArea","centreAngle","rangeFromCentre","angleMargin","sA","eA","pixelMargin","fillStyle","lineWidth","lineJoin","strokeStyle","valueOrDefault$1","line","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","capBezierPoints","element_line","current","currentVM","spanGaps","points","_children","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","setLineDash","lineDashOffset","previousItem","skip","valueOrDefault$2","defaultColor$1","xRange","abs","hitRadius","pointStyle","element_point","mouseY","inXRange","inYRange","padding","chartArea","defaultColor$2","isVertical","getBarBounds","x1","x2","y1","half","swap","orig","v2","parseBorderWidth","maxW","maxH","edge","borderSkipped","horizontal","parseBorderSkipped","_inRange","skipX","skipY","bounds","rectangle","element_rectangle","rects","border","outer","inner","boundingRects","fillRect","Arc","Line","Point","Rectangle","resolve$1","hover","mode","categoryPercentage","barPercentage","offset","gridLines","offsetGridLines","controller_bar","bar","_ruler","getRuler","_resolveElementOptions","_xScale","_yScale","datasetLabel","label","labels","_updateElementGeometry","vscale","getBasePixel","isHorizontal","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","center","_getStacks","last","stacked","stacks","isDatasetVisible","getStackCount","getStackIndex","stackCount","end","pixels","getPixelForValue","barThickness","prev","curr","ticks","getTicks","getPixelForTick","computeMinSampleSize","imeta","ivalue","getRightValue","minBarLength","controller","range","next","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","maxBarThickness","Infinity","dataIndex","valueOrDefault$3","resolve$2","position","tooltips","callbacks","title","dataPoint","xLabel","yLabel","controller_bubble","xScale","yScale","dsIndex","getPixelForDecimal","NaN","_options","resolve$3","valueOrDefault$4","animateRotate","animateScale","legendCallback","text","join","legend","generateLabels","ds","arcOpts","bw","onClick","e","legendItem","cutoutPercentage","circumference","tooltipItem","dataLabel","controller_doughnut","getRingIndex","ringIndex","j","opts","availableWidth","availableHeight","minSize","arcs","chartWeight","_getRingWeight","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","radiusLength","_getVisibleDatasetWeightTotal","offsetX","offsetY","total","calculateTotal","_getRingWeightOffset","animationOpts","centerX","centerY","calculateCircumference","hoverWidth","ringWeightOffset","dataSetIndex","axis","controller_horizontalBar","valueOrDefault$5","resolve$4","isPointInArea","lineEnabled","showLine","controller_line","lineTension","_scale","_resolveLineOptions","updateBezierControlPoints","lineModel","_resolvePointOptions","calculatePointY","ELEMENT_OPTIONS","elementOptions","dsMeta","sumPos","sumNeg","stackedRightValue","rightValue","controlPoints","capControlPoint","pt","filter","cubicInterpolationMode","splineCurveMonotone","splineCurve","nextItem","halfBorderWidth","resolve$5","angleLines","display","circular","pointLabels","beginAtZero","controller_polarArea","starts","_starts","angles","_angles","_updateRadius","countVisibleElements","_computeAngle","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getDistanceFromCenterForValue","resetRadius","doughnut","controller_pie","valueOrDefault$6","resolve$6","controller_radar","pointPosition","getPointPositionForValue","controllers","bubble","horizontalBar","polarArea","pie","radar","scatter","getRelativePosition","native","parseVisibleItems","handler","jlen","getIntersectItems","getNearestItems","intersect","distanceMetric","minDistance","POSITIVE_INFINITY","nearestItems","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","indexMode","items","core_interaction","modes","single","x-axis","nearest","intersectsItem","filterByPosition","where","sortByWeight","_tmpIndex_","sort","addSizeByPosition","boxes","box","layout","core_layouts","addBox","fullWidth","removeBox","layoutItem","configure","props","layoutOptions","leftPadding","rightPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","maxPadding","verticalBoxes","horizontalBoxes","outerBoxes","chartWidth","chartHeight","chartAreaWidth","verticalBoxWidth","maxChartAreaWidth","maxChartAreaHeight","outerBoxSizes","minBoxSizes","getPadding","boxPadding","findMaxPadding","fitBox","minBoxSize","findNextWhere","scaleMargin","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","minBox","stylesheet","freeze","default","EXPANDO_KEY","CSS_SIZE_MONITOR","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","getStyle","eventListenerOptions","supports","addEventListener","passive","addListener","node","removeListener","removeEventListener","createEvent","nativeEvent","createDiv","cls","el","document","createElement","className","addResizeListener","expando","resizer","expand","shrink","appendChild","_reset","scrollLeft","scrollTop","onScroll","bind","createResizer","ticking","throttled","container","maintainAspectRatio","parentNode","clientWidth","proxy","renderProxy","animationName","reflow","offsetParent","classList","add","watchForRender","insertBefore","firstChild","removeResizeListener","remove","unwatchForRender","removeChild","platform_dom$2","disableCSSInjection","_enabled","_ensureLoaded","_loaded","platform","css","_style","setAttribute","getElementsByTagName","createTextNode","injectCSS","acquireContext","config","getElementById","getContext","renderHeight","getAttribute","renderWidth","initial","displayWidth","aspectRatio","displayHeight","initCanvas","releaseContext","removeAttribute","proxies","event","pos","fromNativeEvent","addEvent","removeEvent","implementation","plugins","core_plugins","_plugins","_cacheId","register","plugin","unregister","idx","getAll","notify","hook","descriptor","params","descriptors","cache","$plugins","_invalidate","core_scaleService","constructors","registerScaleType","scaleConstructor","scaleDefaults","getScaleConstructor","getScaleDefaults","updateScaleDefaults","additions","addScalesToLayout","valueOrDefault$7","enabled","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","activeElement","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","positioners","average","eventPosition","nearestElement","d","distanceBetweenPoints","tp","pushOrConcat","toPush","splitNewlines","String","split","createTooltipItem","indexScale","valueScale","getLabelForIndex","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","opacity","legendColorBackground","getAlignedX","align","getBeforeAfterBodyLines","exports$3","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","changed","existingModel","active","_active","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","_eventPosition","itemSort","body","dataPoints","tooltip","combinedBodyLength","reduce","titleLineCount","footerLineCount","widthPadding","maxLineWidth","measureText","fontString","getTooltipSize","lf","rf","olf","orf","yf","midX","midY","determineAlignment","paddingAndSize","radiusAndPadding","getBackgroundPoint","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","textAlign","textBaseline","fillText","drawBody","textColor","drawColorBoxes","xLinePadding","colorX","fillLineOfText","strokeRect","drawFooter","drawBackground","quadraticCurveTo","hasTooltipContent","globalAlpha","handleEvent","getElementsAtEventForMode","positioners_1","core_tooltip","valueOrDefault$8","mergeScaleConfig","slen","mergeConfig","positionIsHorizontal","events","onHover","animationDuration","responsive","responsiveAnimationDuration","Chart","construct","initConfig","_bufferedRender","instances","retinaScale","devicePixelRatio","bindEvents","resize","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","stop","silent","newWidth","getMaximumWidth","newHeight","getMaximumHeight","newSize","onResize","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","updated","dtype","dposition","isDefault","scaleType","scaleClass","mergeTicksOptions","hasUpdated","buildOrUpdateControllers","newControllers","destroyDatasetMeta","ControllerClass","Error","resetElements","newOptions","updateConfig","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","drawDatasets","_drawTooltip","drawDataset","getElementAtEvent","getElementsAtEvent","getElementsAtXAxis","getDatasetAtEvent","_meta","generateLegend","unbindEvents","toBase64Image","toDataURL","_chartInstance","_listeners","eventHandler","updateHoverStyle","bufferedRequest","hoverOptions","core_controller","abstract","DateAdapter","Controller","types","configMerge","scaleMerge","formats","parse","format","diff","startOf","endOf","_create","override","members","core_adapters","_date","core_ticks","formatters","tickValue","logDelta","log10","tickString","maxTick","logTick","toExponential","numDecimal","toFixed","logarithmic","remain","valueOrDefault$9","labelsFromTicks","computeTextSize","tick","longestText","color","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","minor","major","core_scale","paddingLeft","paddingTop","paddingRight","paddingBottom","_ticks","beforeUpdate","maxWidth","maxHeight","margins","_maxLabelLines","longestLabelWidth","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","tickOpts","userCallback","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","toRadians","scaleLabelOpts","gridLineOpts","_isVisible","parseFont","isFullWidth","scaleLabelFont","scaleLabelPadding","deltaHeight","largestTextWidth","tallestLabelHeightInLines","numberOfLabelLines","lineSpace","tickPadding","sinRotation","labelHeight","firstLabelWidth","lastLabelWidth","offsetLeft","offsetRight","handleMargins","rawValue","getValueForPixel","innerWidth","pixel","finalVal","innerHeight","decimal","valueOffset","getBaseValue","_autoSkip","optionTicks","tickCount","skipRatio","maxTicks","maxTicksLimit","ticksLength","_tickSize","axisLength","PaddingBottom","rot","borderValue","tickStart","tickEnd","optionMajorTicks","isRotated","isMirrored","tickFontColor","fontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","labelRotationRadians","itemsToDraw","axisWidth","alignPixel","_alignPixel","lineColor","tx1","ty1","tx2","ty2","labelX","labelY","textOffset","zeroLineIndex","lineValue","getPixelForGridLine","labelYOffset","labelXOffset","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","translate","scaleLabelX","scaleLabelY","halfLineHeight","isLeft","firstLineWidth","lastLineWidth","scale_category","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","_defaults","scale_linearbase","handleTickRangeOptions","minSign","sign","maxSign","setMin","suggestedMin","setMax","suggestedMax","getTickLimit","stepSize","ceil","_computeTickLimit","handleDirectionalChanges","numericGeneratorOptions","precision","fixedStepSize","generationOptions","dataRange","factor","niceMin","niceMax","numSpaces","unit","maxNumSpaces","rmin","rmax","spacing","niceNum","_decimalPlaces","almostWhole","almostEquals","generateTicks","ticksAsNumbers","defaultConfig$1","scale_linear","IDMatches","hasStacks","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","innerDimension","_defaults$1","valueOrDefault$a","defaultConfig$2","nonNegativeOrDefault","scale_logarithmic","minNotZero","exp","significand","tickVal","endExp","endSignificand","lastTick","generateTicks$1","tickValues","_getFirstTickValue","firstTickValue","_defaults$2","valueOrDefault$b","valueAtIndexOrDefault$1","resolve$7","defaultConfig$3","animate","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","getValueCount","getTickBackdropHeight","determineLimits","getTextAlignForAngle","adjustPointPositionForLabelHeight","textSize","numberOrZero","param","scale_radialLinear","drawingArea","NEGATIVE_INFINITY","plFont","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","toDegrees","hLimits","vLimits","setReductions","fitWithPointLabels","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","startAngleRadians","scalingFactor","distanceFromCenter","thisAngle","getBasePosition","angleLineOpts","pointLabelOpts","tickBackdropHeight","outerDistance","outerPosition","extra","pointLabelPosition","pointLabelFontColor","drawPointLabels","yCenterOffset","drawRadiusLine","_defaults$3","valueOrDefault$c","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","arrayUnique","hash","out","interpolate$1","table","skey","tkey","mid","i0","i1","lo","lookup","span","toTimestamp","input","adapter","_adapter","time","parser","determineMajorUnit","generate","capacity","timeOpts","minUnit","interval","determineUnitForAutoTicks","unitStepSize","weekday","isoWeekday","majorTicksEnabled","first","milliseconds","determineStepSize","scale_time","adapters","date","warn","displayFormats","timestamp","timestamps","dataLabels","_horizontal","_table","_timestamps","getLabelCapacity","_unit","determineUnitForFormatting","_majorUnit","distribution","buildLookupTable","_offsets","computeOffsets","majorUnit","ticksFromTimestamps","tooltipFormat","datetime","tickFormatFunction","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","isReverse","getLabelWidth","ticksOpts","tickLabelWidth","tickFontSize","exampleTime","exampleLabel","_defaults$4","displayFormat","category","radialLinear","FORMATS","_id","valueOf","_format","amount","as","filler","propagate","mappers","visible","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","resolveTarget","visited","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","plugin_filler","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","loop","p0","p1","d0","d1","doFill","noop$1","valueOrDefault$d","getBoxWidth","labelOpts","usePointStyle","boxWidth","ci","onLeave","lineDash","Legend","legendHitBoxes","_hoveredItem","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","textWidth","SQRT2","drawLegendBox","halfFontSize","xLeft","yMiddle","_getLegendItemAt","hitBox","lh","hoveredItem","createNewLegendAndAttach","legendOpts","plugin_legend","_element","beforeInit","afterEvent","noop$2","Title","lineCount","fontOpts","titleX","titleY","createNewTitleBlockAndAttach","titleOpts","titleBlock","parseMaxStyle","styleValue","parentProperty","valueInPixels","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","_getParentNode","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","collection","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","epsilon","rounded","exponent","log","LOG10E","powerOf10","isPowerOf10","radians","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","aliasPixel","pixelWidth","currentDevicePixelRatio","halfWidth","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","evt","originalEvent","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","getConstraintWidth","getConstraintHeight","_calculatePadding","parentDimension","parent","host","cw","clientHeight","ch","currentStyle","getPropertyValue","forceRatio","pixelRatio","pixelSize","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","numberOfLines","CanvasGradient","colorValue","CanvasPattern","core_helpers","_adapters","Animation","animationService","Interaction","layouts","Scale","scaleService","Ticks","Tooltip","src","pluginService","PluginBase","canvasHelpers","layoutService","LinearScaleBase","klass","cfg","toLowerCase","factory","stackClear","stackDelete","stackGet","stackHas","stackSet","Stack","asyncTag","funcTag","genTag","proxyTag","tag","funcToString","SetCache","arraySome","cacheHas","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","equalFunc","isPartial","arrLength","othLength","seen","arrValue","othValue","compared","othIndex","baseIsArguments","objectProto","propertyIsEnumerable","isArguments","stubFalse","freeExports","nodeType","freeModule","Buffer","isBuffer","reIsUint","baseIsTypedArray","baseUnary","nodeUtil","nodeIsTypedArray","isTypedArray","srcValue","castPath","toKey","path","isKey","stringToPath","process","__webpack_exports__","Bar","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","chart_js__WEBPACK_IMPORTED_MODULE_2__","chart_js__WEBPACK_IMPORTED_MODULE_2___default","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3__","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3___default","lodash_keyBy__WEBPACK_IMPORTED_MODULE_5__","lodash_keyBy__WEBPACK_IMPORTED_MODULE_5___default","_extends","assign","_objectWithoutProperties","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","create","writable","setPrototypeOf","__proto__","NODE_ENV","PUBLIC_URL","REACT_APP_ENV","REACT_APP_URL_BASE_API","REACT_APP_URL_BASE_MOCK_API","REACT_APP_URL_PROXY_API","REACT_APP_VERSION_API","ChartComponent","_React$Component","_temp","_this","_len","_key","handleOnClick","chartInstance","_this$props","onElementsClick","ref","componentWillMount","componentDidMount","renderChart","componentDidUpdate","redraw","updateChart","shouldComponentUpdate","nextProps","_props","nextData","transformDataProp","shadowDataProp","componentWillUnmount","memoizeDataProps","checkDatasets","isDev","usingCustomKeyProvider","datasetKeyProvider","getLabelAsKey","multipleDatasets","shouldWarn","_this2","currentDatasets","nextDatasets","currentDatasetsIndexed","pid","otherProps","rest","_props2","defaultProps","_props3","Component","propTypes","oneOfType","isRequired","number","arrayOf","bool","propName","componentName","_React$Component2","Doughnut","_this4","_ref","_React$Component3","Pie","_this6","_ref2","_React$Component4","_this8","_ref3","_React$Component5","_this10","_ref4","_React$Component6","HorizontalBar","_this12","_ref5","_React$Component7","Radar","_this14","_ref6","_React$Component8","Polar","_this16","_ref7","_React$Component9","Bubble","_this18","_ref8","_React$Component10","Scatter","_this20","_ref9","equalArrays","equalByTag","equalObjects","getTag","argsTag","arrayTag","objectTag","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","assocIndexOf","LARGE_ARRAY_SIZE","pairs","isMasked","toSource","reIsHostCtor","funcProto","reIsNative","RegExp","replace","nativeObjectToString","isOwn","unmasked","coreJsData","maskSrcKey","IE_PROTO","Hash","hashClear","hashDelete","hashGet","hashHas","hashSet","HASH_UNDEFINED","getMapData","setCacheAdd","setCacheHas","predicate","Uint8Array","mapToArray","setToArray","boolTag","dateTag","errorTag","mapTag","numberTag","regexpTag","setTag","stringTag","arrayBufferTag","dataViewTag","symbolProto","symbolValueOf","byteLength","byteOffset","buffer","message","getAllKeys","objProps","objLength","skipCtor","objValue","objCtor","othCtor","baseGetAllKeys","getSymbols","arrayPush","keysFunc","symbolsFunc","arrayFilter","stubArray","nativeGetSymbols","getOwnPropertySymbols","symbol","resIndex","baseTimes","isIndex","inherited","isArr","isArg","isBuff","isType","skipIndexes","iteratee","typedArrayTags","freeProcess","require","binding","isPrototype","nativeKeys","Ctor","overArg","transform","DataView","Promise","Set","WeakMap","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","ArrayBuffer","ctorString","find","createFind","baseIteratee","findIndexFunc","iterable","baseIsMatch","getMatchData","matchesStrictComparable","matchData","noCustomizer","isStrictComparable","hasIn","baseGet","memoizeCapped","rePropName","reEscapeChar","charCodeAt","quote","subString","memoize","MAX_MEMOIZE_SIZE","FUNC_ERROR_TEXT","resolver","memoized","Cache","baseToString","arrayMap","symbolToString","baseHasIn","hasPath","hasFunc","baseProperty","basePropertyDeep","baseFindIndex","toInteger","nativeMax","fromRight","toFinite","remainder","toNumber","NAN","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","isBinary","baseAssignValue","keyBy","createAggregator","arrayAggregator","baseAggregator","setter","initializer","accumulator","baseEach","baseForOwn","createBaseEach","baseFor","createBaseFor","eachFunc","CustomTooltips","tooltipModel","ClassName","ABOVE","BELOW","CHARTJS_TOOLTIP","NO_TRANSFORM","TOOLTIP_BODY","TOOLTIP_BODY_ITEM","TOOLTIP_BODY_ITEM_COLOR","TOOLTIP_BODY_ITEM_LABEL","TOOLTIP_BODY_ITEM_VALUE","TOOLTIP_HEADER","TOOLTIP_HEADER_ITEM","Selector","DIV","SPAN","TOOLTIP","_idMaker","random","_canvasId","_setCanvasId","titleLines","tooltipHeader","tooltipHeaderTitle","innerHTML","tooltipBody","tooltipBodyItems","tooltipBodyItem","colors","tooltipBodyItemColor","tooltipBodyItemLabel","tooltipBodyItemValue","_tooltipBodyItemValue","positionY","offsetTop","positionX","createCommonjsModule","_core","core","version","__e","_global","__g","_shared","store","copyright","px","_uid","_wks","USE_SYMBOL","$exports","_isObject","it","_anObject","_fails","_descriptors","document$1","is","_domCreate","_ie8DomDefine","dP","_objectDp","O","P","Attributes","S","_toPrimitive","_propertyDesc","bitmap","_hide","UNSCOPABLES","ArrayProto","_addToUnscopables","_iterStep","done","_iterators","_cof","_iobject","_defined","_toIobject","_has","_functionToString","_redefine","SRC","TPL","inspectSource","safe","_aFunction","_ctx","that","$export","own","IS_FORCED","F","IS_GLOBAL","G","IS_STATIC","IS_PROTO","IS_BIND","B","expProto","U","W","R","IS_INCLUDES","_export","_toInteger","_toLength","min$1","shared","_sharedKey","arrayIndexOf","$this","_toAbsoluteIndex","_enumBugKeys","_objectKeys","names","_objectKeysInternal","_objectDps","defineProperties","Properties","document$2","_html","documentElement","IE_PROTO$1","Empty","_createDict","iframeDocument","iframe","contentWindow","open","write","lt","close","_objectCreate","def","TAG","_setToStringTag","stat","IteratorPrototype","_iterCreate","NAME","_toObject","IE_PROTO$2","ObjectProto","_objectGpo","getPrototypeOf","ITERATOR","BUGGY","returnThis","es6_array_iterator","Base","DEFAULT","IS_SET","FORCED","methods","getMethod","kind","proto","DEF_VALUES","VALUES_BUG","$native","$default","$entries","$anyNative","_iterDefine","iterated","_t","_i","_k","Arguments","ITERATOR$1","TO_STRING_TAG","ArrayValues","DOMIterables","CSSRuleList","CSSStyleDeclaration","CSSValueList","ClientRectList","DOMRectList","DOMStringList","DOMTokenList","DataTransferItemList","FileList","HTMLAllCollection","HTMLCollection","HTMLFormElement","HTMLSelectElement","MediaList","MimeTypeArray","NamedNodeMap","NodeList","PaintRequestList","Plugin","PluginArray","SVGLengthList","SVGNumberList","SVGPathSegList","SVGPointList","SVGStringList","SVGTransformList","SourceBufferList","StyleSheetList","TextTrackCueList","TextTrackList","TouchList","collections","explicit","Collection","TAG$1","ARG","_classof","T","tryGet","callee","KEY","_objectSap","_objectGops","_objectPie","$assign","_objectAssign","A","K","aLen","isEnum","at","TO_STRING","_stringAt","_advanceStringIndex","unicode","builtinExec","_regexpExecAbstract","_flags","ignoreCase","multiline","sticky","nativeExec","nativeReplace","patchedExec","UPDATES_LAST_INDEX_WRONG","re1","re2","NPCG_INCLUDED","lastIndex","reCopy","re","_regexpExec","forced","SPECIES","REPLACE_SUPPORTS_NAMED_GROUPS","groups","SPLIT_WORKS_WITH_OVERWRITTEN_EXEC","originalExec","_fixReWks","SYMBOL","DELEGATES_TO_SYMBOL","DELEGATES_TO_EXEC","execCalled","nativeRegExpMethod","fns","nativeMethod","regexp","arg2","forceStringMethod","strfn","rxfn","max$1","min$2","floor$1","SUBSTITUTION_SYMBOLS","SUBSTITUTION_SYMBOLS_NO_NAMED","defined","REPLACE","$replace","maybeCallNative","searchValue","replaceValue","rx","functionalReplace","fullUnicode","results","matchStr","accumulatedResult","nextSourcePosition","matched","captures","namedCaptures","replacerArgs","replacement","getSubstitution","tailPos","symbols","capture","MATCH","$match","SPECIES$1","$min","$push","SUPPORTS_Y","SPLIT","$split","internalSplit","separator","limit","isRegExp","_isRegexp","lastLength","output","flags","lastLastIndex","splitLimit","separatorCopy","splitter","C","D","_speciesConstructor","unicodeMatching","lim","isCustomProperty","Boolean","documentMode","cssCustomProperties","sheets","styleSheets","cssText","rules","cssRules","selectorText","substring","lastIndexOf","trim","getCssCustomProperties","$toString","define","asideMenuCssClasses","checkBreakpoint","breakpoint","list","deepObjectsMerge","_arr","getColor","rawProperty","hexToRgb","hexToRgba","rgbToHex","sidebarCssClasses","validBreakpoints"],"mappings":"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","file":"static/js/21.b0e33871.chunk.js","sourcesContent":["var freeGlobal = require('./_freeGlobal');\n/** Detect free variable `self`. */\n\n\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n/** Used as a reference to the global object. */\n\nvar root = freeGlobal || freeSelf || Function('return this')();\nmodule.exports = root;","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\nmodule.exports = isArray;","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\n\n\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n/** `Object#toString` result references. */\n\n\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n\n  return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);\n}\n\nmodule.exports = baseGetTag;","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;","var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `ListCache`.\n\n\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\nmodule.exports = ListCache;","var eq = require('./eq');\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\n\n\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n\n  return -1;\n}\n\nmodule.exports = assocIndexOf;","var root = require('./_root');\n/** Built-in value references. */\n\n\nvar Symbol = root.Symbol;\nmodule.exports = Symbol;","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;","var getNative = require('./_getNative');\n/* Built-in method references that are verified to be native. */\n\n\nvar nativeCreate = getNative(Object, 'create');\nmodule.exports = nativeCreate;","var isKeyable = require('./_isKeyable');\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\n\n\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;\n}\n\nmodule.exports = getMapData;","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\n\n\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar symbolTag = '[object Symbol]';\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\n\nfunction isSymbol(value) {\n  return typeof value == 'symbol' || isObjectLike(value) && baseGetTag(value) == symbolTag;\n}\n\nmodule.exports = isSymbol;","var isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0;\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\n\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n\nmodule.exports = toKey;","var baseIsEqualDeep = require('./_baseIsEqualDeep'),\n    isObjectLike = require('./isObjectLike');\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\n\n\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n\n  if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {\n    return value !== value && other !== other;\n  }\n\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Map = getNative(root, 'Map');\nmodule.exports = Map;","var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `MapCache`.\n\n\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\nmodule.exports = MapCache;","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\n\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\n\n\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;","var baseMatches = require('./_baseMatches'),\n    baseMatchesProperty = require('./_baseMatchesProperty'),\n    identity = require('./identity'),\n    isArray = require('./isArray'),\n    property = require('./property');\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\n\n\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n\n  if (value == null) {\n    return identity;\n  }\n\n  if (typeof value == 'object') {\n    return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);\n  }\n\n  return property(value);\n}\n\nmodule.exports = baseIteratee;","var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n/** Used to match property names within property paths. */\n\n\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\n\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n\n  var type = typeof value;\n\n  if (type == 'number' || type == 'symbol' || type == 'boolean' || value == null || isSymbol(value)) {\n    return true;\n  }\n\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);\n}\n\nmodule.exports = isKey;","/*!\n * Chart.js v2.8.0\n * https://www.chartjs.org\n * (c) 2019 Chart.js Contributors\n * Released under the MIT License\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(function () {\n    try {\n      return require('moment');\n    } catch (e) {}\n  }()) : typeof define === 'function' && define.amd ? define(['require'], function (require) {\n    return factory(function () {\n      try {\n        return require('moment');\n      } catch (e) {}\n    }());\n  }) : global.Chart = factory(global.moment);\n})(this, function (moment) {\n  'use strict';\n\n  moment = moment && moment.hasOwnProperty('default') ? moment['default'] : moment;\n  /* MIT license */\n\n  var conversions = {\n    rgb2hsl: rgb2hsl,\n    rgb2hsv: rgb2hsv,\n    rgb2hwb: rgb2hwb,\n    rgb2cmyk: rgb2cmyk,\n    rgb2keyword: rgb2keyword,\n    rgb2xyz: rgb2xyz,\n    rgb2lab: rgb2lab,\n    rgb2lch: rgb2lch,\n    hsl2rgb: hsl2rgb,\n    hsl2hsv: hsl2hsv,\n    hsl2hwb: hsl2hwb,\n    hsl2cmyk: hsl2cmyk,\n    hsl2keyword: hsl2keyword,\n    hsv2rgb: hsv2rgb,\n    hsv2hsl: hsv2hsl,\n    hsv2hwb: hsv2hwb,\n    hsv2cmyk: hsv2cmyk,\n    hsv2keyword: hsv2keyword,\n    hwb2rgb: hwb2rgb,\n    hwb2hsl: hwb2hsl,\n    hwb2hsv: hwb2hsv,\n    hwb2cmyk: hwb2cmyk,\n    hwb2keyword: hwb2keyword,\n    cmyk2rgb: cmyk2rgb,\n    cmyk2hsl: cmyk2hsl,\n    cmyk2hsv: cmyk2hsv,\n    cmyk2hwb: cmyk2hwb,\n    cmyk2keyword: cmyk2keyword,\n    keyword2rgb: keyword2rgb,\n    keyword2hsl: keyword2hsl,\n    keyword2hsv: keyword2hsv,\n    keyword2hwb: keyword2hwb,\n    keyword2cmyk: keyword2cmyk,\n    keyword2lab: keyword2lab,\n    keyword2xyz: keyword2xyz,\n    xyz2rgb: xyz2rgb,\n    xyz2lab: xyz2lab,\n    xyz2lch: xyz2lch,\n    lab2xyz: lab2xyz,\n    lab2rgb: lab2rgb,\n    lab2lch: lab2lch,\n    lch2lab: lch2lab,\n    lch2xyz: lch2xyz,\n    lch2rgb: lch2rgb\n  };\n\n  function rgb2hsl(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        l;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    l = (min + max) / 2;\n    if (max == min) s = 0;else if (l <= 0.5) s = delta / (max + min);else s = delta / (2 - max - min);\n    return [h, s * 100, l * 100];\n  }\n\n  function rgb2hsv(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        v;\n    if (max == 0) s = 0;else s = delta / max * 1000 / 10;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    v = max / 255 * 1000 / 10;\n    return [h, s, v];\n  }\n\n  function rgb2hwb(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        h = rgb2hsl(rgb)[0],\n        w = 1 / 255 * Math.min(r, Math.min(g, b)),\n        b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n    return [h, w * 100, b * 100];\n  }\n\n  function rgb2cmyk(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        c,\n        m,\n        y,\n        k;\n    k = Math.min(1 - r, 1 - g, 1 - b);\n    c = (1 - r - k) / (1 - k) || 0;\n    m = (1 - g - k) / (1 - k) || 0;\n    y = (1 - b - k) / (1 - k) || 0;\n    return [c * 100, m * 100, y * 100, k * 100];\n  }\n\n  function rgb2keyword(rgb) {\n    return reverseKeywords[JSON.stringify(rgb)];\n  }\n\n  function rgb2xyz(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255; // assume sRGB\n\n    r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n    g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n    b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n    var x = r * 0.4124 + g * 0.3576 + b * 0.1805;\n    var y = r * 0.2126 + g * 0.7152 + b * 0.0722;\n    var z = r * 0.0193 + g * 0.1192 + b * 0.9505;\n    return [x * 100, y * 100, z * 100];\n  }\n\n  function rgb2lab(rgb) {\n    var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function rgb2lch(args) {\n    return lab2lch(rgb2lab(args));\n  }\n\n  function hsl2rgb(hsl) {\n    var h = hsl[0] / 360,\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        t1,\n        t2,\n        t3,\n        rgb,\n        val;\n\n    if (s == 0) {\n      val = l * 255;\n      return [val, val, val];\n    }\n\n    if (l < 0.5) t2 = l * (1 + s);else t2 = l + s - l * s;\n    t1 = 2 * l - t2;\n    rgb = [0, 0, 0];\n\n    for (var i = 0; i < 3; i++) {\n      t3 = h + 1 / 3 * -(i - 1);\n      t3 < 0 && t3++;\n      t3 > 1 && t3--;\n      if (6 * t3 < 1) val = t1 + (t2 - t1) * 6 * t3;else if (2 * t3 < 1) val = t2;else if (3 * t3 < 2) val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;else val = t1;\n      rgb[i] = val * 255;\n    }\n\n    return rgb;\n  }\n\n  function hsl2hsv(hsl) {\n    var h = hsl[0],\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        sv,\n        v;\n\n    if (l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n    }\n\n    l *= 2;\n    s *= l <= 1 ? l : 2 - l;\n    v = (l + s) / 2;\n    sv = 2 * s / (l + s);\n    return [h, sv * 100, v * 100];\n  }\n\n  function hsl2hwb(args) {\n    return rgb2hwb(hsl2rgb(args));\n  }\n\n  function hsl2cmyk(args) {\n    return rgb2cmyk(hsl2rgb(args));\n  }\n\n  function hsl2keyword(args) {\n    return rgb2keyword(hsl2rgb(args));\n  }\n\n  function hsv2rgb(hsv) {\n    var h = hsv[0] / 60,\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        hi = Math.floor(h) % 6;\n    var f = h - Math.floor(h),\n        p = 255 * v * (1 - s),\n        q = 255 * v * (1 - s * f),\n        t = 255 * v * (1 - s * (1 - f)),\n        v = 255 * v;\n\n    switch (hi) {\n      case 0:\n        return [v, t, p];\n\n      case 1:\n        return [q, v, p];\n\n      case 2:\n        return [p, v, t];\n\n      case 3:\n        return [p, q, v];\n\n      case 4:\n        return [t, p, v];\n\n      case 5:\n        return [v, p, q];\n    }\n  }\n\n  function hsv2hsl(hsv) {\n    var h = hsv[0],\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        sl,\n        l;\n    l = (2 - s) * v;\n    sl = s * v;\n    sl /= l <= 1 ? l : 2 - l;\n    sl = sl || 0;\n    l /= 2;\n    return [h, sl * 100, l * 100];\n  }\n\n  function hsv2hwb(args) {\n    return rgb2hwb(hsv2rgb(args));\n  }\n\n  function hsv2cmyk(args) {\n    return rgb2cmyk(hsv2rgb(args));\n  }\n\n  function hsv2keyword(args) {\n    return rgb2keyword(hsv2rgb(args));\n  } // http://dev.w3.org/csswg/css-color/#hwb-to-rgb\n\n\n  function hwb2rgb(hwb) {\n    var h = hwb[0] / 360,\n        wh = hwb[1] / 100,\n        bl = hwb[2] / 100,\n        ratio = wh + bl,\n        i,\n        v,\n        f,\n        n; // wh + bl cant be > 1\n\n    if (ratio > 1) {\n      wh /= ratio;\n      bl /= ratio;\n    }\n\n    i = Math.floor(6 * h);\n    v = 1 - bl;\n    f = 6 * h - i;\n\n    if ((i & 0x01) != 0) {\n      f = 1 - f;\n    }\n\n    n = wh + f * (v - wh); // linear interpolation\n\n    switch (i) {\n      default:\n      case 6:\n      case 0:\n        r = v;\n        g = n;\n        b = wh;\n        break;\n\n      case 1:\n        r = n;\n        g = v;\n        b = wh;\n        break;\n\n      case 2:\n        r = wh;\n        g = v;\n        b = n;\n        break;\n\n      case 3:\n        r = wh;\n        g = n;\n        b = v;\n        break;\n\n      case 4:\n        r = n;\n        g = wh;\n        b = v;\n        break;\n\n      case 5:\n        r = v;\n        g = wh;\n        b = n;\n        break;\n    }\n\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function hwb2hsl(args) {\n    return rgb2hsl(hwb2rgb(args));\n  }\n\n  function hwb2hsv(args) {\n    return rgb2hsv(hwb2rgb(args));\n  }\n\n  function hwb2cmyk(args) {\n    return rgb2cmyk(hwb2rgb(args));\n  }\n\n  function hwb2keyword(args) {\n    return rgb2keyword(hwb2rgb(args));\n  }\n\n  function cmyk2rgb(cmyk) {\n    var c = cmyk[0] / 100,\n        m = cmyk[1] / 100,\n        y = cmyk[2] / 100,\n        k = cmyk[3] / 100,\n        r,\n        g,\n        b;\n    r = 1 - Math.min(1, c * (1 - k) + k);\n    g = 1 - Math.min(1, m * (1 - k) + k);\n    b = 1 - Math.min(1, y * (1 - k) + k);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function cmyk2hsl(args) {\n    return rgb2hsl(cmyk2rgb(args));\n  }\n\n  function cmyk2hsv(args) {\n    return rgb2hsv(cmyk2rgb(args));\n  }\n\n  function cmyk2hwb(args) {\n    return rgb2hwb(cmyk2rgb(args));\n  }\n\n  function cmyk2keyword(args) {\n    return rgb2keyword(cmyk2rgb(args));\n  }\n\n  function xyz2rgb(xyz) {\n    var x = xyz[0] / 100,\n        y = xyz[1] / 100,\n        z = xyz[2] / 100,\n        r,\n        g,\n        b;\n    r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n    g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n    b = x * 0.0557 + y * -0.2040 + z * 1.0570; // assume sRGB\n\n    r = r > 0.0031308 ? 1.055 * Math.pow(r, 1.0 / 2.4) - 0.055 : r = r * 12.92;\n    g = g > 0.0031308 ? 1.055 * Math.pow(g, 1.0 / 2.4) - 0.055 : g = g * 12.92;\n    b = b > 0.0031308 ? 1.055 * Math.pow(b, 1.0 / 2.4) - 0.055 : b = b * 12.92;\n    r = Math.min(Math.max(0, r), 1);\n    g = Math.min(Math.max(0, g), 1);\n    b = Math.min(Math.max(0, b), 1);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function xyz2lab(xyz) {\n    var x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function xyz2lch(args) {\n    return lab2lch(xyz2lab(args));\n  }\n\n  function lab2xyz(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        x,\n        y,\n        z,\n        y2;\n\n    if (l <= 8) {\n      y = l * 100 / 903.3;\n      y2 = 7.787 * (y / 100) + 16 / 116;\n    } else {\n      y = 100 * Math.pow((l + 16) / 116, 3);\n      y2 = Math.pow(y / 100, 1 / 3);\n    }\n\n    x = x / 95.047 <= 0.008856 ? x = 95.047 * (a / 500 + y2 - 16 / 116) / 7.787 : 95.047 * Math.pow(a / 500 + y2, 3);\n    z = z / 108.883 <= 0.008859 ? z = 108.883 * (y2 - b / 200 - 16 / 116) / 7.787 : 108.883 * Math.pow(y2 - b / 200, 3);\n    return [x, y, z];\n  }\n\n  function lab2lch(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        hr,\n        h,\n        c;\n    hr = Math.atan2(b, a);\n    h = hr * 360 / 2 / Math.PI;\n\n    if (h < 0) {\n      h += 360;\n    }\n\n    c = Math.sqrt(a * a + b * b);\n    return [l, c, h];\n  }\n\n  function lab2rgb(args) {\n    return xyz2rgb(lab2xyz(args));\n  }\n\n  function lch2lab(lch) {\n    var l = lch[0],\n        c = lch[1],\n        h = lch[2],\n        a,\n        b,\n        hr;\n    hr = h / 360 * 2 * Math.PI;\n    a = c * Math.cos(hr);\n    b = c * Math.sin(hr);\n    return [l, a, b];\n  }\n\n  function lch2xyz(args) {\n    return lab2xyz(lch2lab(args));\n  }\n\n  function lch2rgb(args) {\n    return lab2rgb(lch2lab(args));\n  }\n\n  function keyword2rgb(keyword) {\n    return cssKeywords[keyword];\n  }\n\n  function keyword2hsl(args) {\n    return rgb2hsl(keyword2rgb(args));\n  }\n\n  function keyword2hsv(args) {\n    return rgb2hsv(keyword2rgb(args));\n  }\n\n  function keyword2hwb(args) {\n    return rgb2hwb(keyword2rgb(args));\n  }\n\n  function keyword2cmyk(args) {\n    return rgb2cmyk(keyword2rgb(args));\n  }\n\n  function keyword2lab(args) {\n    return rgb2lab(keyword2rgb(args));\n  }\n\n  function keyword2xyz(args) {\n    return rgb2xyz(keyword2rgb(args));\n  }\n\n  var cssKeywords = {\n    aliceblue: [240, 248, 255],\n    antiquewhite: [250, 235, 215],\n    aqua: [0, 255, 255],\n    aquamarine: [127, 255, 212],\n    azure: [240, 255, 255],\n    beige: [245, 245, 220],\n    bisque: [255, 228, 196],\n    black: [0, 0, 0],\n    blanchedalmond: [255, 235, 205],\n    blue: [0, 0, 255],\n    blueviolet: [138, 43, 226],\n    brown: [165, 42, 42],\n    burlywood: [222, 184, 135],\n    cadetblue: [95, 158, 160],\n    chartreuse: [127, 255, 0],\n    chocolate: [210, 105, 30],\n    coral: [255, 127, 80],\n    cornflowerblue: [100, 149, 237],\n    cornsilk: [255, 248, 220],\n    crimson: [220, 20, 60],\n    cyan: [0, 255, 255],\n    darkblue: [0, 0, 139],\n    darkcyan: [0, 139, 139],\n    darkgoldenrod: [184, 134, 11],\n    darkgray: [169, 169, 169],\n    darkgreen: [0, 100, 0],\n    darkgrey: [169, 169, 169],\n    darkkhaki: [189, 183, 107],\n    darkmagenta: [139, 0, 139],\n    darkolivegreen: [85, 107, 47],\n    darkorange: [255, 140, 0],\n    darkorchid: [153, 50, 204],\n    darkred: [139, 0, 0],\n    darksalmon: [233, 150, 122],\n    darkseagreen: [143, 188, 143],\n    darkslateblue: [72, 61, 139],\n    darkslategray: [47, 79, 79],\n    darkslategrey: [47, 79, 79],\n    darkturquoise: [0, 206, 209],\n    darkviolet: [148, 0, 211],\n    deeppink: [255, 20, 147],\n    deepskyblue: [0, 191, 255],\n    dimgray: [105, 105, 105],\n    dimgrey: [105, 105, 105],\n    dodgerblue: [30, 144, 255],\n    firebrick: [178, 34, 34],\n    floralwhite: [255, 250, 240],\n    forestgreen: [34, 139, 34],\n    fuchsia: [255, 0, 255],\n    gainsboro: [220, 220, 220],\n    ghostwhite: [248, 248, 255],\n    gold: [255, 215, 0],\n    goldenrod: [218, 165, 32],\n    gray: [128, 128, 128],\n    green: [0, 128, 0],\n    greenyellow: [173, 255, 47],\n    grey: [128, 128, 128],\n    honeydew: [240, 255, 240],\n    hotpink: [255, 105, 180],\n    indianred: [205, 92, 92],\n    indigo: [75, 0, 130],\n    ivory: [255, 255, 240],\n    khaki: [240, 230, 140],\n    lavender: [230, 230, 250],\n    lavenderblush: [255, 240, 245],\n    lawngreen: [124, 252, 0],\n    lemonchiffon: [255, 250, 205],\n    lightblue: [173, 216, 230],\n    lightcoral: [240, 128, 128],\n    lightcyan: [224, 255, 255],\n    lightgoldenrodyellow: [250, 250, 210],\n    lightgray: [211, 211, 211],\n    lightgreen: [144, 238, 144],\n    lightgrey: [211, 211, 211],\n    lightpink: [255, 182, 193],\n    lightsalmon: [255, 160, 122],\n    lightseagreen: [32, 178, 170],\n    lightskyblue: [135, 206, 250],\n    lightslategray: [119, 136, 153],\n    lightslategrey: [119, 136, 153],\n    lightsteelblue: [176, 196, 222],\n    lightyellow: [255, 255, 224],\n    lime: [0, 255, 0],\n    limegreen: [50, 205, 50],\n    linen: [250, 240, 230],\n    magenta: [255, 0, 255],\n    maroon: [128, 0, 0],\n    mediumaquamarine: [102, 205, 170],\n    mediumblue: [0, 0, 205],\n    mediumorchid: [186, 85, 211],\n    mediumpurple: [147, 112, 219],\n    mediumseagreen: [60, 179, 113],\n    mediumslateblue: [123, 104, 238],\n    mediumspringgreen: [0, 250, 154],\n    mediumturquoise: [72, 209, 204],\n    mediumvioletred: [199, 21, 133],\n    midnightblue: [25, 25, 112],\n    mintcream: [245, 255, 250],\n    mistyrose: [255, 228, 225],\n    moccasin: [255, 228, 181],\n    navajowhite: [255, 222, 173],\n    navy: [0, 0, 128],\n    oldlace: [253, 245, 230],\n    olive: [128, 128, 0],\n    olivedrab: [107, 142, 35],\n    orange: [255, 165, 0],\n    orangered: [255, 69, 0],\n    orchid: [218, 112, 214],\n    palegoldenrod: [238, 232, 170],\n    palegreen: [152, 251, 152],\n    paleturquoise: [175, 238, 238],\n    palevioletred: [219, 112, 147],\n    papayawhip: [255, 239, 213],\n    peachpuff: [255, 218, 185],\n    peru: [205, 133, 63],\n    pink: [255, 192, 203],\n    plum: [221, 160, 221],\n    powderblue: [176, 224, 230],\n    purple: [128, 0, 128],\n    rebeccapurple: [102, 51, 153],\n    red: [255, 0, 0],\n    rosybrown: [188, 143, 143],\n    royalblue: [65, 105, 225],\n    saddlebrown: [139, 69, 19],\n    salmon: [250, 128, 114],\n    sandybrown: [244, 164, 96],\n    seagreen: [46, 139, 87],\n    seashell: [255, 245, 238],\n    sienna: [160, 82, 45],\n    silver: [192, 192, 192],\n    skyblue: [135, 206, 235],\n    slateblue: [106, 90, 205],\n    slategray: [112, 128, 144],\n    slategrey: [112, 128, 144],\n    snow: [255, 250, 250],\n    springgreen: [0, 255, 127],\n    steelblue: [70, 130, 180],\n    tan: [210, 180, 140],\n    teal: [0, 128, 128],\n    thistle: [216, 191, 216],\n    tomato: [255, 99, 71],\n    turquoise: [64, 224, 208],\n    violet: [238, 130, 238],\n    wheat: [245, 222, 179],\n    white: [255, 255, 255],\n    whitesmoke: [245, 245, 245],\n    yellow: [255, 255, 0],\n    yellowgreen: [154, 205, 50]\n  };\n  var reverseKeywords = {};\n\n  for (var key in cssKeywords) {\n    reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n  }\n\n  var convert = function convert() {\n    return new Converter();\n  };\n\n  for (var func in conversions) {\n    // export Raw versions\n    convert[func + \"Raw\"] = function (func) {\n      // accept array or plain args\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        return conversions[func](arg);\n      };\n    }(func);\n\n    var pair = /(\\w+)2(\\w+)/.exec(func),\n        from = pair[1],\n        to = pair[2]; // export rgb2hsl and [\"rgb\"][\"hsl\"]\n\n    convert[from] = convert[from] || {};\n\n    convert[from][to] = convert[func] = function (func) {\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        var val = conversions[func](arg);\n        if (typeof val == \"string\" || val === undefined) return val; // keyword\n\n        for (var i = 0; i < val.length; i++) {\n          val[i] = Math.round(val[i]);\n        }\n\n        return val;\n      };\n    }(func);\n  }\n  /* Converter does lazy conversion and caching */\n\n\n  var Converter = function Converter() {\n    this.convs = {};\n  };\n  /* Either get the values for a space or\n    set the values for a space, depending on args */\n\n\n  Converter.prototype.routeSpace = function (space, args) {\n    var values = args[0];\n\n    if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);\n    }\n\n    return this.setValues(space, values);\n  };\n  /* Set the values for a space, invalidating cache */\n\n\n  Converter.prototype.setValues = function (space, values) {\n    this.space = space;\n    this.convs = {};\n    this.convs[space] = values;\n    return this;\n  };\n  /* Get the values for a space. If there's already\n    a conversion for the space, fetch it, otherwise\n    compute it */\n\n\n  Converter.prototype.getValues = function (space) {\n    var vals = this.convs[space];\n\n    if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n      this.convs[space] = vals;\n    }\n\n    return vals;\n  };\n\n  [\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function (space) {\n    Converter.prototype[space] = function (vals) {\n      return this.routeSpace(space, arguments);\n    };\n  });\n  var colorConvert = convert;\n  var colorName = {\n    \"aliceblue\": [240, 248, 255],\n    \"antiquewhite\": [250, 235, 215],\n    \"aqua\": [0, 255, 255],\n    \"aquamarine\": [127, 255, 212],\n    \"azure\": [240, 255, 255],\n    \"beige\": [245, 245, 220],\n    \"bisque\": [255, 228, 196],\n    \"black\": [0, 0, 0],\n    \"blanchedalmond\": [255, 235, 205],\n    \"blue\": [0, 0, 255],\n    \"blueviolet\": [138, 43, 226],\n    \"brown\": [165, 42, 42],\n    \"burlywood\": [222, 184, 135],\n    \"cadetblue\": [95, 158, 160],\n    \"chartreuse\": [127, 255, 0],\n    \"chocolate\": [210, 105, 30],\n    \"coral\": [255, 127, 80],\n    \"cornflowerblue\": [100, 149, 237],\n    \"cornsilk\": [255, 248, 220],\n    \"crimson\": [220, 20, 60],\n    \"cyan\": [0, 255, 255],\n    \"darkblue\": [0, 0, 139],\n    \"darkcyan\": [0, 139, 139],\n    \"darkgoldenrod\": [184, 134, 11],\n    \"darkgray\": [169, 169, 169],\n    \"darkgreen\": [0, 100, 0],\n    \"darkgrey\": [169, 169, 169],\n    \"darkkhaki\": [189, 183, 107],\n    \"darkmagenta\": [139, 0, 139],\n    \"darkolivegreen\": [85, 107, 47],\n    \"darkorange\": [255, 140, 0],\n    \"darkorchid\": [153, 50, 204],\n    \"darkred\": [139, 0, 0],\n    \"darksalmon\": [233, 150, 122],\n    \"darkseagreen\": [143, 188, 143],\n    \"darkslateblue\": [72, 61, 139],\n    \"darkslategray\": [47, 79, 79],\n    \"darkslategrey\": [47, 79, 79],\n    \"darkturquoise\": [0, 206, 209],\n    \"darkviolet\": [148, 0, 211],\n    \"deeppink\": [255, 20, 147],\n    \"deepskyblue\": [0, 191, 255],\n    \"dimgray\": [105, 105, 105],\n    \"dimgrey\": [105, 105, 105],\n    \"dodgerblue\": [30, 144, 255],\n    \"firebrick\": [178, 34, 34],\n    \"floralwhite\": [255, 250, 240],\n    \"forestgreen\": [34, 139, 34],\n    \"fuchsia\": [255, 0, 255],\n    \"gainsboro\": [220, 220, 220],\n    \"ghostwhite\": [248, 248, 255],\n    \"gold\": [255, 215, 0],\n    \"goldenrod\": [218, 165, 32],\n    \"gray\": [128, 128, 128],\n    \"green\": [0, 128, 0],\n    \"greenyellow\": [173, 255, 47],\n    \"grey\": [128, 128, 128],\n    \"honeydew\": [240, 255, 240],\n    \"hotpink\": [255, 105, 180],\n    \"indianred\": [205, 92, 92],\n    \"indigo\": [75, 0, 130],\n    \"ivory\": [255, 255, 240],\n    \"khaki\": [240, 230, 140],\n    \"lavender\": [230, 230, 250],\n    \"lavenderblush\": [255, 240, 245],\n    \"lawngreen\": [124, 252, 0],\n    \"lemonchiffon\": [255, 250, 205],\n    \"lightblue\": [173, 216, 230],\n    \"lightcoral\": [240, 128, 128],\n    \"lightcyan\": [224, 255, 255],\n    \"lightgoldenrodyellow\": [250, 250, 210],\n    \"lightgray\": [211, 211, 211],\n    \"lightgreen\": [144, 238, 144],\n    \"lightgrey\": [211, 211, 211],\n    \"lightpink\": [255, 182, 193],\n    \"lightsalmon\": [255, 160, 122],\n    \"lightseagreen\": [32, 178, 170],\n    \"lightskyblue\": [135, 206, 250],\n    \"lightslategray\": [119, 136, 153],\n    \"lightslategrey\": [119, 136, 153],\n    \"lightsteelblue\": [176, 196, 222],\n    \"lightyellow\": [255, 255, 224],\n    \"lime\": [0, 255, 0],\n    \"limegreen\": [50, 205, 50],\n    \"linen\": [250, 240, 230],\n    \"magenta\": [255, 0, 255],\n    \"maroon\": [128, 0, 0],\n    \"mediumaquamarine\": [102, 205, 170],\n    \"mediumblue\": [0, 0, 205],\n    \"mediumorchid\": [186, 85, 211],\n    \"mediumpurple\": [147, 112, 219],\n    \"mediumseagreen\": [60, 179, 113],\n    \"mediumslateblue\": [123, 104, 238],\n    \"mediumspringgreen\": [0, 250, 154],\n    \"mediumturquoise\": [72, 209, 204],\n    \"mediumvioletred\": [199, 21, 133],\n    \"midnightblue\": [25, 25, 112],\n    \"mintcream\": [245, 255, 250],\n    \"mistyrose\": [255, 228, 225],\n    \"moccasin\": [255, 228, 181],\n    \"navajowhite\": [255, 222, 173],\n    \"navy\": [0, 0, 128],\n    \"oldlace\": [253, 245, 230],\n    \"olive\": [128, 128, 0],\n    \"olivedrab\": [107, 142, 35],\n    \"orange\": [255, 165, 0],\n    \"orangered\": [255, 69, 0],\n    \"orchid\": [218, 112, 214],\n    \"palegoldenrod\": [238, 232, 170],\n    \"palegreen\": [152, 251, 152],\n    \"paleturquoise\": [175, 238, 238],\n    \"palevioletred\": [219, 112, 147],\n    \"papayawhip\": [255, 239, 213],\n    \"peachpuff\": [255, 218, 185],\n    \"peru\": [205, 133, 63],\n    \"pink\": [255, 192, 203],\n    \"plum\": [221, 160, 221],\n    \"powderblue\": [176, 224, 230],\n    \"purple\": [128, 0, 128],\n    \"rebeccapurple\": [102, 51, 153],\n    \"red\": [255, 0, 0],\n    \"rosybrown\": [188, 143, 143],\n    \"royalblue\": [65, 105, 225],\n    \"saddlebrown\": [139, 69, 19],\n    \"salmon\": [250, 128, 114],\n    \"sandybrown\": [244, 164, 96],\n    \"seagreen\": [46, 139, 87],\n    \"seashell\": [255, 245, 238],\n    \"sienna\": [160, 82, 45],\n    \"silver\": [192, 192, 192],\n    \"skyblue\": [135, 206, 235],\n    \"slateblue\": [106, 90, 205],\n    \"slategray\": [112, 128, 144],\n    \"slategrey\": [112, 128, 144],\n    \"snow\": [255, 250, 250],\n    \"springgreen\": [0, 255, 127],\n    \"steelblue\": [70, 130, 180],\n    \"tan\": [210, 180, 140],\n    \"teal\": [0, 128, 128],\n    \"thistle\": [216, 191, 216],\n    \"tomato\": [255, 99, 71],\n    \"turquoise\": [64, 224, 208],\n    \"violet\": [238, 130, 238],\n    \"wheat\": [245, 222, 179],\n    \"white\": [255, 255, 255],\n    \"whitesmoke\": [245, 245, 245],\n    \"yellow\": [255, 255, 0],\n    \"yellowgreen\": [154, 205, 50]\n  };\n  /* MIT license */\n\n  var colorString = {\n    getRgba: getRgba,\n    getHsla: getHsla,\n    getRgb: getRgb,\n    getHsl: getHsl,\n    getHwb: getHwb,\n    getAlpha: getAlpha,\n    hexString: hexString,\n    rgbString: rgbString,\n    rgbaString: rgbaString,\n    percentString: percentString,\n    percentaString: percentaString,\n    hslString: hslString,\n    hslaString: hslaString,\n    hwbString: hwbString,\n    keyword: keyword\n  };\n\n  function getRgba(string) {\n    if (!string) {\n      return;\n    }\n\n    var abbr = /^#([a-fA-F0-9]{3,4})$/i,\n        hex = /^#([a-fA-F0-9]{6}([a-fA-F0-9]{2})?)$/i,\n        rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        keyword = /(\\w+)/;\n    var rgb = [0, 0, 0],\n        a = 1,\n        match = string.match(abbr),\n        hexAlpha = \"\";\n\n    if (match) {\n      match = match[1];\n      hexAlpha = match[3];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha + hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(hex)) {\n      hexAlpha = match[2];\n      match = match[1];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i + 1]);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n        return [0, 0, 0, 0];\n      }\n\n      rgb = colorName[match[1]];\n\n      if (!rgb) {\n        return;\n      }\n    }\n\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n    }\n\n    if (!a && a != 0) {\n      a = 1;\n    } else {\n      a = scale(a, 0, 1);\n    }\n\n    rgb[3] = a;\n    return rgb;\n  }\n\n  function getHsla(string) {\n    if (!string) {\n      return;\n    }\n\n    var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hsl);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n    }\n  }\n\n  function getHwb(string) {\n    if (!string) {\n      return;\n    }\n\n    var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hwb);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n    }\n  }\n\n  function getRgb(string) {\n    var rgba = getRgba(string);\n    return rgba && rgba.slice(0, 3);\n  }\n\n  function getHsl(string) {\n    var hsla = getHsla(string);\n    return hsla && hsla.slice(0, 3);\n  }\n\n  function getAlpha(string) {\n    var vals = getRgba(string);\n\n    if (vals) {\n      return vals[3];\n    } else if (vals = getHsla(string)) {\n      return vals[3];\n    } else if (vals = getHwb(string)) {\n      return vals[3];\n    }\n  } // generators\n\n\n  function hexString(rgba, a) {\n    var a = a !== undefined && rgba.length === 3 ? a : rgba[3];\n    return \"#\" + hexDouble(rgba[0]) + hexDouble(rgba[1]) + hexDouble(rgba[2]) + (a >= 0 && a < 1 ? hexDouble(Math.round(a * 255)) : \"\");\n  }\n\n  function rgbString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return rgbaString(rgba, alpha);\n    }\n\n    return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n  }\n\n  function rgbaString(rgba, alpha) {\n    if (alpha === undefined) {\n      alpha = rgba[3] !== undefined ? rgba[3] : 1;\n    }\n\n    return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \", \" + alpha + \")\";\n  }\n\n  function percentString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return percentaString(rgba, alpha);\n    }\n\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n  }\n\n  function percentaString(rgba, alpha) {\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n  }\n\n  function hslString(hsla, alpha) {\n    if (alpha < 1 || hsla[3] && hsla[3] < 1) {\n      return hslaString(hsla, alpha);\n    }\n\n    return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n  }\n\n  function hslaString(hsla, alpha) {\n    if (alpha === undefined) {\n      alpha = hsla[3] !== undefined ? hsla[3] : 1;\n    }\n\n    return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \" + alpha + \")\";\n  } // hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n  // (hwb have alpha optional & 1 is default value)\n\n\n  function hwbString(hwb, alpha) {\n    if (alpha === undefined) {\n      alpha = hwb[3] !== undefined ? hwb[3] : 1;\n    }\n\n    return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\" + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n  }\n\n  function keyword(rgb) {\n    return reverseNames[rgb.slice(0, 3)];\n  } // helpers\n\n\n  function scale(num, min, max) {\n    return Math.min(Math.max(min, num), max);\n  }\n\n  function hexDouble(num) {\n    var str = num.toString(16).toUpperCase();\n    return str.length < 2 ? \"0\" + str : str;\n  } //create a list of reverse color names\n\n\n  var reverseNames = {};\n\n  for (var name in colorName) {\n    reverseNames[colorName[name]] = name;\n  }\n  /* MIT license */\n\n\n  var Color = function Color(obj) {\n    if (obj instanceof Color) {\n      return obj;\n    }\n\n    if (!(this instanceof Color)) {\n      return new Color(obj);\n    }\n\n    this.valid = false;\n    this.values = {\n      rgb: [0, 0, 0],\n      hsl: [0, 0, 0],\n      hsv: [0, 0, 0],\n      hwb: [0, 0, 0],\n      cmyk: [0, 0, 0, 0],\n      alpha: 1\n    }; // parse Color() argument\n\n    var vals;\n\n    if (typeof obj === 'string') {\n      vals = colorString.getRgba(obj);\n\n      if (vals) {\n        this.setValues('rgb', vals);\n      } else if (vals = colorString.getHsla(obj)) {\n        this.setValues('hsl', vals);\n      } else if (vals = colorString.getHwb(obj)) {\n        this.setValues('hwb', vals);\n      }\n    } else if (typeof obj === 'object') {\n      vals = obj;\n\n      if (vals.r !== undefined || vals.red !== undefined) {\n        this.setValues('rgb', vals);\n      } else if (vals.l !== undefined || vals.lightness !== undefined) {\n        this.setValues('hsl', vals);\n      } else if (vals.v !== undefined || vals.value !== undefined) {\n        this.setValues('hsv', vals);\n      } else if (vals.w !== undefined || vals.whiteness !== undefined) {\n        this.setValues('hwb', vals);\n      } else if (vals.c !== undefined || vals.cyan !== undefined) {\n        this.setValues('cmyk', vals);\n      }\n    }\n  };\n\n  Color.prototype = {\n    isValid: function isValid() {\n      return this.valid;\n    },\n    rgb: function rgb() {\n      return this.setSpace('rgb', arguments);\n    },\n    hsl: function hsl() {\n      return this.setSpace('hsl', arguments);\n    },\n    hsv: function hsv() {\n      return this.setSpace('hsv', arguments);\n    },\n    hwb: function hwb() {\n      return this.setSpace('hwb', arguments);\n    },\n    cmyk: function cmyk() {\n      return this.setSpace('cmyk', arguments);\n    },\n    rgbArray: function rgbArray() {\n      return this.values.rgb;\n    },\n    hslArray: function hslArray() {\n      return this.values.hsl;\n    },\n    hsvArray: function hsvArray() {\n      return this.values.hsv;\n    },\n    hwbArray: function hwbArray() {\n      var values = this.values;\n\n      if (values.alpha !== 1) {\n        return values.hwb.concat([values.alpha]);\n      }\n\n      return values.hwb;\n    },\n    cmykArray: function cmykArray() {\n      return this.values.cmyk;\n    },\n    rgbaArray: function rgbaArray() {\n      var values = this.values;\n      return values.rgb.concat([values.alpha]);\n    },\n    hslaArray: function hslaArray() {\n      var values = this.values;\n      return values.hsl.concat([values.alpha]);\n    },\n    alpha: function alpha(val) {\n      if (val === undefined) {\n        return this.values.alpha;\n      }\n\n      this.setValues('alpha', val);\n      return this;\n    },\n    red: function red(val) {\n      return this.setChannel('rgb', 0, val);\n    },\n    green: function green(val) {\n      return this.setChannel('rgb', 1, val);\n    },\n    blue: function blue(val) {\n      return this.setChannel('rgb', 2, val);\n    },\n    hue: function hue(val) {\n      if (val) {\n        val %= 360;\n        val = val < 0 ? 360 + val : val;\n      }\n\n      return this.setChannel('hsl', 0, val);\n    },\n    saturation: function saturation(val) {\n      return this.setChannel('hsl', 1, val);\n    },\n    lightness: function lightness(val) {\n      return this.setChannel('hsl', 2, val);\n    },\n    saturationv: function saturationv(val) {\n      return this.setChannel('hsv', 1, val);\n    },\n    whiteness: function whiteness(val) {\n      return this.setChannel('hwb', 1, val);\n    },\n    blackness: function blackness(val) {\n      return this.setChannel('hwb', 2, val);\n    },\n    value: function value(val) {\n      return this.setChannel('hsv', 2, val);\n    },\n    cyan: function cyan(val) {\n      return this.setChannel('cmyk', 0, val);\n    },\n    magenta: function magenta(val) {\n      return this.setChannel('cmyk', 1, val);\n    },\n    yellow: function yellow(val) {\n      return this.setChannel('cmyk', 2, val);\n    },\n    black: function black(val) {\n      return this.setChannel('cmyk', 3, val);\n    },\n    hexString: function hexString() {\n      return colorString.hexString(this.values.rgb);\n    },\n    rgbString: function rgbString() {\n      return colorString.rgbString(this.values.rgb, this.values.alpha);\n    },\n    rgbaString: function rgbaString() {\n      return colorString.rgbaString(this.values.rgb, this.values.alpha);\n    },\n    percentString: function percentString() {\n      return colorString.percentString(this.values.rgb, this.values.alpha);\n    },\n    hslString: function hslString() {\n      return colorString.hslString(this.values.hsl, this.values.alpha);\n    },\n    hslaString: function hslaString() {\n      return colorString.hslaString(this.values.hsl, this.values.alpha);\n    },\n    hwbString: function hwbString() {\n      return colorString.hwbString(this.values.hwb, this.values.alpha);\n    },\n    keyword: function keyword() {\n      return colorString.keyword(this.values.rgb, this.values.alpha);\n    },\n    rgbNumber: function rgbNumber() {\n      var rgb = this.values.rgb;\n      return rgb[0] << 16 | rgb[1] << 8 | rgb[2];\n    },\n    luminosity: function luminosity() {\n      // http://www.w3.org/TR/WCAG20/#relativeluminancedef\n      var rgb = this.values.rgb;\n      var lum = [];\n\n      for (var i = 0; i < rgb.length; i++) {\n        var chan = rgb[i] / 255;\n        lum[i] = chan <= 0.03928 ? chan / 12.92 : Math.pow((chan + 0.055) / 1.055, 2.4);\n      }\n\n      return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n    },\n    contrast: function contrast(color2) {\n      // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n      var lum1 = this.luminosity();\n      var lum2 = color2.luminosity();\n\n      if (lum1 > lum2) {\n        return (lum1 + 0.05) / (lum2 + 0.05);\n      }\n\n      return (lum2 + 0.05) / (lum1 + 0.05);\n    },\n    level: function level(color2) {\n      var contrastRatio = this.contrast(color2);\n\n      if (contrastRatio >= 7.1) {\n        return 'AAA';\n      }\n\n      return contrastRatio >= 4.5 ? 'AA' : '';\n    },\n    dark: function dark() {\n      // YIQ equation from http://24ways.org/2010/calculating-color-contrast\n      var rgb = this.values.rgb;\n      var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n      return yiq < 128;\n    },\n    light: function light() {\n      return !this.dark();\n    },\n    negate: function negate() {\n      var rgb = [];\n\n      for (var i = 0; i < 3; i++) {\n        rgb[i] = 255 - this.values.rgb[i];\n      }\n\n      this.setValues('rgb', rgb);\n      return this;\n    },\n    lighten: function lighten(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] += hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    darken: function darken(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] -= hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    saturate: function saturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] += hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    desaturate: function desaturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] -= hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    whiten: function whiten(ratio) {\n      var hwb = this.values.hwb;\n      hwb[1] += hwb[1] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    blacken: function blacken(ratio) {\n      var hwb = this.values.hwb;\n      hwb[2] += hwb[2] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    greyscale: function greyscale() {\n      var rgb = this.values.rgb; // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\n      var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n      this.setValues('rgb', [val, val, val]);\n      return this;\n    },\n    clearer: function clearer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha - alpha * ratio);\n      return this;\n    },\n    opaquer: function opaquer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha + alpha * ratio);\n      return this;\n    },\n    rotate: function rotate(degrees) {\n      var hsl = this.values.hsl;\n      var hue = (hsl[0] + degrees) % 360;\n      hsl[0] = hue < 0 ? 360 + hue : hue;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n\n    /**\n     * Ported from sass implementation in C\n     * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n     */\n    mix: function mix(mixinColor, weight) {\n      var color1 = this;\n      var color2 = mixinColor;\n      var p = weight === undefined ? 0.5 : weight;\n      var w = 2 * p - 1;\n      var a = color1.alpha() - color2.alpha();\n      var w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      var w2 = 1 - w1;\n      return this.rgb(w1 * color1.red() + w2 * color2.red(), w1 * color1.green() + w2 * color2.green(), w1 * color1.blue() + w2 * color2.blue()).alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n    },\n    toJSON: function toJSON() {\n      return this.rgb();\n    },\n    clone: function clone() {\n      // NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n      // making the final build way to big to embed in Chart.js. So let's do it manually,\n      // assuming that values to clone are 1 dimension arrays containing only numbers,\n      // except 'alpha' which is a number.\n      var result = new Color();\n      var source = this.values;\n      var target = result.values;\n      var value, type;\n\n      for (var prop in source) {\n        if (source.hasOwnProperty(prop)) {\n          value = source[prop];\n          type = {}.toString.call(value);\n\n          if (type === '[object Array]') {\n            target[prop] = value.slice(0);\n          } else if (type === '[object Number]') {\n            target[prop] = value;\n          } else {\n            console.error('unexpected color value:', value);\n          }\n        }\n      }\n\n      return result;\n    }\n  };\n  Color.prototype.spaces = {\n    rgb: ['red', 'green', 'blue'],\n    hsl: ['hue', 'saturation', 'lightness'],\n    hsv: ['hue', 'saturation', 'value'],\n    hwb: ['hue', 'whiteness', 'blackness'],\n    cmyk: ['cyan', 'magenta', 'yellow', 'black']\n  };\n  Color.prototype.maxes = {\n    rgb: [255, 255, 255],\n    hsl: [360, 100, 100],\n    hsv: [360, 100, 100],\n    hwb: [360, 100, 100],\n    cmyk: [100, 100, 100, 100]\n  };\n\n  Color.prototype.getValues = function (space) {\n    var values = this.values;\n    var vals = {};\n\n    for (var i = 0; i < space.length; i++) {\n      vals[space.charAt(i)] = values[space][i];\n    }\n\n    if (values.alpha !== 1) {\n      vals.a = values.alpha;\n    } // {r: 255, g: 255, b: 255, a: 0.4}\n\n\n    return vals;\n  };\n\n  Color.prototype.setValues = function (space, vals) {\n    var values = this.values;\n    var spaces = this.spaces;\n    var maxes = this.maxes;\n    var alpha = 1;\n    var i;\n    this.valid = true;\n\n    if (space === 'alpha') {\n      alpha = vals;\n    } else if (vals.length) {\n      // [10, 10, 10]\n      values[space] = vals.slice(0, space.length);\n      alpha = vals[space.length];\n    } else if (vals[space.charAt(0)] !== undefined) {\n      // {r: 10, g: 10, b: 10}\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[space.charAt(i)];\n      }\n\n      alpha = vals.a;\n    } else if (vals[spaces[space][0]] !== undefined) {\n      // {red: 10, green: 10, blue: 10}\n      var chans = spaces[space];\n\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[chans[i]];\n      }\n\n      alpha = vals.alpha;\n    }\n\n    values.alpha = Math.max(0, Math.min(1, alpha === undefined ? values.alpha : alpha));\n\n    if (space === 'alpha') {\n      return false;\n    }\n\n    var capped; // cap values of the space prior converting all values\n\n    for (i = 0; i < space.length; i++) {\n      capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n      values[space][i] = Math.round(capped);\n    } // convert to all the other color spaces\n\n\n    for (var sname in spaces) {\n      if (sname !== space) {\n        values[sname] = colorConvert[space][sname](values[space]);\n      }\n    }\n\n    return true;\n  };\n\n  Color.prototype.setSpace = function (space, args) {\n    var vals = args[0];\n\n    if (vals === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof vals === 'number') {\n      vals = Array.prototype.slice.call(args);\n    }\n\n    this.setValues(space, vals);\n    return this;\n  };\n\n  Color.prototype.setChannel = function (space, index, val) {\n    var svalues = this.values[space];\n\n    if (val === undefined) {\n      // color.red()\n      return svalues[index];\n    } else if (val === svalues[index]) {\n      // color.red(color.red())\n      return this;\n    } // color.red(100)\n\n\n    svalues[index] = val;\n    this.setValues(space, svalues);\n    return this;\n  };\n\n  if (typeof window !== 'undefined') {\n    window.Color = Color;\n  }\n\n  var chartjsColor = Color;\n  /**\n   * @namespace Chart.helpers\n   */\n\n  var helpers = {\n    /**\n     * An empty function that can be used, for example, for optional callback.\n     */\n    noop: function noop() {},\n\n    /**\n     * Returns a unique id, sequentially generated from a global variable.\n     * @returns {number}\n     * @function\n     */\n    uid: function () {\n      var id = 0;\n      return function () {\n        return id++;\n      };\n    }(),\n\n    /**\n     * Returns true if `value` is neither null nor undefined, else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isNullOrUndef: function isNullOrUndef(value) {\n      return value === null || typeof value === 'undefined';\n    },\n\n    /**\n     * Returns true if `value` is an array (including typed arrays), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @function\n     */\n    isArray: function isArray(value) {\n      if (Array.isArray && Array.isArray(value)) {\n        return true;\n      }\n\n      var type = Object.prototype.toString.call(value);\n\n      if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n        return true;\n      }\n\n      return false;\n    },\n\n    /**\n     * Returns true if `value` is an object (excluding null), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isObject: function isObject(value) {\n      return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n    },\n\n    /**\n     * Returns true if `value` is a finite number, else returns false\n     * @param {*} value  - The value to test.\n     * @returns {boolean}\n     */\n    isFinite: function (_isFinite) {\n      function isFinite(_x) {\n        return _isFinite.apply(this, arguments);\n      }\n\n      isFinite.toString = function () {\n        return _isFinite.toString();\n      };\n\n      return isFinite;\n    }(function (value) {\n      return (typeof value === 'number' || value instanceof Number) && isFinite(value);\n    }),\n\n    /**\n     * Returns `value` if defined, else returns `defaultValue`.\n     * @param {*} value - The value to return if defined.\n     * @param {*} defaultValue - The value to return if `value` is undefined.\n     * @returns {*}\n     */\n    valueOrDefault: function valueOrDefault(value, defaultValue) {\n      return typeof value === 'undefined' ? defaultValue : value;\n    },\n\n    /**\n     * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n     * @param {Array} value - The array to lookup for value at `index`.\n     * @param {number} index - The index in `value` to lookup for value.\n     * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n     * @returns {*}\n     */\n    valueAtIndexOrDefault: function valueAtIndexOrDefault(value, index, defaultValue) {\n      return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n    },\n\n    /**\n     * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n     * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n     * @param {function} fn - The function to call.\n     * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @returns {*}\n     */\n    callback: function callback(fn, args, thisArg) {\n      if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n      }\n    },\n\n    /**\n     * Note(SB) for performance sake, this method should only be used when loopable type\n     * is unknown or in none intensive code (not called often and small loopable). Else\n     * it's preferable to use a regular for() loop and save extra function calls.\n     * @param {object|Array} loopable - The object or array to be iterated.\n     * @param {function} fn - The function to call for each item.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @param {boolean} [reverse] - If true, iterates backward on the loopable.\n     */\n    each: function each(loopable, fn, thisArg, reverse) {\n      var i, len, keys;\n\n      if (helpers.isArray(loopable)) {\n        len = loopable.length;\n\n        if (reverse) {\n          for (i = len - 1; i >= 0; i--) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        } else {\n          for (i = 0; i < len; i++) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        }\n      } else if (helpers.isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n\n        for (i = 0; i < len; i++) {\n          fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n      }\n    },\n\n    /**\n     * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n     * @see https://stackoverflow.com/a/14853974\n     * @param {Array} a0 - The array to compare\n     * @param {Array} a1 - The array to compare\n     * @returns {boolean}\n     */\n    arrayEquals: function arrayEquals(a0, a1) {\n      var i, ilen, v0, v1;\n\n      if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n      }\n\n      for (i = 0, ilen = a0.length; i < ilen; ++i) {\n        v0 = a0[i];\n        v1 = a1[i];\n\n        if (v0 instanceof Array && v1 instanceof Array) {\n          if (!helpers.arrayEquals(v0, v1)) {\n            return false;\n          }\n        } else if (v0 !== v1) {\n          // NOTE: two different object instances will never be equal: {x:20} != {x:20}\n          return false;\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns a deep copy of `source` without keeping references on objects and arrays.\n     * @param {*} source - The value to clone.\n     * @returns {*}\n     */\n    clone: function clone(source) {\n      if (helpers.isArray(source)) {\n        return source.map(helpers.clone);\n      }\n\n      if (helpers.isObject(source)) {\n        var target = {};\n        var keys = Object.keys(source);\n        var klen = keys.length;\n        var k = 0;\n\n        for (; k < klen; ++k) {\n          target[keys[k]] = helpers.clone(source[keys[k]]);\n        }\n\n        return target;\n      }\n\n      return source;\n    },\n\n    /**\n     * The default merger when Chart.helpers.merge is called without merger option.\n     * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n     * @private\n     */\n    _merger: function _merger(key, target, source, options) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.merge(tval, sval, options);\n      } else {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Merges source[key] in target[key] only if target[key] is undefined.\n     * @private\n     */\n    _mergerIf: function _mergerIf(key, target, source) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.mergeIf(tval, sval);\n      } else if (!target.hasOwnProperty(key)) {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` with the given `options`.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @param {object} [options] - Merging options:\n     * @param {function} [options.merger] - The merge method (key, target, source, options)\n     * @returns {object} The `target` object.\n     */\n    merge: function merge(target, source, options) {\n      var sources = helpers.isArray(source) ? source : [source];\n      var ilen = sources.length;\n      var merge, i, keys, klen, k;\n\n      if (!helpers.isObject(target)) {\n        return target;\n      }\n\n      options = options || {};\n      merge = options.merger || helpers._merger;\n\n      for (i = 0; i < ilen; ++i) {\n        source = sources[i];\n\n        if (!helpers.isObject(source)) {\n          continue;\n        }\n\n        keys = Object.keys(source);\n\n        for (k = 0, klen = keys.length; k < klen; ++k) {\n          merge(keys[k], target, source, options);\n        }\n      }\n\n      return target;\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @returns {object} The `target` object.\n     */\n    mergeIf: function mergeIf(target, source) {\n      return helpers.merge(target, source, {\n        merger: helpers._mergerIf\n      });\n    },\n\n    /**\n     * Applies the contents of two or more objects together into the first object.\n     * @param {object} target - The target object in which all objects are merged into.\n     * @param {object} arg1 - Object containing additional properties to merge in target.\n     * @param {object} argN - Additional objects containing properties to merge in target.\n     * @returns {object} The `target` object.\n     */\n    extend: function extend(target) {\n      var setFn = function setFn(value, key) {\n        target[key] = value;\n      };\n\n      for (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n        helpers.each(arguments[i], setFn);\n      }\n\n      return target;\n    },\n\n    /**\n     * Basic javascript inheritance based on the model created in Backbone.js\n     */\n    inherits: function inherits(extensions) {\n      var me = this;\n      var ChartElement = extensions && extensions.hasOwnProperty('constructor') ? extensions.constructor : function () {\n        return me.apply(this, arguments);\n      };\n\n      var Surrogate = function Surrogate() {\n        this.constructor = ChartElement;\n      };\n\n      Surrogate.prototype = me.prototype;\n      ChartElement.prototype = new Surrogate();\n      ChartElement.extend = helpers.inherits;\n\n      if (extensions) {\n        helpers.extend(ChartElement.prototype, extensions);\n      }\n\n      ChartElement.__super__ = me.prototype;\n      return ChartElement;\n    }\n  };\n  var helpers_core = helpers; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.callback instead.\n   * @function Chart.helpers.callCallback\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.callCallback = helpers.callback;\n  /**\n   * Provided for backward compatibility, use Array.prototype.indexOf instead.\n   * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n   * @function Chart.helpers.indexOf\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.indexOf = function (array, item, fromIndex) {\n    return Array.prototype.indexOf.call(array, item, fromIndex);\n  };\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n   * @function Chart.helpers.getValueOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  helpers.getValueOrDefault = helpers.valueOrDefault;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n   * @function Chart.helpers.getValueAtIndexOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n  /**\n   * Easing functions adapted from Robert Penner's easing equations.\n   * @namespace Chart.helpers.easingEffects\n   * @see http://www.robertpenner.com/easing/\n   */\n\n  var effects = {\n    linear: function linear(t) {\n      return t;\n    },\n    easeInQuad: function easeInQuad(t) {\n      return t * t;\n    },\n    easeOutQuad: function easeOutQuad(t) {\n      return -t * (t - 2);\n    },\n    easeInOutQuad: function easeInOutQuad(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t;\n      }\n\n      return -0.5 * (--t * (t - 2) - 1);\n    },\n    easeInCubic: function easeInCubic(t) {\n      return t * t * t;\n    },\n    easeOutCubic: function easeOutCubic(t) {\n      return (t = t - 1) * t * t + 1;\n    },\n    easeInOutCubic: function easeInOutCubic(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t + 2);\n    },\n    easeInQuart: function easeInQuart(t) {\n      return t * t * t * t;\n    },\n    easeOutQuart: function easeOutQuart(t) {\n      return -((t = t - 1) * t * t * t - 1);\n    },\n    easeInOutQuart: function easeInOutQuart(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t;\n      }\n\n      return -0.5 * ((t -= 2) * t * t * t - 2);\n    },\n    easeInQuint: function easeInQuint(t) {\n      return t * t * t * t * t;\n    },\n    easeOutQuint: function easeOutQuint(t) {\n      return (t = t - 1) * t * t * t * t + 1;\n    },\n    easeInOutQuint: function easeInOutQuint(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t * t * t + 2);\n    },\n    easeInSine: function easeInSine(t) {\n      return -Math.cos(t * (Math.PI / 2)) + 1;\n    },\n    easeOutSine: function easeOutSine(t) {\n      return Math.sin(t * (Math.PI / 2));\n    },\n    easeInOutSine: function easeInOutSine(t) {\n      return -0.5 * (Math.cos(Math.PI * t) - 1);\n    },\n    easeInExpo: function easeInExpo(t) {\n      return t === 0 ? 0 : Math.pow(2, 10 * (t - 1));\n    },\n    easeOutExpo: function easeOutExpo(t) {\n      return t === 1 ? 1 : -Math.pow(2, -10 * t) + 1;\n    },\n    easeInOutExpo: function easeInOutExpo(t) {\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * Math.pow(2, 10 * (t - 1));\n      }\n\n      return 0.5 * (-Math.pow(2, -10 * --t) + 2);\n    },\n    easeInCirc: function easeInCirc(t) {\n      if (t >= 1) {\n        return t;\n      }\n\n      return -(Math.sqrt(1 - t * t) - 1);\n    },\n    easeOutCirc: function easeOutCirc(t) {\n      return Math.sqrt(1 - (t = t - 1) * t);\n    },\n    easeInOutCirc: function easeInOutCirc(t) {\n      if ((t /= 0.5) < 1) {\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n      }\n\n      return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n    },\n    easeInElastic: function easeInElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n    },\n    easeOutElastic: function easeOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n    },\n    easeInOutElastic: function easeInOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if ((t /= 0.5) === 2) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.45;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      if (t < 1) {\n        return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n      }\n\n      return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n    },\n    easeInBack: function easeInBack(t) {\n      var s = 1.70158;\n      return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack: function easeOutBack(t) {\n      var s = 1.70158;\n      return (t = t - 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack: function easeInOutBack(t) {\n      var s = 1.70158;\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n      }\n\n      return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: function easeInBounce(t) {\n      return 1 - effects.easeOutBounce(1 - t);\n    },\n    easeOutBounce: function easeOutBounce(t) {\n      if (t < 1 / 2.75) {\n        return 7.5625 * t * t;\n      }\n\n      if (t < 2 / 2.75) {\n        return 7.5625 * (t -= 1.5 / 2.75) * t + 0.75;\n      }\n\n      if (t < 2.5 / 2.75) {\n        return 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375;\n      }\n\n      return 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;\n    },\n    easeInOutBounce: function easeInOutBounce(t) {\n      if (t < 0.5) {\n        return effects.easeInBounce(t * 2) * 0.5;\n      }\n\n      return effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n    }\n  };\n  var helpers_easing = {\n    effects: effects\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n   * @function Chart.helpers.easingEffects\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.easingEffects = effects;\n  var PI = Math.PI;\n  var RAD_PER_DEG = PI / 180;\n  var DOUBLE_PI = PI * 2;\n  var HALF_PI = PI / 2;\n  var QUARTER_PI = PI / 4;\n  var TWO_THIRDS_PI = PI * 2 / 3;\n  /**\n   * @namespace Chart.helpers.canvas\n   */\n\n  var exports$1 = {\n    /**\n     * Clears the entire canvas associated to the given `chart`.\n     * @param {Chart} chart - The chart for which to clear the canvas.\n     */\n    clear: function clear(chart) {\n      chart.ctx.clearRect(0, 0, chart.width, chart.height);\n    },\n\n    /**\n     * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n     * given size (width, height) and the same `radius` for all corners.\n     * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n     * @param {number} x - The x axis of the coordinate for the rectangle starting point.\n     * @param {number} y - The y axis of the coordinate for the rectangle starting point.\n     * @param {number} width - The rectangle's width.\n     * @param {number} height - The rectangle's height.\n     * @param {number} radius - The rounded amount (in pixels) for the four corners.\n     * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n     */\n    roundedRect: function roundedRect(ctx, x, y, width, height, radius) {\n      if (radius) {\n        var r = Math.min(radius, height / 2, width / 2);\n        var left = x + r;\n        var top = y + r;\n        var right = x + width - r;\n        var bottom = y + height - r;\n        ctx.moveTo(x, top);\n\n        if (left < right && top < bottom) {\n          ctx.arc(left, top, r, -PI, -HALF_PI);\n          ctx.arc(right, top, r, -HALF_PI, 0);\n          ctx.arc(right, bottom, r, 0, HALF_PI);\n          ctx.arc(left, bottom, r, HALF_PI, PI);\n        } else if (left < right) {\n          ctx.moveTo(left, y);\n          ctx.arc(right, top, r, -HALF_PI, HALF_PI);\n          ctx.arc(left, top, r, HALF_PI, PI + HALF_PI);\n        } else if (top < bottom) {\n          ctx.arc(left, top, r, -PI, 0);\n          ctx.arc(left, bottom, r, 0, PI);\n        } else {\n          ctx.arc(left, top, r, -PI, PI);\n        }\n\n        ctx.closePath();\n        ctx.moveTo(x, y);\n      } else {\n        ctx.rect(x, y, width, height);\n      }\n    },\n    drawPoint: function drawPoint(ctx, style, radius, x, y, rotation) {\n      var type, xOffset, yOffset, size, cornerRadius;\n      var rad = (rotation || 0) * RAD_PER_DEG;\n\n      if (style && typeof style === 'object') {\n        type = style.toString();\n\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n          ctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n          return;\n        }\n      }\n\n      if (isNaN(radius) || radius <= 0) {\n        return;\n      }\n\n      ctx.beginPath();\n\n      switch (style) {\n        // Default includes circle\n        default:\n          ctx.arc(x, y, radius, 0, DOUBLE_PI);\n          ctx.closePath();\n          break;\n\n        case 'triangle':\n          ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          ctx.closePath();\n          break;\n\n        case 'rectRounded':\n          // NOTE: the rounded rect implementation changed to use `arc` instead of\n          // `quadraticCurveTo` since it generates better results when rect is\n          // almost a circle. 0.516 (instead of 0.5) produces results with visually\n          // closer proportion to the previous impl and it is inscribed in the\n          // circle with `radius`. For more details, see the following PRs:\n          // https://github.com/chartjs/Chart.js/issues/5597\n          // https://github.com/chartjs/Chart.js/issues/5858\n          cornerRadius = radius * 0.516;\n          size = radius - cornerRadius;\n          xOffset = Math.cos(rad + QUARTER_PI) * size;\n          yOffset = Math.sin(rad + QUARTER_PI) * size;\n          ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n          ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n          ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n          ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n          ctx.closePath();\n          break;\n\n        case 'rect':\n          if (!rotation) {\n            size = Math.SQRT1_2 * radius;\n            ctx.rect(x - size, y - size, 2 * size, 2 * size);\n            break;\n          }\n\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'rectRot':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          ctx.closePath();\n          break;\n\n        case 'crossRot':\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'cross':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'star':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          rad += QUARTER_PI;\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'line':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          break;\n\n        case 'dash':\n          ctx.moveTo(x, y);\n          ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n          break;\n      }\n\n      ctx.fill();\n      ctx.stroke();\n    },\n\n    /**\n     * Returns true if the point is inside the rectangle\n     * @param {object} point - The point to test\n     * @param {object} area - The rectangle\n     * @returns {boolean}\n     * @private\n     */\n    _isPointInArea: function _isPointInArea(point, area) {\n      var epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n\n      return point.x > area.left - epsilon && point.x < area.right + epsilon && point.y > area.top - epsilon && point.y < area.bottom + epsilon;\n    },\n    clipArea: function clipArea(ctx, area) {\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n      ctx.clip();\n    },\n    unclipArea: function unclipArea(ctx) {\n      ctx.restore();\n    },\n    lineTo: function lineTo(ctx, previous, target, flip) {\n      var stepped = target.steppedLine;\n\n      if (stepped) {\n        if (stepped === 'middle') {\n          var midpoint = (previous.x + target.x) / 2.0;\n          ctx.lineTo(midpoint, flip ? target.y : previous.y);\n          ctx.lineTo(midpoint, flip ? previous.y : target.y);\n        } else if (stepped === 'after' && !flip || stepped !== 'after' && flip) {\n          ctx.lineTo(previous.x, target.y);\n        } else {\n          ctx.lineTo(target.x, previous.y);\n        }\n\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      if (!target.tension) {\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      ctx.bezierCurveTo(flip ? previous.controlPointPreviousX : previous.controlPointNextX, flip ? previous.controlPointPreviousY : previous.controlPointNextY, flip ? target.controlPointNextX : target.controlPointPreviousX, flip ? target.controlPointNextY : target.controlPointPreviousY, target.x, target.y);\n    }\n  };\n  var helpers_canvas = exports$1; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n   * @namespace Chart.helpers.clear\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.clear = exports$1.clear;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n   * @namespace Chart.helpers.drawRoundedRectangle\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.drawRoundedRectangle = function (ctx) {\n    ctx.beginPath();\n    exports$1.roundedRect.apply(exports$1, arguments);\n  };\n\n  var defaults = {\n    /**\n     * @private\n     */\n    _set: function _set(scope, values) {\n      return helpers_core.merge(this[scope] || (this[scope] = {}), values);\n    }\n  };\n\n  defaults._set('global', {\n    defaultColor: 'rgba(0,0,0,0.1)',\n    defaultFontColor: '#666',\n    defaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n    defaultFontSize: 12,\n    defaultFontStyle: 'normal',\n    defaultLineHeight: 1.2,\n    showLines: true\n  });\n\n  var core_defaults = defaults;\n  var valueOrDefault = helpers_core.valueOrDefault;\n  /**\n   * Converts the given font object into a CSS font string.\n   * @param {object} font - A font object.\n   * @return {string} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n   * @private\n   */\n\n  function toFontString(font) {\n    if (!font || helpers_core.isNullOrUndef(font.size) || helpers_core.isNullOrUndef(font.family)) {\n      return null;\n    }\n\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n  }\n  /**\n   * @alias Chart.helpers.options\n   * @namespace\n   */\n\n\n  var helpers_options = {\n    /**\n     * Converts the given line height `value` in pixels for a specific font `size`.\n     * @param {number|string} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n     * @param {number} size - The font size (in pixels) used to resolve relative `value`.\n     * @returns {number} The effective line height in pixels (size * 1.2 if value is invalid).\n     * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n     * @since 2.7.0\n     */\n    toLineHeight: function toLineHeight(value, size) {\n      var matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\n      if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n      }\n\n      value = +matches[2];\n\n      switch (matches[3]) {\n        case 'px':\n          return value;\n\n        case '%':\n          value /= 100;\n          break;\n\n        default:\n          break;\n      }\n\n      return size * value;\n    },\n\n    /**\n     * Converts the given value into a padding object with pre-computed width/height.\n     * @param {number|object} value - If a number, set the value to all TRBL component,\n     *  else, if and object, use defined properties and sets undefined ones to 0.\n     * @returns {object} The padding values (top, right, bottom, left, width, height)\n     * @since 2.7.0\n     */\n    toPadding: function toPadding(value) {\n      var t, r, b, l;\n\n      if (helpers_core.isObject(value)) {\n        t = +value.top || 0;\n        r = +value.right || 0;\n        b = +value.bottom || 0;\n        l = +value.left || 0;\n      } else {\n        t = r = b = l = +value || 0;\n      }\n\n      return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        height: t + b,\n        width: l + r\n      };\n    },\n\n    /**\n     * Parses font options and returns the font object.\n     * @param {object} options - A object that contains font options to be parsed.\n     * @return {object} The font object.\n     * @todo Support font.* options and renamed to toFont().\n     * @private\n     */\n    _parseFont: function _parseFont(options) {\n      var globalDefaults = core_defaults.global;\n      var size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n      var font = {\n        family: valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily),\n        lineHeight: helpers_core.options.toLineHeight(valueOrDefault(options.lineHeight, globalDefaults.defaultLineHeight), size),\n        size: size,\n        style: valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle),\n        weight: null,\n        string: ''\n      };\n      font.string = toFontString(font);\n      return font;\n    },\n\n    /**\n     * Evaluates the given `inputs` sequentially and returns the first defined value.\n     * @param {Array} inputs - An array of values, falling back to the last value.\n     * @param {object} [context] - If defined and the current value is a function, the value\n     * is called with `context` as first argument and the result becomes the new input.\n     * @param {number} [index] - If defined and the current value is an array, the value\n     * at `index` become the new input.\n     * @since 2.7.0\n     */\n    resolve: function resolve(inputs, context, index) {\n      var i, ilen, value;\n\n      for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n        value = inputs[i];\n\n        if (value === undefined) {\n          continue;\n        }\n\n        if (context !== undefined && typeof value === 'function') {\n          value = value(context);\n        }\n\n        if (index !== undefined && helpers_core.isArray(value)) {\n          value = value[index];\n        }\n\n        if (value !== undefined) {\n          return value;\n        }\n      }\n    }\n  };\n  var helpers$1 = helpers_core;\n  var easing = helpers_easing;\n  var canvas = helpers_canvas;\n  var options = helpers_options;\n  helpers$1.easing = easing;\n  helpers$1.canvas = canvas;\n  helpers$1.options = options;\n\n  function interpolate(start, view, model, ease) {\n    var keys = Object.keys(model);\n    var i, ilen, key, actual, origin, target, type, c0, c1;\n\n    for (i = 0, ilen = keys.length; i < ilen; ++i) {\n      key = keys[i];\n      target = model[key]; // if a value is added to the model after pivot() has been called, the view\n      // doesn't contain it, so let's initialize the view to the target value.\n\n      if (!view.hasOwnProperty(key)) {\n        view[key] = target;\n      }\n\n      actual = view[key];\n\n      if (actual === target || key[0] === '_') {\n        continue;\n      }\n\n      if (!start.hasOwnProperty(key)) {\n        start[key] = actual;\n      }\n\n      origin = start[key];\n      type = typeof target;\n\n      if (type === typeof origin) {\n        if (type === 'string') {\n          c0 = chartjsColor(origin);\n\n          if (c0.valid) {\n            c1 = chartjsColor(target);\n\n            if (c1.valid) {\n              view[key] = c1.mix(c0, ease).rgbString();\n              continue;\n            }\n          }\n        } else if (helpers$1.isFinite(origin) && helpers$1.isFinite(target)) {\n          view[key] = origin + (target - origin) * ease;\n          continue;\n        }\n      }\n\n      view[key] = target;\n    }\n  }\n\n  var Element = function Element(configuration) {\n    helpers$1.extend(this, configuration);\n    this.initialize.apply(this, arguments);\n  };\n\n  helpers$1.extend(Element.prototype, {\n    initialize: function initialize() {\n      this.hidden = false;\n    },\n    pivot: function pivot() {\n      var me = this;\n\n      if (!me._view) {\n        me._view = helpers$1.clone(me._model);\n      }\n\n      me._start = {};\n      return me;\n    },\n    transition: function transition(ease) {\n      var me = this;\n      var model = me._model;\n      var start = me._start;\n      var view = me._view; // No animation -> No Transition\n\n      if (!model || ease === 1) {\n        me._view = model;\n        me._start = null;\n        return me;\n      }\n\n      if (!view) {\n        view = me._view = {};\n      }\n\n      if (!start) {\n        start = me._start = {};\n      }\n\n      interpolate(start, view, model, ease);\n      return me;\n    },\n    tooltipPosition: function tooltipPosition() {\n      return {\n        x: this._model.x,\n        y: this._model.y\n      };\n    },\n    hasValue: function hasValue() {\n      return helpers$1.isNumber(this._model.x) && helpers$1.isNumber(this._model.y);\n    }\n  });\n  Element.extend = helpers$1.inherits;\n  var core_element = Element;\n  var exports$2 = core_element.extend({\n    chart: null,\n    // the animation associated chart instance\n    currentStep: 0,\n    // the current animation step\n    numSteps: 60,\n    // default number of steps\n    easing: '',\n    // the easing to use for this animation\n    render: null,\n    // render function used by the animation service\n    onAnimationProgress: null,\n    // user specified callback to fire on each step of the animation\n    onAnimationComplete: null // user specified callback to fire when the animation finishes\n\n  });\n  var core_animation = exports$2; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.Animation instead\n   * @prop Chart.Animation#animationObject\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'animationObject', {\n    get: function get() {\n      return this;\n    }\n  });\n  /**\n   * Provided for backward compatibility, use Chart.Animation#chart instead\n   * @prop Chart.Animation#chartInstance\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'chartInstance', {\n    get: function get() {\n      return this.chart;\n    },\n    set: function set(value) {\n      this.chart = value;\n    }\n  });\n\n  core_defaults._set('global', {\n    animation: {\n      duration: 1000,\n      easing: 'easeOutQuart',\n      onProgress: helpers$1.noop,\n      onComplete: helpers$1.noop\n    }\n  });\n\n  var core_animations = {\n    animations: [],\n    request: null,\n\n    /**\n     * @param {Chart} chart - The chart to animate.\n     * @param {Chart.Animation} animation - The animation that we will animate.\n     * @param {number} duration - The animation duration in ms.\n     * @param {boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n     */\n    addAnimation: function addAnimation(chart, animation, duration, lazy) {\n      var animations = this.animations;\n      var i, ilen;\n      animation.chart = chart;\n      animation.startTime = Date.now();\n      animation.duration = duration;\n\n      if (!lazy) {\n        chart.animating = true;\n      }\n\n      for (i = 0, ilen = animations.length; i < ilen; ++i) {\n        if (animations[i].chart === chart) {\n          animations[i] = animation;\n          return;\n        }\n      }\n\n      animations.push(animation); // If there are no animations queued, manually kickstart a digest, for lack of a better word\n\n      if (animations.length === 1) {\n        this.requestAnimationFrame();\n      }\n    },\n    cancelAnimation: function cancelAnimation(chart) {\n      var index = helpers$1.findIndex(this.animations, function (animation) {\n        return animation.chart === chart;\n      });\n\n      if (index !== -1) {\n        this.animations.splice(index, 1);\n        chart.animating = false;\n      }\n    },\n    requestAnimationFrame: function requestAnimationFrame() {\n      var me = this;\n\n      if (me.request === null) {\n        // Skip animation frame requests until the active one is executed.\n        // This can happen when processing mouse events, e.g. 'mousemove'\n        // and 'mouseout' events will trigger multiple renders.\n        me.request = helpers$1.requestAnimFrame.call(window, function () {\n          me.request = null;\n          me.startDigest();\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    startDigest: function startDigest() {\n      var me = this;\n      me.advance(); // Do we have more stuff to animate?\n\n      if (me.animations.length > 0) {\n        me.requestAnimationFrame();\n      }\n    },\n\n    /**\n     * @private\n     */\n    advance: function advance() {\n      var animations = this.animations;\n      var animation, chart, numSteps, nextStep;\n      var i = 0; // 1 animation per chart, so we are looping charts here\n\n      while (i < animations.length) {\n        animation = animations[i];\n        chart = animation.chart;\n        numSteps = animation.numSteps; // Make sure that currentStep starts at 1\n        // https://github.com/chartjs/Chart.js/issues/6104\n\n        nextStep = Math.floor((Date.now() - animation.startTime) / animation.duration * numSteps) + 1;\n        animation.currentStep = Math.min(nextStep, numSteps);\n        helpers$1.callback(animation.render, [chart, animation], chart);\n        helpers$1.callback(animation.onAnimationProgress, [animation], chart);\n\n        if (animation.currentStep >= numSteps) {\n          helpers$1.callback(animation.onAnimationComplete, [animation], chart);\n          chart.animating = false;\n          animations.splice(i, 1);\n        } else {\n          ++i;\n        }\n      }\n    }\n  };\n  var resolve = helpers$1.options.resolve;\n  var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n  /**\n   * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n   * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n   * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n   */\n\n  function listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n      array._chartjs.listeners.push(listener);\n\n      return;\n    }\n\n    Object.defineProperty(array, '_chartjs', {\n      configurable: true,\n      enumerable: false,\n      value: {\n        listeners: [listener]\n      }\n    });\n    arrayEvents.forEach(function (key) {\n      var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n      var base = array[key];\n      Object.defineProperty(array, key, {\n        configurable: true,\n        enumerable: false,\n        value: function value() {\n          var args = Array.prototype.slice.call(arguments);\n          var res = base.apply(this, args);\n          helpers$1.each(array._chartjs.listeners, function (object) {\n            if (typeof object[method] === 'function') {\n              object[method].apply(object, args);\n            }\n          });\n          return res;\n        }\n      });\n    });\n  }\n  /**\n   * Removes the given array event listener and cleanup extra attached properties (such as\n   * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n   */\n\n\n  function unlistenArrayEvents(array, listener) {\n    var stub = array._chartjs;\n\n    if (!stub) {\n      return;\n    }\n\n    var listeners = stub.listeners;\n    var index = listeners.indexOf(listener);\n\n    if (index !== -1) {\n      listeners.splice(index, 1);\n    }\n\n    if (listeners.length > 0) {\n      return;\n    }\n\n    arrayEvents.forEach(function (key) {\n      delete array[key];\n    });\n    delete array._chartjs;\n  } // Base class for all dataset controllers (line, bar, etc)\n\n\n  var DatasetController = function DatasetController(chart, datasetIndex) {\n    this.initialize(chart, datasetIndex);\n  };\n\n  helpers$1.extend(DatasetController.prototype, {\n    /**\n     * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n     * @type {Chart.core.element}\n     */\n    datasetElementType: null,\n\n    /**\n     * Element type used to generate a meta data (e.g. Chart.element.Point).\n     * @type {Chart.core.element}\n     */\n    dataElementType: null,\n    initialize: function initialize(chart, datasetIndex) {\n      var me = this;\n      me.chart = chart;\n      me.index = datasetIndex;\n      me.linkScales();\n      me.addElements();\n    },\n    updateIndex: function updateIndex(datasetIndex) {\n      this.index = datasetIndex;\n    },\n    linkScales: function linkScales() {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      if (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n        meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n      }\n\n      if (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n        meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n      }\n    },\n    getDataset: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    },\n    getMeta: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    },\n    getScaleForId: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    },\n\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().yAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getValueScale: function _getValueScale() {\n      return this.getScaleForId(this._getValueScaleId());\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScale: function _getIndexScale() {\n      return this.getScaleForId(this._getIndexScaleId());\n    },\n    reset: function reset() {\n      this.update(true);\n    },\n\n    /**\n     * @private\n     */\n    destroy: function destroy() {\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n    },\n    createMetaDataset: function createMetaDataset() {\n      var me = this;\n      var type = me.datasetElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index\n      });\n    },\n    createMetaData: function createMetaData(index) {\n      var me = this;\n      var type = me.dataElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index,\n        _index: index\n      });\n    },\n    addElements: function addElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data || [];\n      var metaData = meta.data;\n      var i, ilen;\n\n      for (i = 0, ilen = data.length; i < ilen; ++i) {\n        metaData[i] = metaData[i] || me.createMetaData(i);\n      }\n\n      meta.dataset = meta.dataset || me.createMetaDataset();\n    },\n    addElementAndReset: function addElementAndReset(index) {\n      var element = this.createMetaData(index);\n      this.getMeta().data.splice(index, 0, element);\n      this.updateElement(element, index, true);\n    },\n    buildOrUpdateElements: function buildOrUpdateElements() {\n      var me = this;\n      var dataset = me.getDataset();\n      var data = dataset.data || (dataset.data = []); // In order to correctly handle data addition/deletion animation (an thus simulate\n      // real-time charts), we need to monitor these data modifications and synchronize\n      // the internal meta data accordingly.\n\n      if (me._data !== data) {\n        if (me._data) {\n          // This case happens when the user replaced the data array instance.\n          unlistenArrayEvents(me._data, me);\n        }\n\n        if (data && Object.isExtensible(data)) {\n          listenArrayEvents(data, me);\n        }\n\n        me._data = data;\n      } // Re-sync meta data in case the user replaced the data array or if we missed\n      // any updates and so make sure that we handle number of datapoints changing.\n\n\n      me.resyncElements();\n    },\n    update: helpers$1.noop,\n    transition: function transition(easingValue) {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      for (; i < ilen; ++i) {\n        elements[i].transition(easingValue);\n      }\n\n      if (meta.dataset) {\n        meta.dataset.transition(easingValue);\n      }\n    },\n    draw: function draw() {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      if (meta.dataset) {\n        meta.dataset.draw();\n      }\n\n      for (; i < ilen; ++i) {\n        elements[i].draw();\n      }\n    },\n    removeHoverStyle: function removeHoverStyle(element) {\n      helpers$1.merge(element._model, element.$previousStyle || {});\n      delete element.$previousStyle;\n    },\n    setHoverStyle: function setHoverStyle(element) {\n      var dataset = this.chart.data.datasets[element._datasetIndex];\n      var index = element._index;\n      var custom = element.custom || {};\n      var model = element._model;\n      var getHoverColor = helpers$1.getHoverColor;\n      element.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = resolve([custom.hoverBackgroundColor, dataset.hoverBackgroundColor, getHoverColor(model.backgroundColor)], undefined, index);\n      model.borderColor = resolve([custom.hoverBorderColor, dataset.hoverBorderColor, getHoverColor(model.borderColor)], undefined, index);\n      model.borderWidth = resolve([custom.hoverBorderWidth, dataset.hoverBorderWidth, model.borderWidth], undefined, index);\n    },\n\n    /**\n     * @private\n     */\n    resyncElements: function resyncElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data;\n      var numMeta = meta.data.length;\n      var numData = data.length;\n\n      if (numData < numMeta) {\n        meta.data.splice(numData, numMeta - numData);\n      } else if (numData > numMeta) {\n        me.insertElements(numMeta, numData - numMeta);\n      }\n    },\n\n    /**\n     * @private\n     */\n    insertElements: function insertElements(start, count) {\n      for (var i = 0; i < count; ++i) {\n        this.addElementAndReset(start + i);\n      }\n    },\n\n    /**\n     * @private\n     */\n    onDataPush: function onDataPush() {\n      var count = arguments.length;\n      this.insertElements(this.getDataset().data.length - count, count);\n    },\n\n    /**\n     * @private\n     */\n    onDataPop: function onDataPop() {\n      this.getMeta().data.pop();\n    },\n\n    /**\n     * @private\n     */\n    onDataShift: function onDataShift() {\n      this.getMeta().data.shift();\n    },\n\n    /**\n     * @private\n     */\n    onDataSplice: function onDataSplice(start, count) {\n      this.getMeta().data.splice(start, count);\n      this.insertElements(start, arguments.length - 2);\n    },\n\n    /**\n     * @private\n     */\n    onDataUnshift: function onDataUnshift() {\n      this.insertElements(0, arguments.length);\n    }\n  });\n  DatasetController.extend = helpers$1.inherits;\n  var core_datasetController = DatasetController;\n\n  core_defaults._set('global', {\n    elements: {\n      arc: {\n        backgroundColor: core_defaults.global.defaultColor,\n        borderColor: '#fff',\n        borderWidth: 2,\n        borderAlign: 'center'\n      }\n    }\n  });\n\n  var element_arc = core_element.extend({\n    inLabelRange: function inLabelRange(mouseX) {\n      var vm = this._view;\n\n      if (vm) {\n        return Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2);\n      }\n\n      return false;\n    },\n    inRange: function inRange(chartX, chartY) {\n      var vm = this._view;\n\n      if (vm) {\n        var pointRelativePosition = helpers$1.getAngleFromPoint(vm, {\n          x: chartX,\n          y: chartY\n        });\n        var angle = pointRelativePosition.angle;\n        var distance = pointRelativePosition.distance; // Sanitise angle range\n\n        var startAngle = vm.startAngle;\n        var endAngle = vm.endAngle;\n\n        while (endAngle < startAngle) {\n          endAngle += 2.0 * Math.PI;\n        }\n\n        while (angle > endAngle) {\n          angle -= 2.0 * Math.PI;\n        }\n\n        while (angle < startAngle) {\n          angle += 2.0 * Math.PI;\n        } // Check if within the range of the open/close angle\n\n\n        var betweenAngles = angle >= startAngle && angle <= endAngle;\n        var withinRadius = distance >= vm.innerRadius && distance <= vm.outerRadius;\n        return betweenAngles && withinRadius;\n      }\n\n      return false;\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var halfAngle = (vm.startAngle + vm.endAngle) / 2;\n      var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n      return {\n        x: vm.x + Math.cos(halfAngle) * halfRadius,\n        y: vm.y + Math.sin(halfAngle) * halfRadius\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      var centreAngle = vm.startAngle + (vm.endAngle - vm.startAngle) / 2;\n      var rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n      return {\n        x: vm.x + Math.cos(centreAngle) * rangeFromCentre,\n        y: vm.y + Math.sin(centreAngle) * rangeFromCentre\n      };\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var sA = vm.startAngle;\n      var eA = vm.endAngle;\n      var pixelMargin = vm.borderAlign === 'inner' ? 0.33 : 0;\n      var angleMargin;\n      ctx.save();\n      ctx.beginPath();\n      ctx.arc(vm.x, vm.y, Math.max(vm.outerRadius - pixelMargin, 0), sA, eA);\n      ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n      ctx.closePath();\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fill();\n\n      if (vm.borderWidth) {\n        if (vm.borderAlign === 'inner') {\n          // Draw an inner border by cliping the arc and drawing a double-width border\n          // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n          ctx.beginPath();\n          angleMargin = pixelMargin / vm.outerRadius;\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA - angleMargin, eA + angleMargin);\n\n          if (vm.innerRadius > pixelMargin) {\n            angleMargin = pixelMargin / vm.innerRadius;\n            ctx.arc(vm.x, vm.y, vm.innerRadius - pixelMargin, eA + angleMargin, sA - angleMargin, true);\n          } else {\n            ctx.arc(vm.x, vm.y, pixelMargin, eA + Math.PI / 2, sA - Math.PI / 2);\n          }\n\n          ctx.closePath();\n          ctx.clip();\n          ctx.beginPath();\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n          ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n          ctx.closePath();\n          ctx.lineWidth = vm.borderWidth * 2;\n          ctx.lineJoin = 'round';\n        } else {\n          ctx.lineWidth = vm.borderWidth;\n          ctx.lineJoin = 'bevel';\n        }\n\n        ctx.strokeStyle = vm.borderColor;\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$1 = helpers$1.valueOrDefault;\n  var defaultColor = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      line: {\n        tension: 0.4,\n        backgroundColor: defaultColor,\n        borderWidth: 3,\n        borderColor: defaultColor,\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        capBezierPoints: true,\n        fill: true // do we fill in the area between the line and its base axis\n\n      }\n    }\n  });\n\n  var element_line = core_element.extend({\n    draw: function draw() {\n      var me = this;\n      var vm = me._view;\n      var ctx = me._chart.ctx;\n      var spanGaps = vm.spanGaps;\n\n      var points = me._children.slice(); // clone array\n\n\n      var globalDefaults = core_defaults.global;\n      var globalOptionLineElements = globalDefaults.elements.line;\n      var lastDrawnIndex = -1;\n      var index, current, previous, currentVM; // If we are looping, adding the first point again\n\n      if (me._loop && points.length) {\n        points.push(points[0]);\n      }\n\n      ctx.save(); // Stroke Line Options\n\n      ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle; // IE 9 and 10 do not support line dash\n\n      if (ctx.setLineDash) {\n        ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n      }\n\n      ctx.lineDashOffset = valueOrDefault$1(vm.borderDashOffset, globalOptionLineElements.borderDashOffset);\n      ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n      ctx.lineWidth = valueOrDefault$1(vm.borderWidth, globalOptionLineElements.borderWidth);\n      ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor; // Stroke Line\n\n      ctx.beginPath();\n      lastDrawnIndex = -1;\n\n      for (index = 0; index < points.length; ++index) {\n        current = points[index];\n        previous = helpers$1.previousItem(points, index);\n        currentVM = current._view; // First point moves to it's starting position no matter what\n\n        if (index === 0) {\n          if (!currentVM.skip) {\n            ctx.moveTo(currentVM.x, currentVM.y);\n            lastDrawnIndex = index;\n          }\n        } else {\n          previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n          if (!currentVM.skip) {\n            if (lastDrawnIndex !== index - 1 && !spanGaps || lastDrawnIndex === -1) {\n              // There was a gap and this is the first point after the gap\n              ctx.moveTo(currentVM.x, currentVM.y);\n            } else {\n              // Line to next point\n              helpers$1.canvas.lineTo(ctx, previous._view, current._view);\n            }\n\n            lastDrawnIndex = index;\n          }\n        }\n      }\n\n      ctx.stroke();\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$2 = helpers$1.valueOrDefault;\n  var defaultColor$1 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      point: {\n        radius: 3,\n        pointStyle: 'circle',\n        backgroundColor: defaultColor$1,\n        borderColor: defaultColor$1,\n        borderWidth: 1,\n        // Hover\n        hitRadius: 1,\n        hoverRadius: 4,\n        hoverBorderWidth: 1\n      }\n    }\n  });\n\n  function xRange(mouseX) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius : false;\n  }\n\n  function yRange(mouseY) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius : false;\n  }\n\n  var element_point = core_element.extend({\n    inRange: function inRange(mouseX, mouseY) {\n      var vm = this._view;\n      return vm ? Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2) < Math.pow(vm.hitRadius + vm.radius, 2) : false;\n    },\n    inLabelRange: xRange,\n    inXRange: xRange,\n    inYRange: yRange,\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    },\n    getArea: function getArea() {\n      return Math.PI * Math.pow(this._view.radius, 2);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y,\n        padding: vm.radius + vm.borderWidth\n      };\n    },\n    draw: function draw(chartArea) {\n      var vm = this._view;\n      var ctx = this._chart.ctx;\n      var pointStyle = vm.pointStyle;\n      var rotation = vm.rotation;\n      var radius = vm.radius;\n      var x = vm.x;\n      var y = vm.y;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor; // eslint-disable-line no-shadow\n\n      if (vm.skip) {\n        return;\n      } // Clipping for Points.\n\n\n      if (chartArea === undefined || helpers$1.canvas._isPointInArea(vm, chartArea)) {\n        ctx.strokeStyle = vm.borderColor || defaultColor;\n        ctx.lineWidth = valueOrDefault$2(vm.borderWidth, globalDefaults.elements.point.borderWidth);\n        ctx.fillStyle = vm.backgroundColor || defaultColor;\n        helpers$1.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);\n      }\n    }\n  });\n  var defaultColor$2 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      rectangle: {\n        backgroundColor: defaultColor$2,\n        borderColor: defaultColor$2,\n        borderSkipped: 'bottom',\n        borderWidth: 0\n      }\n    }\n  });\n\n  function isVertical(vm) {\n    return vm && vm.width !== undefined;\n  }\n  /**\n   * Helper function to get the bounds of the bar regardless of the orientation\n   * @param bar {Chart.Element.Rectangle} the bar\n   * @return {Bounds} bounds of the bar\n   * @private\n   */\n\n\n  function getBarBounds(vm) {\n    var x1, x2, y1, y2, half;\n\n    if (isVertical(vm)) {\n      half = vm.width / 2;\n      x1 = vm.x - half;\n      x2 = vm.x + half;\n      y1 = Math.min(vm.y, vm.base);\n      y2 = Math.max(vm.y, vm.base);\n    } else {\n      half = vm.height / 2;\n      x1 = Math.min(vm.x, vm.base);\n      x2 = Math.max(vm.x, vm.base);\n      y1 = vm.y - half;\n      y2 = vm.y + half;\n    }\n\n    return {\n      left: x1,\n      top: y1,\n      right: x2,\n      bottom: y2\n    };\n  }\n\n  function swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n  }\n\n  function parseBorderSkipped(vm) {\n    var edge = vm.borderSkipped;\n    var res = {};\n\n    if (!edge) {\n      return res;\n    }\n\n    if (vm.horizontal) {\n      if (vm.base > vm.x) {\n        edge = swap(edge, 'left', 'right');\n      }\n    } else if (vm.base < vm.y) {\n      edge = swap(edge, 'bottom', 'top');\n    }\n\n    res[edge] = true;\n    return res;\n  }\n\n  function parseBorderWidth(vm, maxW, maxH) {\n    var value = vm.borderWidth;\n    var skip = parseBorderSkipped(vm);\n    var t, r, b, l;\n\n    if (helpers$1.isObject(value)) {\n      t = +value.top || 0;\n      r = +value.right || 0;\n      b = +value.bottom || 0;\n      l = +value.left || 0;\n    } else {\n      t = r = b = l = +value || 0;\n    }\n\n    return {\n      t: skip.top || t < 0 ? 0 : t > maxH ? maxH : t,\n      r: skip.right || r < 0 ? 0 : r > maxW ? maxW : r,\n      b: skip.bottom || b < 0 ? 0 : b > maxH ? maxH : b,\n      l: skip.left || l < 0 ? 0 : l > maxW ? maxW : l\n    };\n  }\n\n  function boundingRects(vm) {\n    var bounds = getBarBounds(vm);\n    var width = bounds.right - bounds.left;\n    var height = bounds.bottom - bounds.top;\n    var border = parseBorderWidth(vm, width / 2, height / 2);\n    return {\n      outer: {\n        x: bounds.left,\n        y: bounds.top,\n        w: width,\n        h: height\n      },\n      inner: {\n        x: bounds.left + border.l,\n        y: bounds.top + border.t,\n        w: width - border.l - border.r,\n        h: height - border.t - border.b\n      }\n    };\n  }\n\n  function _inRange(vm, x, y) {\n    var skipX = x === null;\n    var skipY = y === null;\n    var bounds = !vm || skipX && skipY ? false : getBarBounds(vm);\n    return bounds && (skipX || x >= bounds.left && x <= bounds.right) && (skipY || y >= bounds.top && y <= bounds.bottom);\n  }\n\n  var element_rectangle = core_element.extend({\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var rects = boundingRects(vm);\n      var outer = rects.outer;\n      var inner = rects.inner;\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fillRect(outer.x, outer.y, outer.w, outer.h);\n\n      if (outer.w === inner.w && outer.h === inner.h) {\n        return;\n      }\n\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(outer.x, outer.y, outer.w, outer.h);\n      ctx.clip();\n      ctx.fillStyle = vm.borderColor;\n      ctx.rect(inner.x, inner.y, inner.w, inner.h);\n      ctx.fill('evenodd');\n      ctx.restore();\n    },\n    height: function height() {\n      var vm = this._view;\n      return vm.base - vm.y;\n    },\n    inRange: function inRange(mouseX, mouseY) {\n      return _inRange(this._view, mouseX, mouseY);\n    },\n    inLabelRange: function inLabelRange(mouseX, mouseY) {\n      var vm = this._view;\n      return isVertical(vm) ? _inRange(vm, mouseX, null) : _inRange(vm, null, mouseY);\n    },\n    inXRange: function inXRange(mouseX) {\n      return _inRange(this._view, mouseX, null);\n    },\n    inYRange: function inYRange(mouseY) {\n      return _inRange(this._view, null, mouseY);\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var x, y;\n\n      if (isVertical(vm)) {\n        x = vm.x;\n        y = (vm.y + vm.base) / 2;\n      } else {\n        x = (vm.x + vm.base) / 2;\n        y = vm.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return isVertical(vm) ? vm.width * Math.abs(vm.y - vm.base) : vm.height * Math.abs(vm.x - vm.base);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    }\n  });\n  var elements = {};\n  var Arc = element_arc;\n  var Line = element_line;\n  var Point = element_point;\n  var Rectangle = element_rectangle;\n  elements.Arc = Arc;\n  elements.Line = Line;\n  elements.Point = Point;\n  elements.Rectangle = Rectangle;\n  var resolve$1 = helpers$1.options.resolve;\n\n  core_defaults._set('bar', {\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }],\n      yAxes: [{\n        type: 'linear'\n      }]\n    }\n  });\n  /**\n   * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n   * @private\n   */\n\n\n  function computeMinSampleSize(scale, pixels) {\n    var min = scale.isHorizontal() ? scale.width : scale.height;\n    var ticks = scale.getTicks();\n    var prev, curr, i, ilen;\n\n    for (i = 1, ilen = pixels.length; i < ilen; ++i) {\n      min = Math.min(min, Math.abs(pixels[i] - pixels[i - 1]));\n    }\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      curr = scale.getPixelForTick(i);\n      min = i > 0 ? Math.min(min, curr - prev) : min;\n      prev = curr;\n    }\n\n    return min;\n  }\n  /**\n   * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n   * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n   * mode currently always generates bars equally sized (until we introduce scriptable options?).\n   * @private\n   */\n\n\n  function computeFitCategoryTraits(index, ruler, options) {\n    var thickness = options.barThickness;\n    var count = ruler.stackCount;\n    var curr = ruler.pixels[index];\n    var size, ratio;\n\n    if (helpers$1.isNullOrUndef(thickness)) {\n      size = ruler.min * options.categoryPercentage;\n      ratio = options.barPercentage;\n    } else {\n      // When bar thickness is enforced, category and bar percentages are ignored.\n      // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n      // and deprecate barPercentage since this value is ignored when thickness is absolute.\n      size = thickness * count;\n      ratio = 1;\n    }\n\n    return {\n      chunk: size / count,\n      ratio: ratio,\n      start: curr - size / 2\n    };\n  }\n  /**\n   * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n   * percentage options are 1), based on the previous and following categories. This mode\n   * generates bars with different widths when data are not evenly spaced.\n   * @private\n   */\n\n\n  function computeFlexCategoryTraits(index, ruler, options) {\n    var pixels = ruler.pixels;\n    var curr = pixels[index];\n    var prev = index > 0 ? pixels[index - 1] : null;\n    var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    var percent = options.categoryPercentage;\n    var start, size;\n\n    if (prev === null) {\n      // first data: its size is double based on the next point or,\n      // if it's also the last data, we use the scale size.\n      prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n\n    if (next === null) {\n      // last data: its size is also double based on the previous point.\n      next = curr + curr - prev;\n    }\n\n    start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    size = Math.abs(next - prev) / 2 * percent;\n    return {\n      chunk: size / ruler.stackCount,\n      ratio: options.barPercentage,\n      start: start\n    };\n  }\n\n  var controller_bar = core_datasetController.extend({\n    dataElementType: elements.Rectangle,\n    initialize: function initialize() {\n      var me = this;\n      var meta;\n      core_datasetController.prototype.initialize.apply(me, arguments);\n      meta = me.getMeta();\n      meta.stack = me.getDataset().stack;\n      meta.bar = true;\n    },\n    update: function update(reset) {\n      var me = this;\n      var rects = me.getMeta().data;\n      var i, ilen;\n      me._ruler = me.getRuler();\n\n      for (i = 0, ilen = rects.length; i < ilen; ++i) {\n        me.updateElement(rects[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(rectangle, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      var options = me._resolveElementOptions(rectangle, index);\n\n      rectangle._xScale = me.getScaleForId(meta.xAxisID);\n      rectangle._yScale = me.getScaleForId(meta.yAxisID);\n      rectangle._datasetIndex = me.index;\n      rectangle._index = index;\n      rectangle._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderSkipped: options.borderSkipped,\n        borderWidth: options.borderWidth,\n        datasetLabel: dataset.label,\n        label: me.chart.data.labels[index]\n      };\n\n      me._updateElementGeometry(rectangle, index, reset);\n\n      rectangle.pivot();\n    },\n\n    /**\n     * @private\n     */\n    _updateElementGeometry: function _updateElementGeometry(rectangle, index, reset) {\n      var me = this;\n      var model = rectangle._model;\n\n      var vscale = me._getValueScale();\n\n      var base = vscale.getBasePixel();\n      var horizontal = vscale.isHorizontal();\n      var ruler = me._ruler || me.getRuler();\n      var vpixels = me.calculateBarValuePixels(me.index, index);\n      var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n      model.horizontal = horizontal;\n      model.base = reset ? base : vpixels.base;\n      model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n      model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n      model.height = horizontal ? ipixels.size : undefined;\n      model.width = horizontal ? undefined : ipixels.size;\n    },\n\n    /**\n     * Returns the stacks based on groups and bar visibility.\n     * @param {number} [last] - The dataset index\n     * @returns {string[]} The list of stack IDs\n     * @private\n     */\n    _getStacks: function _getStacks(last) {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getIndexScale();\n\n      var stacked = scale.options.stacked;\n      var ilen = last === undefined ? chart.data.datasets.length : last + 1;\n      var stacks = [];\n      var i, meta;\n\n      for (i = 0; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i);\n\n        if (meta.bar && chart.isDatasetVisible(i) && (stacked === false || stacked === true && stacks.indexOf(meta.stack) === -1 || stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1))) {\n          stacks.push(meta.stack);\n        }\n      }\n\n      return stacks;\n    },\n\n    /**\n     * Returns the effective number of stacks based on groups and bar visibility.\n     * @private\n     */\n    getStackCount: function getStackCount() {\n      return this._getStacks().length;\n    },\n\n    /**\n     * Returns the stack index for the given dataset based on groups and bar visibility.\n     * @param {number} [datasetIndex] - The dataset index\n     * @param {string} [name] - The stack name to find\n     * @returns {number} The stack index\n     * @private\n     */\n    getStackIndex: function getStackIndex(datasetIndex, name) {\n      var stacks = this._getStacks(datasetIndex);\n\n      var index = name !== undefined ? stacks.indexOf(name) : -1; // indexOf returns -1 if element is not present\n\n      return index === -1 ? stacks.length - 1 : index;\n    },\n\n    /**\n     * @private\n     */\n    getRuler: function getRuler() {\n      var me = this;\n\n      var scale = me._getIndexScale();\n\n      var stackCount = me.getStackCount();\n      var datasetIndex = me.index;\n      var isHorizontal = scale.isHorizontal();\n      var start = isHorizontal ? scale.left : scale.top;\n      var end = start + (isHorizontal ? scale.width : scale.height);\n      var pixels = [];\n      var i, ilen, min;\n\n      for (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n        pixels.push(scale.getPixelForValue(null, i, datasetIndex));\n      }\n\n      min = helpers$1.isNullOrUndef(scale.options.barThickness) ? computeMinSampleSize(scale, pixels) : -1;\n      return {\n        min: min,\n        pixels: pixels,\n        start: start,\n        end: end,\n        stackCount: stackCount,\n        scale: scale\n      };\n    },\n\n    /**\n     * Note: pixel values are not clamped to the scale area.\n     * @private\n     */\n    calculateBarValuePixels: function calculateBarValuePixels(datasetIndex, index) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n\n      var scale = me._getValueScale();\n\n      var isHorizontal = scale.isHorizontal();\n      var datasets = chart.data.datasets;\n      var value = +scale.getRightValue(datasets[datasetIndex].data[index]);\n      var minBarLength = scale.options.minBarLength;\n      var stacked = scale.options.stacked;\n      var stack = meta.stack;\n      var start = 0;\n      var i, imeta, ivalue, base, head, size;\n\n      if (stacked || stacked === undefined && stack !== undefined) {\n        for (i = 0; i < datasetIndex; ++i) {\n          imeta = chart.getDatasetMeta(i);\n\n          if (imeta.bar && imeta.stack === stack && imeta.controller._getValueScaleId() === scale.id && chart.isDatasetVisible(i)) {\n            ivalue = +scale.getRightValue(datasets[i].data[index]);\n\n            if (value < 0 && ivalue < 0 || value >= 0 && ivalue > 0) {\n              start += ivalue;\n            }\n          }\n        }\n      }\n\n      base = scale.getPixelForValue(start);\n      head = scale.getPixelForValue(start + value);\n      size = head - base;\n\n      if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n        size = minBarLength;\n\n        if (value >= 0 && !isHorizontal || value < 0 && isHorizontal) {\n          head = base - minBarLength;\n        } else {\n          head = base + minBarLength;\n        }\n      }\n\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    },\n\n    /**\n     * @private\n     */\n    calculateBarIndexPixels: function calculateBarIndexPixels(datasetIndex, index, ruler) {\n      var me = this;\n      var options = ruler.scale.options;\n      var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options) : computeFitCategoryTraits(index, ruler, options);\n      var stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n      var center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      var size = Math.min(helpers$1.valueOrDefault(options.maxBarThickness, Infinity), range.chunk * range.ratio);\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getValueScale();\n\n      var rects = me.getMeta().data;\n      var dataset = me.getDataset();\n      var ilen = rects.length;\n      var i = 0;\n      helpers$1.canvas.clipArea(chart.ctx, chart.chartArea);\n\n      for (; i < ilen; ++i) {\n        if (!isNaN(scale.getRightValue(dataset.data[i]))) {\n          rects[i].draw();\n        }\n      }\n\n      helpers$1.canvas.unclipArea(chart.ctx);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(rectangle, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = rectangle.custom || {};\n      var options = chart.options.elements.rectangle;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderSkipped', 'borderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$1([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    }\n  });\n  var valueOrDefault$3 = helpers$1.valueOrDefault;\n  var resolve$2 = helpers$1.options.resolve;\n\n  core_defaults._set('bubble', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        // bubble should probably use a linear scale by default\n        position: 'bottom',\n        id: 'x-axis-0' // need an ID so datasets can reference the scale\n\n      }],\n      yAxes: [{\n        type: 'linear',\n        position: 'left',\n        id: 'y-axis-0'\n      }]\n    },\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          // Title doesn't make sense for scatter since we format the data as a point\n          return '';\n        },\n        label: function label(item, data) {\n          var datasetLabel = data.datasets[item.datasetIndex].label || '';\n          var dataPoint = data.datasets[item.datasetIndex].data[item.index];\n          return datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n        }\n      }\n    }\n  });\n\n  var controller_bubble = core_datasetController.extend({\n    /**\n     * @protected\n     */\n    dataElementType: elements.Point,\n\n    /**\n     * @protected\n     */\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var points = meta.data; // Update Points\n\n      helpers$1.each(points, function (point, index) {\n        me.updateElement(point, index, reset);\n      });\n    },\n\n    /**\n     * @protected\n     */\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var yScale = me.getScaleForId(meta.yAxisID);\n\n      var options = me._resolveElementOptions(point, index);\n\n      var data = me.getDataset().data[index];\n      var dsIndex = me.index;\n      var x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n      var y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = dsIndex;\n      point._index = index;\n      point._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        hitRadius: options.hitRadius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        radius: reset ? 0 : options.radius,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        x: x,\n        y: y\n      };\n      point.pivot();\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$3(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$3(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$3(options.hoverBorderWidth, options.borderWidth);\n      model.radius = options.radius + options.hoverRadius;\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(point, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = point.custom || {};\n      var options = chart.options.elements.point;\n      var data = dataset.data[index];\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth', 'hoverRadius', 'hitRadius', 'pointStyle', 'rotation'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$2([custom[key], dataset[key], options[key]], context, index);\n      } // Custom radius resolution\n\n\n      values.radius = resolve$2([custom.radius, data ? data.r : undefined, dataset.radius, options.radius], context, index);\n      return values;\n    }\n  });\n  var resolve$3 = helpers$1.options.resolve;\n  var valueOrDefault$4 = helpers$1.valueOrDefault;\n\n  core_defaults._set('doughnut', {\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    hover: {\n      mode: 'single'\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc && arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$3([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$3([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$3([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i); // toggle visibility of index if exists\n\n          if (meta.data[index]) {\n            meta.data[index].hidden = !meta.data[index].hidden;\n          }\n        }\n\n        chart.update();\n      }\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutoutPercentage: 50,\n    // The rotation of the chart, where the first data arc begins.\n    rotation: Math.PI * -0.5,\n    // The total circumference of the chart.\n    circumference: Math.PI * 2.0,\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(tooltipItem, data) {\n          var dataLabel = data.labels[tooltipItem.index];\n          var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n          if (helpers$1.isArray(dataLabel)) {\n            // show value on first line of multiline label\n            // need to clone because we are changing the value\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n\n          return dataLabel;\n        }\n      }\n    }\n  });\n\n  var controller_doughnut = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    // Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n    getRingIndex: function getRingIndex(datasetIndex) {\n      var ringIndex = 0;\n\n      for (var j = 0; j < datasetIndex; ++j) {\n        if (this.chart.isDatasetVisible(j)) {\n          ++ringIndex;\n        }\n      }\n\n      return ringIndex;\n    },\n    update: function update(reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var availableWidth = chartArea.right - chartArea.left;\n      var availableHeight = chartArea.bottom - chartArea.top;\n      var minSize = Math.min(availableWidth, availableHeight);\n      var offset = {\n        x: 0,\n        y: 0\n      };\n      var meta = me.getMeta();\n      var arcs = meta.data;\n      var cutoutPercentage = opts.cutoutPercentage;\n      var circumference = opts.circumference;\n\n      var chartWeight = me._getRingWeight(me.index);\n\n      var i, ilen; // If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\n      if (circumference < Math.PI * 2.0) {\n        var startAngle = opts.rotation % (Math.PI * 2.0);\n        startAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n        var endAngle = startAngle + circumference;\n        var start = {\n          x: Math.cos(startAngle),\n          y: Math.sin(startAngle)\n        };\n        var end = {\n          x: Math.cos(endAngle),\n          y: Math.sin(endAngle)\n        };\n        var contains0 = startAngle <= 0 && endAngle >= 0 || startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle;\n        var contains90 = startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle;\n        var contains180 = startAngle <= -Math.PI && -Math.PI <= endAngle || startAngle <= Math.PI && Math.PI <= endAngle;\n        var contains270 = startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle;\n        var cutout = cutoutPercentage / 100.0;\n        var min = {\n          x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)),\n          y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))\n        };\n        var max = {\n          x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)),\n          y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))\n        };\n        var size = {\n          width: (max.x - min.x) * 0.5,\n          height: (max.y - min.y) * 0.5\n        };\n        minSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n        offset = {\n          x: (max.x + min.x) * -0.5,\n          y: (max.y + min.y) * -0.5\n        };\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n      }\n\n      chart.borderWidth = me.getMaxBorderWidth();\n      chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n      chart.innerRadius = Math.max(cutoutPercentage ? chart.outerRadius / 100 * cutoutPercentage : 0, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / (me._getVisibleDatasetWeightTotal() || 1);\n      chart.offsetX = offset.x * chart.outerRadius;\n      chart.offsetY = offset.y * chart.outerRadius;\n      meta.total = me.calculateTotal();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me._getRingWeightOffset(me.index);\n      me.innerRadius = Math.max(me.outerRadius - chart.radiusLength * chartWeight, 0);\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var startAngle = opts.rotation; // non reset case handled later\n\n      var endAngle = opts.rotation; // non reset case handled later\n\n      var dataset = me.getDataset();\n      var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n      var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n      var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX + chart.offsetX,\n          y: centerY + chart.offsetY,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius,\n          label: helpers$1.valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n        }\n      });\n      var model = arc._model; // Set correct angles if not resetting\n\n      if (!reset || !animationOpts.animateRotate) {\n        if (index === 0) {\n          model.startAngle = opts.rotation;\n        } else {\n          model.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n        }\n\n        model.endAngle = model.startAngle + model.circumference;\n      }\n\n      arc.pivot();\n    },\n    calculateTotal: function calculateTotal() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var total = 0;\n      var value;\n      helpers$1.each(meta.data, function (element, index) {\n        value = dataset.data[index];\n\n        if (!isNaN(value) && !element.hidden) {\n          total += Math.abs(value);\n        }\n      });\n      /* if (total === 0) {\n      \ttotal = NaN;\n      }*/\n\n      return total;\n    },\n    calculateCircumference: function calculateCircumference(value) {\n      var total = this.getMeta().total;\n\n      if (total > 0 && !isNaN(value)) {\n        return Math.PI * 2.0 * (Math.abs(value) / total);\n      }\n\n      return 0;\n    },\n    // gets the max border or hover width to properly scale pie charts\n    getMaxBorderWidth: function getMaxBorderWidth(arcs) {\n      var me = this;\n      var max = 0;\n      var chart = me.chart;\n      var i, ilen, meta, arc, controller, options, borderWidth, hoverWidth;\n\n      if (!arcs) {\n        // Find the outmost visible dataset\n        for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n          if (chart.isDatasetVisible(i)) {\n            meta = chart.getDatasetMeta(i);\n            arcs = meta.data;\n\n            if (i !== me.index) {\n              controller = meta.controller;\n            }\n\n            break;\n          }\n        }\n      }\n\n      if (!arcs) {\n        return 0;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arc = arcs[i];\n        options = controller ? controller._resolveElementOptions(arc, i) : arc._options;\n\n        if (options.borderAlign !== 'inner') {\n          borderWidth = options.borderWidth;\n          hoverWidth = options.hoverBorderWidth;\n          max = borderWidth > max ? borderWidth : max;\n          max = hoverWidth > max ? hoverWidth : max;\n        }\n      }\n\n      return max;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault$4(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$4(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$4(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$3([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n     * @private\n     */\n    _getRingWeightOffset: function _getRingWeightOffset(datasetIndex) {\n      var ringWeightOffset = 0;\n\n      for (var i = 0; i < datasetIndex; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          ringWeightOffset += this._getRingWeight(i);\n        }\n      }\n\n      return ringWeightOffset;\n    },\n\n    /**\n     * @private\n     */\n    _getRingWeight: function _getRingWeight(dataSetIndex) {\n      return Math.max(valueOrDefault$4(this.chart.data.datasets[dataSetIndex].weight, 1), 0);\n    },\n\n    /**\n     * Returns the sum of all visibile data set weights.  This value can be 0.\n     * @private\n     */\n    _getVisibleDatasetWeightTotal: function _getVisibleDatasetWeightTotal() {\n      return this._getRingWeightOffset(this.chart.data.datasets.length);\n    }\n  });\n\n  core_defaults._set('horizontalBar', {\n    hover: {\n      mode: 'index',\n      axis: 'y'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        position: 'bottom'\n      }],\n      yAxes: [{\n        type: 'category',\n        position: 'left',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }]\n    },\n    elements: {\n      rectangle: {\n        borderSkipped: 'left'\n      }\n    },\n    tooltips: {\n      mode: 'index',\n      axis: 'y'\n    }\n  });\n\n  var controller_horizontalBar = controller_bar.extend({\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().yAxisID;\n    }\n  });\n  var valueOrDefault$5 = helpers$1.valueOrDefault;\n  var resolve$4 = helpers$1.options.resolve;\n  var isPointInArea = helpers$1.canvas._isPointInArea;\n\n  core_defaults._set('line', {\n    showLines: true,\n    spanGaps: false,\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        id: 'x-axis-0'\n      }],\n      yAxes: [{\n        type: 'linear',\n        id: 'y-axis-0'\n      }]\n    }\n  });\n\n  function lineEnabled(dataset, options) {\n    return valueOrDefault$5(dataset.showLine, options.showLines);\n  }\n\n  var controller_line = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.getScaleForId(meta.yAxisID);\n      var dataset = me.getDataset();\n      var showLine = lineEnabled(dataset, me.chart.options);\n      var i, ilen; // Update Line\n\n      if (showLine) {\n        // Compatibility: If the properties are defined with only the old name, use those values\n        if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n          dataset.lineTension = dataset.tension;\n        } // Utility\n\n\n        line._scale = scale;\n        line._datasetIndex = me.index; // Data\n\n        line._children = points; // Model\n\n        line._model = me._resolveLineOptions(line);\n        line.pivot();\n      } // Update Points\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      }\n\n      if (showLine && line._model.tension !== 0) {\n        me.updateBezierControlPoints();\n      } // Now pivot the point for animation\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var datasetIndex = me.index;\n      var value = dataset.data[index];\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var lineModel = meta.dataset._model;\n      var x, y;\n\n      var options = me._resolvePointOptions(point, index);\n\n      x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n      y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex); // Utility\n\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = datasetIndex;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$5(custom.tension, lineModel ? lineModel.tension : 0),\n        steppedLine: lineModel ? lineModel.steppedLine : false,\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options;\n      var elementOptions = options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill', 'cubicInterpolationMode'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[key], elementOptions[key]]);\n      } // The default behavior of lines is to break at null values, according\n      // to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n      // This option gives lines the ability to span gaps\n\n\n      values.spanGaps = valueOrDefault$5(dataset.spanGaps, options.spanGaps);\n      values.tension = valueOrDefault$5(dataset.lineTension, elementOptions.tension);\n      values.steppedLine = resolve$4([custom.steppedLine, dataset.steppedLine, elementOptions.stepped]);\n      return values;\n    },\n    calculatePointY: function calculatePointY(value, index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var sumPos = 0;\n      var sumNeg = 0;\n      var i, ds, dsMeta;\n\n      if (yScale.options.stacked) {\n        for (i = 0; i < datasetIndex; i++) {\n          ds = chart.data.datasets[i];\n          dsMeta = chart.getDatasetMeta(i);\n\n          if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n            var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\n            if (stackedRightValue < 0) {\n              sumNeg += stackedRightValue || 0;\n            } else {\n              sumPos += stackedRightValue || 0;\n            }\n          }\n        }\n\n        var rightValue = Number(yScale.getRightValue(value));\n\n        if (rightValue < 0) {\n          return yScale.getPixelForValue(sumNeg + rightValue);\n        }\n\n        return yScale.getPixelForValue(sumPos + rightValue);\n      }\n\n      return yScale.getPixelForValue(value);\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var lineModel = meta.dataset._model;\n      var area = chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints; // Only consider points that are drawn in case the spanGaps option is used\n\n      if (lineModel.spanGaps) {\n        points = points.filter(function (pt) {\n          return !pt._model.skip;\n        });\n      }\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      if (lineModel.cubicInterpolationMode === 'monotone') {\n        helpers$1.splineCurveMonotone(points);\n      } else {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n          controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i)._model, model, helpers$1.nextItem(points, i)._model, lineModel.tension);\n          model.controlPointPreviousX = controlPoints.previous.x;\n          model.controlPointPreviousY = controlPoints.previous.y;\n          model.controlPointNextX = controlPoints.next.x;\n          model.controlPointNextY = controlPoints.next.y;\n        }\n      }\n\n      if (chart.options.elements.line.capBezierPoints) {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n\n          if (isPointInArea(model, area)) {\n            if (i > 0 && isPointInArea(points[i - 1]._model, area)) {\n              model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n              model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n            }\n\n            if (i < points.length - 1 && isPointInArea(points[i + 1]._model, area)) {\n              model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n              model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n            }\n          }\n        }\n      }\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var points = meta.data || [];\n      var area = chart.chartArea;\n      var ilen = points.length;\n      var halfBorderWidth;\n      var i = 0;\n\n      if (lineEnabled(me.getDataset(), chart.options)) {\n        halfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\n        helpers$1.canvas.clipArea(chart.ctx, {\n          left: area.left,\n          right: area.right,\n          top: area.top - halfBorderWidth,\n          bottom: area.bottom + halfBorderWidth\n        });\n        meta.dataset.draw();\n        helpers$1.canvas.unclipArea(chart.ctx);\n      } // Draw the points\n\n\n      for (; i < ilen; ++i) {\n        points[i].draw(area);\n      }\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$5(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$5(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$5(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$5(options.hoverRadius, options.radius);\n    }\n  });\n  var resolve$5 = helpers$1.options.resolve;\n\n  core_defaults._set('polarArea', {\n    scale: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      gridLines: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      ticks: {\n        beginAtZero: true\n      }\n    },\n    // Boolean - Whether to animate the rotation of the chart\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    startAngle: -0.5 * Math.PI,\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$5([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$5([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$5([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i);\n          meta.data[index].hidden = !meta.data[index].hidden;\n        }\n\n        chart.update();\n      }\n    },\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(item, data) {\n          return data.labels[item.index] + ': ' + item.yLabel;\n        }\n      }\n    }\n  });\n\n  var controller_polarArea = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n      var start = me.chart.options.startAngle || 0;\n      var starts = me._starts = [];\n      var angles = me._angles = [];\n      var arcs = meta.data;\n      var i, ilen, angle;\n\n      me._updateRadius();\n\n      meta.count = me.countVisibleElements();\n\n      for (i = 0, ilen = dataset.data.length; i < ilen; i++) {\n        starts[i] = start;\n        angle = me._computeAngle(i);\n        angles[i] = angle;\n        start += angle;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _updateRadius: function _updateRadius() {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      chart.outerRadius = Math.max(minSize / 2, 0);\n      chart.innerRadius = Math.max(opts.cutoutPercentage ? chart.outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me.index;\n      me.innerRadius = me.outerRadius - chart.radiusLength;\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = chart.scale;\n      var labels = chart.data.labels;\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter; // var negHalfPI = -0.5 * Math.PI;\n\n      var datasetStartAngle = opts.startAngle;\n      var distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var startAngle = me._starts[index];\n      var endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);\n      var resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        _scale: scale,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: reset ? resetRadius : distance,\n          startAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n          endAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n          label: helpers$1.valueAtIndexOrDefault(labels, index, labels[index])\n        }\n      });\n      arc.pivot();\n    },\n    countVisibleElements: function countVisibleElements() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var count = 0;\n      helpers$1.each(meta.data, function (element, index) {\n        if (!isNaN(dataset.data[index]) && !element.hidden) {\n          count++;\n        }\n      });\n      return count;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      var valueOrDefault = helpers$1.valueOrDefault;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$5([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _computeAngle: function _computeAngle(index) {\n      var me = this;\n      var count = this.getMeta().count;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n\n      if (isNaN(dataset.data[index]) || meta.data[index].hidden) {\n        return 0;\n      } // Scriptable options\n\n\n      var context = {\n        chart: me.chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      return resolve$5([me.chart.options.elements.arc.angle, 2 * Math.PI / count], context, index);\n    }\n  });\n\n  core_defaults._set('pie', helpers$1.clone(core_defaults.doughnut));\n\n  core_defaults._set('pie', {\n    cutoutPercentage: 0\n  }); // Pie charts are Doughnut chart with different defaults\n\n\n  var controller_pie = controller_doughnut;\n  var valueOrDefault$6 = helpers$1.valueOrDefault;\n  var resolve$6 = helpers$1.options.resolve;\n\n  core_defaults._set('radar', {\n    scale: {\n      type: 'radialLinear'\n    },\n    elements: {\n      line: {\n        tension: 0 // no bezier in radar\n\n      }\n    }\n  });\n\n  var controller_radar = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.chart.scale;\n      var dataset = me.getDataset();\n      var i, ilen; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n        dataset.lineTension = dataset.tension;\n      } // Utility\n\n\n      line._scale = scale;\n      line._datasetIndex = me.index; // Data\n\n      line._children = points;\n      line._loop = true; // Model\n\n      line._model = me._resolveLineOptions(line);\n      line.pivot(); // Update Points\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      } // Update bezier control points\n\n\n      me.updateBezierControlPoints(); // Now pivot the point for animation\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var scale = me.chart.scale;\n      var pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\n      var options = me._resolvePointOptions(point, index);\n\n      var lineModel = me.getMeta().dataset._model;\n\n      var x = reset ? scale.xCenter : pointPosition.x;\n      var y = reset ? scale.yCenter : pointPosition.y; // Utility\n\n      point._scale = scale;\n      point._options = options;\n      point._datasetIndex = me.index;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        // value not used in dataset scale, but we want a consistent API between scales\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$6(custom.tension, lineModel ? lineModel.tension : 0),\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[key], options[key]]);\n      }\n\n      values.tension = valueOrDefault$6(dataset.lineTension, options.tension);\n      return values;\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var meta = me.getMeta();\n      var area = me.chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints;\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        model = points[i]._model;\n        controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i, true)._model, model, helpers$1.nextItem(points, i, true)._model, model.tension); // Prevent the bezier going outside of the bounds of the graph\n\n        model.controlPointPreviousX = capControlPoint(controlPoints.previous.x, area.left, area.right);\n        model.controlPointPreviousY = capControlPoint(controlPoints.previous.y, area.top, area.bottom);\n        model.controlPointNextX = capControlPoint(controlPoints.next.x, area.left, area.right);\n        model.controlPointNextY = capControlPoint(controlPoints.next.y, area.top, area.bottom);\n      }\n    },\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$6(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$6(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$6(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$6(options.hoverRadius, options.radius);\n    }\n  });\n\n  core_defaults._set('scatter', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        id: 'x-axis-1',\n        // need an ID so datasets can reference the scale\n        type: 'linear',\n        // scatter should not use a category axis\n        position: 'bottom'\n      }],\n      yAxes: [{\n        id: 'y-axis-1',\n        type: 'linear',\n        position: 'left'\n      }]\n    },\n    showLines: false,\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return ''; // doesn't make sense for scatter since data are formatted as a point\n        },\n        label: function label(item) {\n          return '(' + item.xLabel + ', ' + item.yLabel + ')';\n        }\n      }\n    }\n  }); // Scatter charts use line controllers\n\n\n  var controller_scatter = controller_line; // NOTE export a map in which the key represents the controller type, not\n  // the class, and so must be CamelCase in order to be correctly retrieved\n  // by the controller in core.controller.js (`controllers[meta.type]`).\n\n  var controllers = {\n    bar: controller_bar,\n    bubble: controller_bubble,\n    doughnut: controller_doughnut,\n    horizontalBar: controller_horizontalBar,\n    line: controller_line,\n    polarArea: controller_polarArea,\n    pie: controller_pie,\n    radar: controller_radar,\n    scatter: controller_scatter\n  };\n  /**\n   * Helper function to get relative position for an event\n   * @param {Event|IEvent} event - The event to get the position for\n   * @param {Chart} chart - The chart\n   * @returns {object} the event position\n   */\n\n  function getRelativePosition(e, chart) {\n    if (e.native) {\n      return {\n        x: e.x,\n        y: e.y\n      };\n    }\n\n    return helpers$1.getRelativePosition(e, chart);\n  }\n  /**\n   * Helper function to traverse all of the visible elements in the chart\n   * @param {Chart} chart - the chart\n   * @param {function} handler - the callback to execute for each visible item\n   */\n\n\n  function parseVisibleItems(chart, handler) {\n    var datasets = chart.data.datasets;\n    var meta, i, j, ilen, jlen;\n\n    for (i = 0, ilen = datasets.length; i < ilen; ++i) {\n      if (!chart.isDatasetVisible(i)) {\n        continue;\n      }\n\n      meta = chart.getDatasetMeta(i);\n\n      for (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n        var element = meta.data[j];\n\n        if (!element._view.skip) {\n          handler(element);\n        }\n      }\n    }\n  }\n  /**\n   * Helper function to get the items that intersect the event position\n   * @param {ChartElement[]} items - elements to filter\n   * @param {object} position - the point to be nearest to\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getIntersectItems(chart, position) {\n    var elements = [];\n    parseVisibleItems(chart, function (element) {\n      if (element.inRange(position.x, position.y)) {\n        elements.push(element);\n      }\n    });\n    return elements;\n  }\n  /**\n   * Helper function to get the items nearest to the event position considering all visible items in teh chart\n   * @param {Chart} chart - the chart to look at elements from\n   * @param {object} position - the point to be nearest to\n   * @param {boolean} intersect - if true, only consider items that intersect the position\n   * @param {function} distanceMetric - function to provide the distance between points\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getNearestItems(chart, position, intersect, distanceMetric) {\n    var minDistance = Number.POSITIVE_INFINITY;\n    var nearestItems = [];\n    parseVisibleItems(chart, function (element) {\n      if (intersect && !element.inRange(position.x, position.y)) {\n        return;\n      }\n\n      var center = element.getCenterPoint();\n      var distance = distanceMetric(position, center);\n\n      if (distance < minDistance) {\n        nearestItems = [element];\n        minDistance = distance;\n      } else if (distance === minDistance) {\n        // Can have multiple items at the same distance in which case we sort by size\n        nearestItems.push(element);\n      }\n    });\n    return nearestItems;\n  }\n  /**\n   * Get a distance metric function for two points based on the\n   * axis mode setting\n   * @param {string} axis - the axis mode. x|y|xy\n   */\n\n\n  function getDistanceMetricForAxis(axis) {\n    var useX = axis.indexOf('x') !== -1;\n    var useY = axis.indexOf('y') !== -1;\n    return function (pt1, pt2) {\n      var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n      var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n      return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n  }\n\n  function indexMode(chart, e, options) {\n    var position = getRelativePosition(e, chart); // Default axis for index mode is 'x' to match old behaviour\n\n    options.axis = options.axis || 'x';\n    var distanceMetric = getDistanceMetricForAxis(options.axis);\n    var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n    var elements = [];\n\n    if (!items.length) {\n      return [];\n    }\n\n    chart.data.datasets.forEach(function (dataset, datasetIndex) {\n      if (chart.isDatasetVisible(datasetIndex)) {\n        var meta = chart.getDatasetMeta(datasetIndex);\n        var element = meta.data[items[0]._index]; // don't count items that are skipped (null data)\n\n        if (element && !element._view.skip) {\n          elements.push(element);\n        }\n      }\n    });\n    return elements;\n  }\n  /**\n   * @interface IInteractionOptions\n   */\n\n  /**\n   * If true, only consider items that intersect the point\n   * @name IInterfaceOptions#boolean\n   * @type Boolean\n   */\n\n  /**\n   * Contains interaction related functions\n   * @namespace Chart.Interaction\n   */\n\n\n  var core_interaction = {\n    // Helper function for different modes\n    modes: {\n      single: function single(chart, e) {\n        var position = getRelativePosition(e, chart);\n        var elements = [];\n        parseVisibleItems(chart, function (element) {\n          if (element.inRange(position.x, position.y)) {\n            elements.push(element);\n            return elements;\n          }\n        });\n        return elements.slice(0, 1);\n      },\n\n      /**\n       * @function Chart.Interaction.modes.label\n       * @deprecated since version 2.4.0\n       * @todo remove at version 3\n       * @private\n       */\n      label: indexMode,\n\n      /**\n       * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n       * @function Chart.Interaction.modes.index\n       * @since v2.4.0\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      index: indexMode,\n\n      /**\n       * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect is false, we find the nearest item and return the items in that dataset\n       * @function Chart.Interaction.modes.dataset\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      dataset: function dataset(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n        if (items.length > 0) {\n          items = chart.getDatasetMeta(items[0]._datasetIndex).data;\n        }\n\n        return items;\n      },\n\n      /**\n       * @function Chart.Interaction.modes.x-axis\n       * @deprecated since version 2.4.0. Use index mode and intersect == true\n       * @todo remove at version 3\n       * @private\n       */\n      'x-axis': function xAxis(chart, e) {\n        return indexMode(chart, e, {\n          intersect: false\n        });\n      },\n\n      /**\n       * Point mode returns all elements that hit test based on the event position\n       * of the event\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      point: function point(chart, e) {\n        var position = getRelativePosition(e, chart);\n        return getIntersectItems(chart, position);\n      },\n\n      /**\n       * nearest mode returns the element closest to the point\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      nearest: function nearest(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        return getNearestItems(chart, position, options.intersect, distanceMetric);\n      },\n\n      /**\n       * x mode returns the elements that hit-test at the current x coordinate\n       * @function Chart.Interaction.modes.x\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      x: function x(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inXRange(position.x)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      },\n\n      /**\n       * y mode returns the elements that hit-test at the current y coordinate\n       * @function Chart.Interaction.modes.y\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      y: function y(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inYRange(position.y)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      }\n    }\n  };\n\n  function filterByPosition(array, position) {\n    return helpers$1.where(array, function (v) {\n      return v.position === position;\n    });\n  }\n\n  function sortByWeight(array, reverse) {\n    array.forEach(function (v, i) {\n      v._tmpIndex_ = i;\n      return v;\n    });\n    array.sort(function (a, b) {\n      var v0 = reverse ? b : a;\n      var v1 = reverse ? a : b;\n      return v0.weight === v1.weight ? v0._tmpIndex_ - v1._tmpIndex_ : v0.weight - v1.weight;\n    });\n    array.forEach(function (v) {\n      delete v._tmpIndex_;\n    });\n  }\n\n  function findMaxPadding(boxes) {\n    var top = 0;\n    var left = 0;\n    var bottom = 0;\n    var right = 0;\n    helpers$1.each(boxes, function (box) {\n      if (box.getPadding) {\n        var boxPadding = box.getPadding();\n        top = Math.max(top, boxPadding.top);\n        left = Math.max(left, boxPadding.left);\n        bottom = Math.max(bottom, boxPadding.bottom);\n        right = Math.max(right, boxPadding.right);\n      }\n    });\n    return {\n      top: top,\n      left: left,\n      bottom: bottom,\n      right: right\n    };\n  }\n\n  function addSizeByPosition(boxes, size) {\n    helpers$1.each(boxes, function (box) {\n      size[box.position] += box.isHorizontal() ? box.height : box.width;\n    });\n  }\n\n  core_defaults._set('global', {\n    layout: {\n      padding: {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0\n      }\n    }\n  });\n  /**\n   * @interface ILayoutItem\n   * @prop {string} position - The position of the item in the chart layout. Possible values are\n   * 'left', 'top', 'right', 'bottom', and 'chartArea'\n   * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n   * @prop {boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n   * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n   * @prop {function} update - Takes two parameters: width and height. Returns size of item\n   * @prop {function} getPadding -  Returns an object with padding on the edges\n   * @prop {number} width - Width of item. Must be valid after update()\n   * @prop {number} height - Height of item. Must be valid after update()\n   * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n   */\n  // The layout service is very self explanatory.  It's responsible for the layout within a chart.\n  // Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n  // It is this service's responsibility of carrying out that layout.\n\n\n  var core_layouts = {\n    defaults: {},\n\n    /**\n     * Register a box to a chart.\n     * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n     * @param {Chart} chart - the chart to use\n     * @param {ILayoutItem} item - the item to add to be layed out\n     */\n    addBox: function addBox(chart, item) {\n      if (!chart.boxes) {\n        chart.boxes = [];\n      } // initialize item with default values\n\n\n      item.fullWidth = item.fullWidth || false;\n      item.position = item.position || 'top';\n      item.weight = item.weight || 0;\n      chart.boxes.push(item);\n    },\n\n    /**\n     * Remove a layoutItem from a chart\n     * @param {Chart} chart - the chart to remove the box from\n     * @param {ILayoutItem} layoutItem - the item to remove from the layout\n     */\n    removeBox: function removeBox(chart, layoutItem) {\n      var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n      if (index !== -1) {\n        chart.boxes.splice(index, 1);\n      }\n    },\n\n    /**\n     * Sets (or updates) options on the given `item`.\n     * @param {Chart} chart - the chart in which the item lives (or will be added to)\n     * @param {ILayoutItem} item - the item to configure with the given options\n     * @param {object} options - the new item options.\n     */\n    configure: function configure(chart, item, options) {\n      var props = ['fullWidth', 'position', 'weight'];\n      var ilen = props.length;\n      var i = 0;\n      var prop;\n\n      for (; i < ilen; ++i) {\n        prop = props[i];\n\n        if (options.hasOwnProperty(prop)) {\n          item[prop] = options[prop];\n        }\n      }\n    },\n\n    /**\n     * Fits boxes of the given chart into the given size by having each box measure itself\n     * then running a fitting algorithm\n     * @param {Chart} chart - the chart\n     * @param {number} width - the width to fit into\n     * @param {number} height - the height to fit into\n     */\n    update: function update(chart, width, height) {\n      if (!chart) {\n        return;\n      }\n\n      var layoutOptions = chart.options.layout || {};\n      var padding = helpers$1.options.toPadding(layoutOptions.padding);\n      var leftPadding = padding.left;\n      var rightPadding = padding.right;\n      var topPadding = padding.top;\n      var bottomPadding = padding.bottom;\n      var leftBoxes = filterByPosition(chart.boxes, 'left');\n      var rightBoxes = filterByPosition(chart.boxes, 'right');\n      var topBoxes = filterByPosition(chart.boxes, 'top');\n      var bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n      var chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea'); // Sort boxes by weight. A higher weight is further away from the chart area\n\n      sortByWeight(leftBoxes, true);\n      sortByWeight(rightBoxes, false);\n      sortByWeight(topBoxes, true);\n      sortByWeight(bottomBoxes, false);\n      var verticalBoxes = leftBoxes.concat(rightBoxes);\n      var horizontalBoxes = topBoxes.concat(bottomBoxes);\n      var outerBoxes = verticalBoxes.concat(horizontalBoxes); // Essentially we now have any number of boxes on each of the 4 sides.\n      // Our canvas looks like the following.\n      // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n      // B1 is the bottom axis\n      // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n      // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n      // an error will be thrown.\n      //\n      // |----------------------------------------------------|\n      // |                  T1 (Full Width)                   |\n      // |----------------------------------------------------|\n      // |    |    |                 T2                  |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    | C1 |                           | C2 |    |\n      // |    |    |----|                           |----|    |\n      // |    |    |                                     |    |\n      // | L1 | L2 |           ChartArea (C0)            | R1 |\n      // |    |    |                                     |    |\n      // |    |    |----|                           |----|    |\n      // |    |    | C3 |                           | C4 |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    |                 B1                  |    |\n      // |----------------------------------------------------|\n      // |                  B2 (Full Width)                   |\n      // |----------------------------------------------------|\n      //\n      // What we do to find the best sizing, we do the following\n      // 1. Determine the minimum size of the chart area.\n      // 2. Split the remaining width equally between each vertical axis\n      // 3. Split the remaining height equally between each horizontal axis\n      // 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n      // 5. Adjust the sizes of each axis based on it's minimum reported size.\n      // 6. Refit each axis\n      // 7. Position each axis in the final location\n      // 8. Tell the chart the final location of the chart area\n      // 9. Tell any axes that overlay the chart area the positions of the chart area\n      // Step 1\n\n      var chartWidth = width - leftPadding - rightPadding;\n      var chartHeight = height - topPadding - bottomPadding;\n      var chartAreaWidth = chartWidth / 2; // min 50%\n      // Step 2\n\n      var verticalBoxWidth = (width - chartAreaWidth) / verticalBoxes.length; // Step 3\n      // TODO re-limit horizontal axis height (this limit has affected only padding calculation since PR 1837)\n      // var horizontalBoxHeight = (height - chartAreaHeight) / horizontalBoxes.length;\n      // Step 4\n\n      var maxChartAreaWidth = chartWidth;\n      var maxChartAreaHeight = chartHeight;\n      var outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      var minBoxSizes = [];\n      var maxPadding;\n\n      function getMinimumBoxSize(box) {\n        var minSize;\n        var isHorizontal = box.isHorizontal();\n\n        if (isHorizontal) {\n          minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2);\n          maxChartAreaHeight -= minSize.height;\n        } else {\n          minSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n          maxChartAreaWidth -= minSize.width;\n        }\n\n        minBoxSizes.push({\n          horizontal: isHorizontal,\n          width: minSize.width,\n          box: box\n        });\n      }\n\n      helpers$1.each(outerBoxes, getMinimumBoxSize); // If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\n      maxPadding = findMaxPadding(outerBoxes); // At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n      // be if the axes are drawn at their minimum sizes.\n      // Steps 5 & 6\n      // Function to fit a box\n\n      function fitBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minBox) {\n          return minBox.box === box;\n        });\n\n        if (minBoxSize) {\n          if (minBoxSize.horizontal) {\n            var scaleMargin = {\n              left: Math.max(outerBoxSizes.left, maxPadding.left),\n              right: Math.max(outerBoxSizes.right, maxPadding.right),\n              top: 0,\n              bottom: 0\n            }; // Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n            // on the margin. Sometimes they need to increase in size slightly\n\n            box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n          } else {\n            box.update(minBoxSize.width, maxChartAreaHeight);\n          }\n        }\n      } // Update, and calculate the left and right margins for the horizontal boxes\n\n\n      helpers$1.each(verticalBoxes, fitBox);\n      addSizeByPosition(verticalBoxes, outerBoxSizes); // Set the Left and Right margins for the horizontal boxes\n\n      helpers$1.each(horizontalBoxes, fitBox);\n      addSizeByPosition(horizontalBoxes, outerBoxSizes);\n\n      function finalFitVerticalBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minSize) {\n          return minSize.box === box;\n        });\n        var scaleMargin = {\n          left: 0,\n          right: 0,\n          top: outerBoxSizes.top,\n          bottom: outerBoxSizes.bottom\n        };\n\n        if (minBoxSize) {\n          box.update(minBoxSize.width, maxChartAreaHeight, scaleMargin);\n        }\n      } // Let the left layout know the final margin\n\n\n      helpers$1.each(verticalBoxes, finalFitVerticalBox); // Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\n      outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      addSizeByPosition(outerBoxes, outerBoxSizes); // We may be adding some padding to account for rotated x axis labels\n\n      var leftPaddingAddition = Math.max(maxPadding.left - outerBoxSizes.left, 0);\n      outerBoxSizes.left += leftPaddingAddition;\n      outerBoxSizes.right += Math.max(maxPadding.right - outerBoxSizes.right, 0);\n      var topPaddingAddition = Math.max(maxPadding.top - outerBoxSizes.top, 0);\n      outerBoxSizes.top += topPaddingAddition;\n      outerBoxSizes.bottom += Math.max(maxPadding.bottom - outerBoxSizes.bottom, 0); // Figure out if our chart area changed. This would occur if the dataset layout label rotation\n      // changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n      // without calling `fit` again\n\n      var newMaxChartAreaHeight = height - outerBoxSizes.top - outerBoxSizes.bottom;\n      var newMaxChartAreaWidth = width - outerBoxSizes.left - outerBoxSizes.right;\n\n      if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n        helpers$1.each(verticalBoxes, function (box) {\n          box.height = newMaxChartAreaHeight;\n        });\n        helpers$1.each(horizontalBoxes, function (box) {\n          if (!box.fullWidth) {\n            box.width = newMaxChartAreaWidth;\n          }\n        });\n        maxChartAreaHeight = newMaxChartAreaHeight;\n        maxChartAreaWidth = newMaxChartAreaWidth;\n      } // Step 7 - Position the boxes\n\n\n      var left = leftPadding + leftPaddingAddition;\n      var top = topPadding + topPaddingAddition;\n\n      function placeBox(box) {\n        if (box.isHorizontal()) {\n          box.left = box.fullWidth ? leftPadding : outerBoxSizes.left;\n          box.right = box.fullWidth ? width - rightPadding : outerBoxSizes.left + maxChartAreaWidth;\n          box.top = top;\n          box.bottom = top + box.height; // Move to next point\n\n          top = box.bottom;\n        } else {\n          box.left = left;\n          box.right = left + box.width;\n          box.top = outerBoxSizes.top;\n          box.bottom = outerBoxSizes.top + maxChartAreaHeight; // Move to next point\n\n          left = box.right;\n        }\n      }\n\n      helpers$1.each(leftBoxes.concat(topBoxes), placeBox); // Account for chart width and height\n\n      left += maxChartAreaWidth;\n      top += maxChartAreaHeight;\n      helpers$1.each(rightBoxes, placeBox);\n      helpers$1.each(bottomBoxes, placeBox); // Step 8\n\n      chart.chartArea = {\n        left: outerBoxSizes.left,\n        top: outerBoxSizes.top,\n        right: outerBoxSizes.left + maxChartAreaWidth,\n        bottom: outerBoxSizes.top + maxChartAreaHeight\n      }; // Step 9\n\n      helpers$1.each(chartAreaBoxes, function (box) {\n        box.left = chart.chartArea.left;\n        box.top = chart.chartArea.top;\n        box.right = chart.chartArea.right;\n        box.bottom = chart.chartArea.bottom;\n        box.update(maxChartAreaWidth, maxChartAreaHeight);\n      });\n    }\n  };\n  /**\n   * Platform fallback implementation (minimal).\n   * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n   */\n\n  var platform_basic = {\n    acquireContext: function acquireContext(item) {\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      }\n\n      return item && item.getContext('2d') || null;\n    }\n  };\n  var platform_dom = \"/*\\n * DOM element rendering detection\\n * https://davidwalsh.name/detect-node-insertion\\n */\\n@keyframes chartjs-render-animation {\\n\\tfrom { opacity: 0.99; }\\n\\tto { opacity: 1; }\\n}\\n\\n.chartjs-render-monitor {\\n\\tanimation: chartjs-render-animation 0.001s;\\n}\\n\\n/*\\n * DOM element resizing detection\\n * https://github.com/marcj/css-element-queries\\n */\\n.chartjs-size-monitor,\\n.chartjs-size-monitor-expand,\\n.chartjs-size-monitor-shrink {\\n\\tposition: absolute;\\n\\tdirection: ltr;\\n\\tleft: 0;\\n\\ttop: 0;\\n\\tright: 0;\\n\\tbottom: 0;\\n\\toverflow: hidden;\\n\\tpointer-events: none;\\n\\tvisibility: hidden;\\n\\tz-index: -1;\\n}\\n\\n.chartjs-size-monitor-expand > div {\\n\\tposition: absolute;\\n\\twidth: 1000000px;\\n\\theight: 1000000px;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\\n.chartjs-size-monitor-shrink > div {\\n\\tposition: absolute;\\n\\twidth: 200%;\\n\\theight: 200%;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\";\n  var platform_dom$1 =\n  /*#__PURE__*/\n  Object.freeze({\n    default: platform_dom\n  });\n\n  function getCjsExportFromNamespace(n) {\n    return n && n.default || n;\n  }\n\n  var stylesheet = getCjsExportFromNamespace(platform_dom$1);\n  var EXPANDO_KEY = '$chartjs';\n  var CSS_PREFIX = 'chartjs-';\n  var CSS_SIZE_MONITOR = CSS_PREFIX + 'size-monitor';\n  var CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\n  var CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\n  var ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n  /**\n   * DOM event types -> Chart.js event types.\n   * Note: only events with different types are mapped.\n   * @see https://developer.mozilla.org/en-US/docs/Web/Events\n   */\n\n  var EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n  };\n  /**\n   * The \"used\" size is the final value of a dimension property after all calculations have\n   * been performed. This method uses the computed style of `element` but returns undefined\n   * if the computed style is not expressed in pixels. That can happen in some cases where\n   * `element` has a size relative to its parent and this last one is not yet displayed,\n   * for example because of `display: none` on a parent node.\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n   * @returns {number} Size in pixels or undefined if unknown.\n   */\n\n  function readUsedSize(element, property) {\n    var value = helpers$1.getStyle(element, property);\n    var matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? Number(matches[1]) : undefined;\n  }\n  /**\n   * Initializes the canvas style and render size without modifying the canvas display size,\n   * since responsiveness is handled by the controller.resize() method. The config is used\n   * to determine the aspect ratio to apply in case no explicit height has been specified.\n   */\n\n\n  function initCanvas(canvas, config) {\n    var style = canvas.style; // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n    // returns null or '' if no explicit value has been set to the canvas attribute.\n\n    var renderHeight = canvas.getAttribute('height');\n    var renderWidth = canvas.getAttribute('width'); // Chart.js modifies some canvas values that we want to restore on destroy\n\n    canvas[EXPANDO_KEY] = {\n      initial: {\n        height: renderHeight,\n        width: renderWidth,\n        style: {\n          display: style.display,\n          height: style.height,\n          width: style.width\n        }\n      }\n    }; // Force canvas to display as block to avoid extra space caused by inline\n    // elements, which would interfere with the responsive resize process.\n    // https://github.com/chartjs/Chart.js/issues/2538\n\n    style.display = style.display || 'block';\n\n    if (renderWidth === null || renderWidth === '') {\n      var displayWidth = readUsedSize(canvas, 'width');\n\n      if (displayWidth !== undefined) {\n        canvas.width = displayWidth;\n      }\n    }\n\n    if (renderHeight === null || renderHeight === '') {\n      if (canvas.style.height === '') {\n        // If no explicit render height and style height, let's apply the aspect ratio,\n        // which one can be specified by the user but also by charts as default option\n        // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n        canvas.height = canvas.width / (config.options.aspectRatio || 2);\n      } else {\n        var displayHeight = readUsedSize(canvas, 'height');\n\n        if (displayWidth !== undefined) {\n          canvas.height = displayHeight;\n        }\n      }\n    }\n\n    return canvas;\n  }\n  /**\n   * Detects support for options object argument in addEventListener.\n   * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n   * @private\n   */\n\n\n  var supportsEventListenerOptions = function () {\n    var supports = false;\n\n    try {\n      var options = Object.defineProperty({}, 'passive', {\n        // eslint-disable-next-line getter-return\n        get: function get() {\n          supports = true;\n        }\n      });\n      window.addEventListener('e', null, options);\n    } catch (e) {// continue regardless of error\n    }\n\n    return supports;\n  }(); // Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n  // https://github.com/chartjs/Chart.js/issues/4287\n\n\n  var eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n  } : false;\n\n  function addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n\n  function removeListener(node, type, listener) {\n    node.removeEventListener(type, listener, eventListenerOptions);\n  }\n\n  function createEvent(type, chart, x, y, nativeEvent) {\n    return {\n      type: type,\n      chart: chart,\n      native: nativeEvent || null,\n      x: x !== undefined ? x : null,\n      y: y !== undefined ? y : null\n    };\n  }\n\n  function fromNativeEvent(event, chart) {\n    var type = EVENT_TYPES[event.type] || event.type;\n    var pos = helpers$1.getRelativePosition(event, chart);\n    return createEvent(type, chart, pos.x, pos.y, event);\n  }\n\n  function throttled(fn, thisArg) {\n    var ticking = false;\n    var args = [];\n    return function () {\n      args = Array.prototype.slice.call(arguments);\n      thisArg = thisArg || this;\n\n      if (!ticking) {\n        ticking = true;\n        helpers$1.requestAnimFrame.call(window, function () {\n          ticking = false;\n          fn.apply(thisArg, args);\n        });\n      }\n    };\n  }\n\n  function createDiv(cls) {\n    var el = document.createElement('div');\n    el.className = cls || '';\n    return el;\n  } // Implementation based on https://github.com/marcj/css-element-queries\n\n\n  function createResizer(handler) {\n    var maxSize = 1000000; // NOTE(SB) Don't use innerHTML because it could be considered unsafe.\n    // https://github.com/chartjs/Chart.js/issues/5902\n\n    var resizer = createDiv(CSS_SIZE_MONITOR);\n    var expand = createDiv(CSS_SIZE_MONITOR + '-expand');\n    var shrink = createDiv(CSS_SIZE_MONITOR + '-shrink');\n    expand.appendChild(createDiv());\n    shrink.appendChild(createDiv());\n    resizer.appendChild(expand);\n    resizer.appendChild(shrink);\n\n    resizer._reset = function () {\n      expand.scrollLeft = maxSize;\n      expand.scrollTop = maxSize;\n      shrink.scrollLeft = maxSize;\n      shrink.scrollTop = maxSize;\n    };\n\n    var onScroll = function onScroll() {\n      resizer._reset();\n\n      handler();\n    };\n\n    addListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n    addListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n    return resizer;\n  } // https://davidwalsh.name/detect-node-insertion\n\n\n  function watchForRender(node, handler) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n    var proxy = expando.renderProxy = function (e) {\n      if (e.animationName === CSS_RENDER_ANIMATION) {\n        handler();\n      }\n    };\n\n    helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n      addListener(node, type, proxy);\n    }); // #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n    // is removed then added back immediately (same animation frame?). Accessing the\n    // `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n    // https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n    // https://github.com/chartjs/Chart.js/issues/4737\n\n    expando.reflow = !!node.offsetParent;\n    node.classList.add(CSS_RENDER_MONITOR);\n  }\n\n  function unwatchForRender(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var proxy = expando.renderProxy;\n\n    if (proxy) {\n      helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n        removeListener(node, type, proxy);\n      });\n      delete expando.renderProxy;\n    }\n\n    node.classList.remove(CSS_RENDER_MONITOR);\n  }\n\n  function addResizeListener(node, listener, chart) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {}); // Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\n    var resizer = expando.resizer = createResizer(throttled(function () {\n      if (expando.resizer) {\n        var container = chart.options.maintainAspectRatio && node.parentNode;\n        var w = container ? container.clientWidth : 0;\n        listener(createEvent('resize', chart));\n\n        if (container && container.clientWidth < w && chart.canvas) {\n          // If the container size shrank during chart resize, let's assume\n          // scrollbar appeared. So we resize again with the scrollbar visible -\n          // effectively making chart smaller and the scrollbar hidden again.\n          // Because we are inside `throttled`, and currently `ticking`, scroll\n          // events are ignored during this whole 2 resize process.\n          // If we assumed wrong and something else happened, we are resizing\n          // twice in a frame (potential performance issue)\n          listener(createEvent('resize', chart));\n        }\n      }\n    })); // The resizer needs to be attached to the node parent, so we first need to be\n    // sure that `node` is attached to the DOM before injecting the resizer element.\n\n    watchForRender(node, function () {\n      if (expando.resizer) {\n        var container = node.parentNode;\n\n        if (container && container !== resizer.parentNode) {\n          container.insertBefore(resizer, container.firstChild);\n        } // The container size might have changed, let's reset the resizer state.\n\n\n        resizer._reset();\n      }\n    });\n  }\n\n  function removeResizeListener(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var resizer = expando.resizer;\n    delete expando.resizer;\n    unwatchForRender(node);\n\n    if (resizer && resizer.parentNode) {\n      resizer.parentNode.removeChild(resizer);\n    }\n  }\n\n  function injectCSS(platform, css) {\n    // https://stackoverflow.com/q/3922139\n    var style = platform._style || document.createElement('style');\n\n    if (!platform._style) {\n      platform._style = style;\n      css = '/* Chart.js */\\n' + css;\n      style.setAttribute('type', 'text/css');\n      document.getElementsByTagName('head')[0].appendChild(style);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n\n  var platform_dom$2 = {\n    /**\n     * When `true`, prevents the automatic injection of the stylesheet required to\n     * correctly detect when the chart is added to the DOM and then resized. This\n     * switch has been added to allow external stylesheet (`dist/Chart(.min)?.js`)\n     * to be manually imported to make this library compatible with any CSP.\n     * See https://github.com/chartjs/Chart.js/issues/5208\n     */\n    disableCSSInjection: false,\n\n    /**\n     * This property holds whether this platform is enabled for the current environment.\n     * Currently used by platform.js to select the proper implementation.\n     * @private\n     */\n    _enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n    /**\n     * @private\n     */\n    _ensureLoaded: function _ensureLoaded() {\n      if (this._loaded) {\n        return;\n      }\n\n      this._loaded = true; // https://github.com/chartjs/Chart.js/issues/5208\n\n      if (!this.disableCSSInjection) {\n        injectCSS(this, stylesheet);\n      }\n    },\n    acquireContext: function acquireContext(item, config) {\n      if (typeof item === 'string') {\n        item = document.getElementById(item);\n      } else if (item.length) {\n        // Support for array based queries (such as jQuery)\n        item = item[0];\n      }\n\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      } // To prevent canvas fingerprinting, some add-ons undefine the getContext\n      // method, for example: https://github.com/kkapsner/CanvasBlocker\n      // https://github.com/chartjs/Chart.js/issues/2807\n\n\n      var context = item && item.getContext && item.getContext('2d'); // Load platform resources on first chart creation, to make possible to change\n      // platform options after importing the library (e.g. `disableCSSInjection`).\n\n      this._ensureLoaded(); // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n      // inside an iframe or when running in a protected environment. We could guess the\n      // types from their toString() value but let's keep things flexible and assume it's\n      // a sufficient condition if the item has a context2D which has item as `canvas`.\n      // https://github.com/chartjs/Chart.js/issues/3887\n      // https://github.com/chartjs/Chart.js/issues/4102\n      // https://github.com/chartjs/Chart.js/issues/4152\n\n\n      if (context && context.canvas === item) {\n        initCanvas(item, config);\n        return context;\n      }\n\n      return null;\n    },\n    releaseContext: function releaseContext(context) {\n      var canvas = context.canvas;\n\n      if (!canvas[EXPANDO_KEY]) {\n        return;\n      }\n\n      var initial = canvas[EXPANDO_KEY].initial;\n      ['height', 'width'].forEach(function (prop) {\n        var value = initial[prop];\n\n        if (helpers$1.isNullOrUndef(value)) {\n          canvas.removeAttribute(prop);\n        } else {\n          canvas.setAttribute(prop, value);\n        }\n      });\n      helpers$1.each(initial.style || {}, function (value, key) {\n        canvas.style[key] = value;\n      }); // The canvas render size might have been changed (and thus the state stack discarded),\n      // we can't use save() and restore() to restore the initial state. So make sure that at\n      // least the canvas context is reset to the default state by setting the canvas width.\n      // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n      // eslint-disable-next-line no-self-assign\n\n      canvas.width = canvas.width;\n      delete canvas[EXPANDO_KEY];\n    },\n    addEventListener: function addEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        addResizeListener(canvas, listener, chart);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n      var proxies = expando.proxies || (expando.proxies = {});\n\n      var proxy = proxies[chart.id + '_' + type] = function (event) {\n        listener(fromNativeEvent(event, chart));\n      };\n\n      addListener(canvas, type, proxy);\n    },\n    removeEventListener: function removeEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        removeResizeListener(canvas);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || {};\n      var proxies = expando.proxies || {};\n      var proxy = proxies[chart.id + '_' + type];\n\n      if (!proxy) {\n        return;\n      }\n\n      removeListener(canvas, type, proxy);\n    }\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use EventTarget.addEventListener instead.\n   * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n   * @function Chart.helpers.addEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.addEvent = addListener;\n  /**\n   * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n   * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n   * @function Chart.helpers.removeEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.removeEvent = removeListener; // @TODO Make possible to select another platform at build time.\n\n  var implementation = platform_dom$2._enabled ? platform_dom$2 : platform_basic;\n  /**\n   * @namespace Chart.platform\n   * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n   * @since 2.4.0\n   */\n\n  var platform = helpers$1.extend({\n    /**\n     * @since 2.7.0\n     */\n    initialize: function initialize() {},\n\n    /**\n     * Called at chart construction time, returns a context2d instance implementing\n     * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n     * @param {*} item - The native item from which to acquire context (platform specific)\n     * @param {object} options - The chart options\n     * @returns {CanvasRenderingContext2D} context2d instance\n     */\n    acquireContext: function acquireContext() {},\n\n    /**\n     * Called at chart destruction time, releases any resources associated to the context\n     * previously returned by the acquireContext() method.\n     * @param {CanvasRenderingContext2D} context - The context2d instance\n     * @returns {boolean} true if the method succeeded, else false\n     */\n    releaseContext: function releaseContext() {},\n\n    /**\n     * Registers the specified listener on the given chart.\n     * @param {Chart} chart - Chart from which to listen for event\n     * @param {string} type - The ({@link IEvent}) type to listen for\n     * @param {function} listener - Receives a notification (an object that implements\n     * the {@link IEvent} interface) when an event of the specified type occurs.\n     */\n    addEventListener: function addEventListener() {},\n\n    /**\n     * Removes the specified listener previously registered with addEventListener.\n     * @param {Chart} chart - Chart from which to remove the listener\n     * @param {string} type - The ({@link IEvent}) type to remove\n     * @param {function} listener - The listener function to remove from the event target.\n     */\n    removeEventListener: function removeEventListener() {}\n  }, implementation);\n\n  core_defaults._set('global', {\n    plugins: {}\n  });\n  /**\n   * The plugin service singleton\n   * @namespace Chart.plugins\n   * @since 2.1.0\n   */\n\n\n  var core_plugins = {\n    /**\n     * Globally registered plugins.\n     * @private\n     */\n    _plugins: [],\n\n    /**\n     * This identifier is used to invalidate the descriptors cache attached to each chart\n     * when a global plugin is registered or unregistered. In this case, the cache ID is\n     * incremented and descriptors are regenerated during following API calls.\n     * @private\n     */\n    _cacheId: 0,\n\n    /**\n     * Registers the given plugin(s) if not already registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    register: function register(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        if (p.indexOf(plugin) === -1) {\n          p.push(plugin);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Unregisters the given plugin(s) only if registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    unregister: function unregister(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        var idx = p.indexOf(plugin);\n\n        if (idx !== -1) {\n          p.splice(idx, 1);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Remove all registered plugins.\n     * @since 2.1.5\n     */\n    clear: function clear() {\n      this._plugins = [];\n      this._cacheId++;\n    },\n\n    /**\n     * Returns the number of registered plugins?\n     * @returns {number}\n     * @since 2.1.5\n     */\n    count: function count() {\n      return this._plugins.length;\n    },\n\n    /**\n     * Returns all registered plugin instances.\n     * @returns {IPlugin[]} array of plugin objects.\n     * @since 2.1.5\n     */\n    getAll: function getAll() {\n      return this._plugins;\n    },\n\n    /**\n     * Calls enabled plugins for `chart` on the specified hook and with the given args.\n     * This method immediately returns as soon as a plugin explicitly returns false. The\n     * returned value can be used, for instance, to interrupt the current action.\n     * @param {Chart} chart - The chart instance for which plugins should be called.\n     * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n     * @param {Array} [args] - Extra arguments to apply to the hook call.\n     * @returns {boolean} false if any of the plugins return false, else returns true.\n     */\n    notify: function notify(chart, hook, args) {\n      var descriptors = this.descriptors(chart);\n      var ilen = descriptors.length;\n      var i, descriptor, plugin, params, method;\n\n      for (i = 0; i < ilen; ++i) {\n        descriptor = descriptors[i];\n        plugin = descriptor.plugin;\n        method = plugin[hook];\n\n        if (typeof method === 'function') {\n          params = [chart].concat(args || []);\n          params.push(descriptor.options);\n\n          if (method.apply(plugin, params) === false) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns descriptors of enabled plugins for the given chart.\n     * @returns {object[]} [{ plugin, options }]\n     * @private\n     */\n    descriptors: function descriptors(chart) {\n      var cache = chart.$plugins || (chart.$plugins = {});\n\n      if (cache.id === this._cacheId) {\n        return cache.descriptors;\n      }\n\n      var plugins = [];\n      var descriptors = [];\n      var config = chart && chart.config || {};\n      var options = config.options && config.options.plugins || {};\n\n      this._plugins.concat(config.plugins || []).forEach(function (plugin) {\n        var idx = plugins.indexOf(plugin);\n\n        if (idx !== -1) {\n          return;\n        }\n\n        var id = plugin.id;\n        var opts = options[id];\n\n        if (opts === false) {\n          return;\n        }\n\n        if (opts === true) {\n          opts = helpers$1.clone(core_defaults.global.plugins[id]);\n        }\n\n        plugins.push(plugin);\n        descriptors.push({\n          plugin: plugin,\n          options: opts || {}\n        });\n      });\n\n      cache.descriptors = descriptors;\n      cache.id = this._cacheId;\n      return descriptors;\n    },\n\n    /**\n     * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n     * but in some cases, this reference can be changed by the user when updating options.\n     * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n     * @private\n     */\n    _invalidate: function _invalidate(chart) {\n      delete chart.$plugins;\n    }\n  };\n  var core_scaleService = {\n    // Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n    // use the new chart options to grab the correct scale\n    constructors: {},\n    // Use a registration function so that we can move to an ES6 map when we no longer need to support\n    // old browsers\n    // Scale config defaults\n    defaults: {},\n    registerScaleType: function registerScaleType(type, scaleConstructor, scaleDefaults) {\n      this.constructors[type] = scaleConstructor;\n      this.defaults[type] = helpers$1.clone(scaleDefaults);\n    },\n    getScaleConstructor: function getScaleConstructor(type) {\n      return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n    },\n    getScaleDefaults: function getScaleDefaults(type) {\n      // Return the scale defaults merged with the global settings so that we always use the latest ones\n      return this.defaults.hasOwnProperty(type) ? helpers$1.merge({}, [core_defaults.scale, this.defaults[type]]) : {};\n    },\n    updateScaleDefaults: function updateScaleDefaults(type, additions) {\n      var me = this;\n\n      if (me.defaults.hasOwnProperty(type)) {\n        me.defaults[type] = helpers$1.extend(me.defaults[type], additions);\n      }\n    },\n    addScalesToLayout: function addScalesToLayout(chart) {\n      // Adds each scale to the chart.boxes array to be sized accordingly\n      helpers$1.each(chart.scales, function (scale) {\n        // Set ILayoutItem parameters for backwards compatibility\n        scale.fullWidth = scale.options.fullWidth;\n        scale.position = scale.options.position;\n        scale.weight = scale.options.weight;\n        core_layouts.addBox(chart, scale);\n      });\n    }\n  };\n  var valueOrDefault$7 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    tooltips: {\n      enabled: true,\n      custom: null,\n      mode: 'nearest',\n      position: 'average',\n      intersect: true,\n      backgroundColor: 'rgba(0,0,0,0.8)',\n      titleFontStyle: 'bold',\n      titleSpacing: 2,\n      titleMarginBottom: 6,\n      titleFontColor: '#fff',\n      titleAlign: 'left',\n      bodySpacing: 2,\n      bodyFontColor: '#fff',\n      bodyAlign: 'left',\n      footerFontStyle: 'bold',\n      footerSpacing: 2,\n      footerMarginTop: 6,\n      footerFontColor: '#fff',\n      footerAlign: 'left',\n      yPadding: 6,\n      xPadding: 6,\n      caretPadding: 2,\n      caretSize: 5,\n      cornerRadius: 6,\n      multiKeyBackground: '#fff',\n      displayColors: true,\n      borderColor: 'rgba(0,0,0,0)',\n      borderWidth: 0,\n      callbacks: {\n        // Args are: (tooltipItems, data)\n        beforeTitle: helpers$1.noop,\n        title: function title(tooltipItems, data) {\n          var title = '';\n          var labels = data.labels;\n          var labelCount = labels ? labels.length : 0;\n\n          if (tooltipItems.length > 0) {\n            var item = tooltipItems[0];\n\n            if (item.label) {\n              title = item.label;\n            } else if (item.xLabel) {\n              title = item.xLabel;\n            } else if (labelCount > 0 && item.index < labelCount) {\n              title = labels[item.index];\n            }\n          }\n\n          return title;\n        },\n        afterTitle: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeBody: helpers$1.noop,\n        // Args are: (tooltipItem, data)\n        beforeLabel: helpers$1.noop,\n        label: function label(tooltipItem, data) {\n          var label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n          if (label) {\n            label += ': ';\n          }\n\n          if (!helpers$1.isNullOrUndef(tooltipItem.value)) {\n            label += tooltipItem.value;\n          } else {\n            label += tooltipItem.yLabel;\n          }\n\n          return label;\n        },\n        labelColor: function labelColor(tooltipItem, chart) {\n          var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n          var activeElement = meta.data[tooltipItem.index];\n          var view = activeElement._view;\n          return {\n            borderColor: view.borderColor,\n            backgroundColor: view.backgroundColor\n          };\n        },\n        labelTextColor: function labelTextColor() {\n          return this._options.bodyFontColor;\n        },\n        afterLabel: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        afterBody: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeFooter: helpers$1.noop,\n        footer: helpers$1.noop,\n        afterFooter: helpers$1.noop\n      }\n    }\n  });\n\n  var positioners = {\n    /**\n     * Average mode places the tooltip at the average position of the elements shown\n     * @function Chart.Tooltip.positioners.average\n     * @param elements {ChartElement[]} the elements being displayed in the tooltip\n     * @returns {object} tooltip position\n     */\n    average: function average(elements) {\n      if (!elements.length) {\n        return false;\n      }\n\n      var i, len;\n      var x = 0;\n      var y = 0;\n      var count = 0;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var pos = el.tooltipPosition();\n          x += pos.x;\n          y += pos.y;\n          ++count;\n        }\n      }\n\n      return {\n        x: x / count,\n        y: y / count\n      };\n    },\n\n    /**\n     * Gets the tooltip position nearest of the item nearest to the event position\n     * @function Chart.Tooltip.positioners.nearest\n     * @param elements {Chart.Element[]} the tooltip elements\n     * @param eventPosition {object} the position of the event in canvas coordinates\n     * @returns {object} the tooltip position\n     */\n    nearest: function nearest(elements, eventPosition) {\n      var x = eventPosition.x;\n      var y = eventPosition.y;\n      var minDistance = Number.POSITIVE_INFINITY;\n      var i, len, nearestElement;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var center = el.getCenterPoint();\n          var d = helpers$1.distanceBetweenPoints(eventPosition, center);\n\n          if (d < minDistance) {\n            minDistance = d;\n            nearestElement = el;\n          }\n        }\n      }\n\n      if (nearestElement) {\n        var tp = nearestElement.tooltipPosition();\n        x = tp.x;\n        y = tp.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }; // Helper to push or concat based on if the 2nd parameter is an array or not\n\n  function pushOrConcat(base, toPush) {\n    if (toPush) {\n      if (helpers$1.isArray(toPush)) {\n        // base = base.concat(toPush);\n        Array.prototype.push.apply(base, toPush);\n      } else {\n        base.push(toPush);\n      }\n    }\n\n    return base;\n  }\n  /**\n   * Returns array of strings split by newline\n   * @param {string} value - The value to split by newline.\n   * @returns {string[]} value if newline present - Returned from String split() method\n   * @function\n   */\n\n\n  function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n      return str.split('\\n');\n    }\n\n    return str;\n  }\n  /**\n   * Private helper to create a tooltip item model\n   * @param element - the chart element (point, arc, bar) to create the tooltip item for\n   * @return new tooltip item\n   */\n\n\n  function createTooltipItem(element) {\n    var xScale = element._xScale;\n    var yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\n    var index = element._index;\n    var datasetIndex = element._datasetIndex;\n\n    var controller = element._chart.getDatasetMeta(datasetIndex).controller;\n\n    var indexScale = controller._getIndexScale();\n\n    var valueScale = controller._getValueScale();\n\n    return {\n      xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n      yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n      label: indexScale ? '' + indexScale.getLabelForIndex(index, datasetIndex) : '',\n      value: valueScale ? '' + valueScale.getLabelForIndex(index, datasetIndex) : '',\n      index: index,\n      datasetIndex: datasetIndex,\n      x: element._model.x,\n      y: element._model.y\n    };\n  }\n  /**\n   * Helper to get the reset model for the tooltip\n   * @param tooltipOpts {object} the tooltip options\n   */\n\n\n  function getBaseModel(tooltipOpts) {\n    var globalDefaults = core_defaults.global;\n    return {\n      // Positioning\n      xPadding: tooltipOpts.xPadding,\n      yPadding: tooltipOpts.yPadding,\n      xAlign: tooltipOpts.xAlign,\n      yAlign: tooltipOpts.yAlign,\n      // Body\n      bodyFontColor: tooltipOpts.bodyFontColor,\n      _bodyFontFamily: valueOrDefault$7(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n      _bodyFontStyle: valueOrDefault$7(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n      _bodyAlign: tooltipOpts.bodyAlign,\n      bodyFontSize: valueOrDefault$7(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n      bodySpacing: tooltipOpts.bodySpacing,\n      // Title\n      titleFontColor: tooltipOpts.titleFontColor,\n      _titleFontFamily: valueOrDefault$7(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n      _titleFontStyle: valueOrDefault$7(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n      titleFontSize: valueOrDefault$7(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n      _titleAlign: tooltipOpts.titleAlign,\n      titleSpacing: tooltipOpts.titleSpacing,\n      titleMarginBottom: tooltipOpts.titleMarginBottom,\n      // Footer\n      footerFontColor: tooltipOpts.footerFontColor,\n      _footerFontFamily: valueOrDefault$7(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n      _footerFontStyle: valueOrDefault$7(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n      footerFontSize: valueOrDefault$7(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n      _footerAlign: tooltipOpts.footerAlign,\n      footerSpacing: tooltipOpts.footerSpacing,\n      footerMarginTop: tooltipOpts.footerMarginTop,\n      // Appearance\n      caretSize: tooltipOpts.caretSize,\n      cornerRadius: tooltipOpts.cornerRadius,\n      backgroundColor: tooltipOpts.backgroundColor,\n      opacity: 0,\n      legendColorBackground: tooltipOpts.multiKeyBackground,\n      displayColors: tooltipOpts.displayColors,\n      borderColor: tooltipOpts.borderColor,\n      borderWidth: tooltipOpts.borderWidth\n    };\n  }\n  /**\n   * Get the size of the tooltip\n   */\n\n\n  function getTooltipSize(tooltip, model) {\n    var ctx = tooltip._chart.ctx;\n    var height = model.yPadding * 2; // Tooltip Padding\n\n    var width = 0; // Count of all lines in the body\n\n    var body = model.body;\n    var combinedBodyLength = body.reduce(function (count, bodyItem) {\n      return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n    }, 0);\n    combinedBodyLength += model.beforeBody.length + model.afterBody.length;\n    var titleLineCount = model.title.length;\n    var footerLineCount = model.footer.length;\n    var titleFontSize = model.titleFontSize;\n    var bodyFontSize = model.bodyFontSize;\n    var footerFontSize = model.footerFontSize;\n    height += titleLineCount * titleFontSize; // Title Lines\n\n    height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\n    height += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\n    height += combinedBodyLength * bodyFontSize; // Body Lines\n\n    height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\n    height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\n    height += footerLineCount * footerFontSize; // Footer Lines\n\n    height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n    // Title width\n\n    var widthPadding = 0;\n\n    var maxLineWidth = function maxLineWidth(line) {\n      width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n\n    ctx.font = helpers$1.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n    helpers$1.each(model.title, maxLineWidth); // Body width\n\n    ctx.font = helpers$1.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n    helpers$1.each(model.beforeBody.concat(model.afterBody), maxLineWidth); // Body lines may include some extra width due to the color box\n\n    widthPadding = model.displayColors ? bodyFontSize + 2 : 0;\n    helpers$1.each(body, function (bodyItem) {\n      helpers$1.each(bodyItem.before, maxLineWidth);\n      helpers$1.each(bodyItem.lines, maxLineWidth);\n      helpers$1.each(bodyItem.after, maxLineWidth);\n    }); // Reset back to 0\n\n    widthPadding = 0; // Footer width\n\n    ctx.font = helpers$1.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n    helpers$1.each(model.footer, maxLineWidth); // Add padding\n\n    width += 2 * model.xPadding;\n    return {\n      width: width,\n      height: height\n    };\n  }\n  /**\n   * Helper to get the alignment of a tooltip given the size\n   */\n\n\n  function determineAlignment(tooltip, size) {\n    var model = tooltip._model;\n    var chart = tooltip._chart;\n    var chartArea = tooltip._chart.chartArea;\n    var xAlign = 'center';\n    var yAlign = 'center';\n\n    if (model.y < size.height) {\n      yAlign = 'top';\n    } else if (model.y > chart.height - size.height) {\n      yAlign = 'bottom';\n    }\n\n    var lf, rf; // functions to determine left, right alignment\n\n    var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\n    var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\n    var midX = (chartArea.left + chartArea.right) / 2;\n    var midY = (chartArea.top + chartArea.bottom) / 2;\n\n    if (yAlign === 'center') {\n      lf = function lf(x) {\n        return x <= midX;\n      };\n\n      rf = function rf(x) {\n        return x > midX;\n      };\n    } else {\n      lf = function lf(x) {\n        return x <= size.width / 2;\n      };\n\n      rf = function rf(x) {\n        return x >= chart.width - size.width / 2;\n      };\n    }\n\n    olf = function olf(x) {\n      return x + size.width + model.caretSize + model.caretPadding > chart.width;\n    };\n\n    orf = function orf(x) {\n      return x - size.width - model.caretSize - model.caretPadding < 0;\n    };\n\n    yf = function yf(y) {\n      return y <= midY ? 'top' : 'bottom';\n    };\n\n    if (lf(model.x)) {\n      xAlign = 'left'; // Is tooltip too wide and goes over the right side of the chart.?\n\n      if (olf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    } else if (rf(model.x)) {\n      xAlign = 'right'; // Is tooltip too wide and goes outside left edge of canvas?\n\n      if (orf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    }\n\n    var opts = tooltip._options;\n    return {\n      xAlign: opts.xAlign ? opts.xAlign : xAlign,\n      yAlign: opts.yAlign ? opts.yAlign : yAlign\n    };\n  }\n  /**\n   * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n   */\n\n\n  function getBackgroundPoint(vm, size, alignment, chart) {\n    // Background Position\n    var x = vm.x;\n    var y = vm.y;\n    var caretSize = vm.caretSize;\n    var caretPadding = vm.caretPadding;\n    var cornerRadius = vm.cornerRadius;\n    var xAlign = alignment.xAlign;\n    var yAlign = alignment.yAlign;\n    var paddingAndSize = caretSize + caretPadding;\n    var radiusAndPadding = cornerRadius + caretPadding;\n\n    if (xAlign === 'right') {\n      x -= size.width;\n    } else if (xAlign === 'center') {\n      x -= size.width / 2;\n\n      if (x + size.width > chart.width) {\n        x = chart.width - size.width;\n      }\n\n      if (x < 0) {\n        x = 0;\n      }\n    }\n\n    if (yAlign === 'top') {\n      y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n      y -= size.height + paddingAndSize;\n    } else {\n      y -= size.height / 2;\n    }\n\n    if (yAlign === 'center') {\n      if (xAlign === 'left') {\n        x += paddingAndSize;\n      } else if (xAlign === 'right') {\n        x -= paddingAndSize;\n      }\n    } else if (xAlign === 'left') {\n      x -= radiusAndPadding;\n    } else if (xAlign === 'right') {\n      x += radiusAndPadding;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  }\n\n  function getAlignedX(vm, align) {\n    return align === 'center' ? vm.x + vm.width / 2 : align === 'right' ? vm.x + vm.width - vm.xPadding : vm.x + vm.xPadding;\n  }\n  /**\n   * Helper to build before and after body lines\n   */\n\n\n  function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n  }\n\n  var exports$3 = core_element.extend({\n    initialize: function initialize() {\n      this._model = getBaseModel(this._options);\n      this._lastActive = [];\n    },\n    // Get the title\n    // Args are: (tooltipItem, data)\n    getTitle: function getTitle() {\n      var me = this;\n      var opts = me._options;\n      var callbacks = opts.callbacks;\n      var beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n      var title = callbacks.title.apply(me, arguments);\n      var afterTitle = callbacks.afterTitle.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n      lines = pushOrConcat(lines, splitNewlines(title));\n      lines = pushOrConcat(lines, splitNewlines(afterTitle));\n      return lines;\n    },\n    // Args are: (tooltipItem, data)\n    getBeforeBody: function getBeforeBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));\n    },\n    // Args are: (tooltipItem, data)\n    getBody: function getBody(tooltipItems, data) {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var bodyItems = [];\n      helpers$1.each(tooltipItems, function (tooltipItem) {\n        var bodyItem = {\n          before: [],\n          lines: [],\n          after: []\n        };\n        pushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));\n        pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n        pushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));\n        bodyItems.push(bodyItem);\n      });\n      return bodyItems;\n    },\n    // Args are: (tooltipItem, data)\n    getAfterBody: function getAfterBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));\n    },\n    // Get the footer and beforeFooter and afterFooter lines\n    // Args are: (tooltipItem, data)\n    getFooter: function getFooter() {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n      var footer = callbacks.footer.apply(me, arguments);\n      var afterFooter = callbacks.afterFooter.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n      lines = pushOrConcat(lines, splitNewlines(footer));\n      lines = pushOrConcat(lines, splitNewlines(afterFooter));\n      return lines;\n    },\n    update: function update(changed) {\n      var me = this;\n      var opts = me._options; // Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n      // that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n      // which breaks any animations.\n\n      var existingModel = me._model;\n      var model = me._model = getBaseModel(opts);\n      var active = me._active;\n      var data = me._data; // In the case where active.length === 0 we need to keep these at existing values for good animations\n\n      var alignment = {\n        xAlign: existingModel.xAlign,\n        yAlign: existingModel.yAlign\n      };\n      var backgroundPoint = {\n        x: existingModel.x,\n        y: existingModel.y\n      };\n      var tooltipSize = {\n        width: existingModel.width,\n        height: existingModel.height\n      };\n      var tooltipPosition = {\n        x: existingModel.caretX,\n        y: existingModel.caretY\n      };\n      var i, len;\n\n      if (active.length) {\n        model.opacity = 1;\n        var labelColors = [];\n        var labelTextColors = [];\n        tooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);\n        var tooltipItems = [];\n\n        for (i = 0, len = active.length; i < len; ++i) {\n          tooltipItems.push(createTooltipItem(active[i]));\n        } // If the user provided a filter function, use it to modify the tooltip items\n\n\n        if (opts.filter) {\n          tooltipItems = tooltipItems.filter(function (a) {\n            return opts.filter(a, data);\n          });\n        } // If the user provided a sorting function, use it to modify the tooltip items\n\n\n        if (opts.itemSort) {\n          tooltipItems = tooltipItems.sort(function (a, b) {\n            return opts.itemSort(a, b, data);\n          });\n        } // Determine colors for boxes\n\n\n        helpers$1.each(tooltipItems, function (tooltipItem) {\n          labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n          labelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n        }); // Build the Text Lines\n\n        model.title = me.getTitle(tooltipItems, data);\n        model.beforeBody = me.getBeforeBody(tooltipItems, data);\n        model.body = me.getBody(tooltipItems, data);\n        model.afterBody = me.getAfterBody(tooltipItems, data);\n        model.footer = me.getFooter(tooltipItems, data); // Initial positioning and colors\n\n        model.x = tooltipPosition.x;\n        model.y = tooltipPosition.y;\n        model.caretPadding = opts.caretPadding;\n        model.labelColors = labelColors;\n        model.labelTextColors = labelTextColors; // data points\n\n        model.dataPoints = tooltipItems; // We need to determine alignment of the tooltip\n\n        tooltipSize = getTooltipSize(this, model);\n        alignment = determineAlignment(this, tooltipSize); // Final Size and Position\n\n        backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n      } else {\n        model.opacity = 0;\n      }\n\n      model.xAlign = alignment.xAlign;\n      model.yAlign = alignment.yAlign;\n      model.x = backgroundPoint.x;\n      model.y = backgroundPoint.y;\n      model.width = tooltipSize.width;\n      model.height = tooltipSize.height; // Point where the caret on the tooltip points to\n\n      model.caretX = tooltipPosition.x;\n      model.caretY = tooltipPosition.y;\n      me._model = model;\n\n      if (changed && opts.custom) {\n        opts.custom.call(me, model);\n      }\n\n      return me;\n    },\n    drawCaret: function drawCaret(tooltipPoint, size) {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n      ctx.lineTo(caretPosition.x1, caretPosition.y1);\n      ctx.lineTo(caretPosition.x2, caretPosition.y2);\n      ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    },\n    getCaretPosition: function getCaretPosition(tooltipPoint, size, vm) {\n      var x1, x2, x3, y1, y2, y3;\n      var caretSize = vm.caretSize;\n      var cornerRadius = vm.cornerRadius;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var ptX = tooltipPoint.x;\n      var ptY = tooltipPoint.y;\n      var width = size.width;\n      var height = size.height;\n\n      if (yAlign === 'center') {\n        y2 = ptY + height / 2;\n\n        if (xAlign === 'left') {\n          x1 = ptX;\n          x2 = x1 - caretSize;\n          x3 = x1;\n          y1 = y2 + caretSize;\n          y3 = y2 - caretSize;\n        } else {\n          x1 = ptX + width;\n          x2 = x1 + caretSize;\n          x3 = x1;\n          y1 = y2 - caretSize;\n          y3 = y2 + caretSize;\n        }\n      } else {\n        if (xAlign === 'left') {\n          x2 = ptX + cornerRadius + caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else if (xAlign === 'right') {\n          x2 = ptX + width - cornerRadius - caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else {\n          x2 = vm.caretX;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        }\n\n        if (yAlign === 'top') {\n          y1 = ptY;\n          y2 = y1 - caretSize;\n          y3 = y1;\n        } else {\n          y1 = ptY + height;\n          y2 = y1 + caretSize;\n          y3 = y1; // invert drawing order\n\n          var tmp = x3;\n          x3 = x1;\n          x1 = tmp;\n        }\n      }\n\n      return {\n        x1: x1,\n        x2: x2,\n        x3: x3,\n        y1: y1,\n        y2: y2,\n        y3: y3\n      };\n    },\n    drawTitle: function drawTitle(pt, vm, ctx) {\n      var title = vm.title;\n\n      if (title.length) {\n        pt.x = getAlignedX(vm, vm._titleAlign);\n        ctx.textAlign = vm._titleAlign;\n        ctx.textBaseline = 'top';\n        var titleFontSize = vm.titleFontSize;\n        var titleSpacing = vm.titleSpacing;\n        ctx.fillStyle = vm.titleFontColor;\n        ctx.font = helpers$1.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n        var i, len;\n\n        for (i = 0, len = title.length; i < len; ++i) {\n          ctx.fillText(title[i], pt.x, pt.y);\n          pt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n          if (i + 1 === title.length) {\n            pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n          }\n        }\n      }\n    },\n    drawBody: function drawBody(pt, vm, ctx) {\n      var bodyFontSize = vm.bodyFontSize;\n      var bodySpacing = vm.bodySpacing;\n      var bodyAlign = vm._bodyAlign;\n      var body = vm.body;\n      var drawColorBoxes = vm.displayColors;\n      var labelColors = vm.labelColors;\n      var xLinePadding = 0;\n      var colorX = drawColorBoxes ? getAlignedX(vm, 'left') : 0;\n      var textColor;\n      ctx.textAlign = bodyAlign;\n      ctx.textBaseline = 'top';\n      ctx.font = helpers$1.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n      pt.x = getAlignedX(vm, bodyAlign); // Before Body\n\n      var fillLineOfText = function fillLineOfText(line) {\n        ctx.fillText(line, pt.x + xLinePadding, pt.y);\n        pt.y += bodyFontSize + bodySpacing;\n      }; // Before body lines\n\n\n      ctx.fillStyle = vm.bodyFontColor;\n      helpers$1.each(vm.beforeBody, fillLineOfText);\n      xLinePadding = drawColorBoxes && bodyAlign !== 'right' ? bodyAlign === 'center' ? bodyFontSize / 2 + 1 : bodyFontSize + 2 : 0; // Draw body lines now\n\n      helpers$1.each(body, function (bodyItem, i) {\n        textColor = vm.labelTextColors[i];\n        ctx.fillStyle = textColor;\n        helpers$1.each(bodyItem.before, fillLineOfText);\n        helpers$1.each(bodyItem.lines, function (line) {\n          // Draw Legend-like boxes if needed\n          if (drawColorBoxes) {\n            // Fill a white rect so that colours merge nicely if the opacity is < 1\n            ctx.fillStyle = vm.legendColorBackground;\n            ctx.fillRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Border\n\n            ctx.lineWidth = 1;\n            ctx.strokeStyle = labelColors[i].borderColor;\n            ctx.strokeRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Inner square\n\n            ctx.fillStyle = labelColors[i].backgroundColor;\n            ctx.fillRect(colorX + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n            ctx.fillStyle = textColor;\n          }\n\n          fillLineOfText(line);\n        });\n        helpers$1.each(bodyItem.after, fillLineOfText);\n      }); // Reset back to 0 for after body\n\n      xLinePadding = 0; // After body lines\n\n      helpers$1.each(vm.afterBody, fillLineOfText);\n      pt.y -= bodySpacing; // Remove last body spacing\n    },\n    drawFooter: function drawFooter(pt, vm, ctx) {\n      var footer = vm.footer;\n\n      if (footer.length) {\n        pt.x = getAlignedX(vm, vm._footerAlign);\n        pt.y += vm.footerMarginTop;\n        ctx.textAlign = vm._footerAlign;\n        ctx.textBaseline = 'top';\n        ctx.fillStyle = vm.footerFontColor;\n        ctx.font = helpers$1.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n        helpers$1.each(footer, function (line) {\n          ctx.fillText(line, pt.x, pt.y);\n          pt.y += vm.footerFontSize + vm.footerSpacing;\n        });\n      }\n    },\n    drawBackground: function drawBackground(pt, vm, ctx, tooltipSize) {\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.strokeStyle = vm.borderColor;\n      ctx.lineWidth = vm.borderWidth;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var x = pt.x;\n      var y = pt.y;\n      var width = tooltipSize.width;\n      var height = tooltipSize.height;\n      var radius = vm.cornerRadius;\n      ctx.beginPath();\n      ctx.moveTo(x + radius, y);\n\n      if (yAlign === 'top') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\n      if (yAlign === 'center' && xAlign === 'right') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\n      if (yAlign === 'bottom') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\n      if (yAlign === 'center' && xAlign === 'left') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n      ctx.closePath();\n      ctx.fill();\n\n      if (vm.borderWidth > 0) {\n        ctx.stroke();\n      }\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n\n      if (vm.opacity === 0) {\n        return;\n      }\n\n      var tooltipSize = {\n        width: vm.width,\n        height: vm.height\n      };\n      var pt = {\n        x: vm.x,\n        y: vm.y\n      }; // IE11/Edge does not like very small opacities, so snap to 0\n\n      var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity; // Truthy/falsey value for empty tooltip\n\n      var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n      if (this._options.enabled && hasTooltipContent) {\n        ctx.save();\n        ctx.globalAlpha = opacity; // Draw Background\n\n        this.drawBackground(pt, vm, ctx, tooltipSize); // Draw Title, Body, and Footer\n\n        pt.y += vm.yPadding; // Titles\n\n        this.drawTitle(pt, vm, ctx); // Body\n\n        this.drawBody(pt, vm, ctx); // Footer\n\n        this.drawFooter(pt, vm, ctx);\n        ctx.restore();\n      }\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     * @returns {boolean} true if the tooltip changed\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me._options;\n      var changed = false;\n      me._lastActive = me._lastActive || []; // Find Active Elements for tooltips\n\n      if (e.type === 'mouseout') {\n        me._active = [];\n      } else {\n        me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n      } // Remember Last Actives\n\n\n      changed = !helpers$1.arrayEquals(me._active, me._lastActive); // Only handle target event on tooltip change\n\n      if (changed) {\n        me._lastActive = me._active;\n\n        if (options.enabled || options.custom) {\n          me._eventPosition = {\n            x: e.x,\n            y: e.y\n          };\n          me.update(true);\n          me.pivot();\n        }\n      }\n\n      return changed;\n    }\n  });\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n\n  var positioners_1 = positioners;\n  var core_tooltip = exports$3;\n  core_tooltip.positioners = positioners_1;\n  var valueOrDefault$8 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    elements: {},\n    events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n    hover: {\n      onHover: null,\n      mode: 'nearest',\n      intersect: true,\n      animationDuration: 400\n    },\n    onClick: null,\n    maintainAspectRatio: true,\n    responsive: true,\n    responsiveAnimationDuration: 0\n  });\n  /**\n   * Recursively merge the given config objects representing the `scales` option\n   * by incorporating scale defaults in `xAxes` and `yAxes` array items, then\n   * returns a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeScaleConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        if (key === 'xAxes' || key === 'yAxes') {\n          var slen = source[key].length;\n          var i, type, scale;\n\n          if (!target[key]) {\n            target[key] = [];\n          }\n\n          for (i = 0; i < slen; ++i) {\n            scale = source[key][i];\n            type = valueOrDefault$8(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n            if (i >= target[key].length) {\n              target[key].push({});\n            }\n\n            if (!target[key][i].type || scale.type && scale.type !== target[key][i].type) {\n              // new/untyped scale or type changed: let's apply the new defaults\n              // then merge source scale to correctly overwrite the defaults.\n              helpers$1.merge(target[key][i], [core_scaleService.getScaleDefaults(type), scale]);\n            } else {\n              // scales type are the same\n              helpers$1.merge(target[key][i], scale);\n            }\n          }\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n  /**\n   * Recursively merge the given config objects as the root options by handling\n   * default scale options for the `scales` and `scale` properties, then returns\n   * a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        var tval = target[key] || {};\n        var sval = source[key];\n\n        if (key === 'scales') {\n          // scale config merging is complex. Add our own function here for that\n          target[key] = mergeScaleConfig(tval, sval);\n        } else if (key === 'scale') {\n          // used in polar area & radar charts since there is only one scale\n          target[key] = helpers$1.merge(tval, [core_scaleService.getScaleDefaults(sval.type), sval]);\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n\n  function initConfig(config) {\n    config = config || {}; // Do NOT use mergeConfig for the data object because this method merges arrays\n    // and so would change references to labels and datasets, preventing data updates.\n\n    var data = config.data = config.data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    config.options = mergeConfig(core_defaults.global, core_defaults[config.type], config.options || {});\n    return config;\n  }\n\n  function updateConfig(chart) {\n    var newOptions = chart.options;\n    helpers$1.each(chart.scales, function (scale) {\n      core_layouts.removeBox(chart, scale);\n    });\n    newOptions = mergeConfig(core_defaults.global, core_defaults[chart.config.type], newOptions);\n    chart.options = chart.config.options = newOptions;\n    chart.ensureScalesHaveIDs();\n    chart.buildOrUpdateScales(); // Tooltip\n\n    chart.tooltip._options = newOptions.tooltips;\n    chart.tooltip.initialize();\n  }\n\n  function positionIsHorizontal(position) {\n    return position === 'top' || position === 'bottom';\n  }\n\n  var Chart = function Chart(item, config) {\n    this.construct(item, config);\n    return this;\n  };\n\n  helpers$1.extend(Chart.prototype,\n  /** @lends Chart */\n  {\n    /**\n     * @private\n     */\n    construct: function construct(item, config) {\n      var me = this;\n      config = initConfig(config);\n      var context = platform.acquireContext(item, config);\n      var canvas = context && context.canvas;\n      var height = canvas && canvas.height;\n      var width = canvas && canvas.width;\n      me.id = helpers$1.uid();\n      me.ctx = context;\n      me.canvas = canvas;\n      me.config = config;\n      me.width = width;\n      me.height = height;\n      me.aspectRatio = height ? width / height : null;\n      me.options = config.options;\n      me._bufferedRender = false;\n      /**\n       * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n       * the \"instance\" still need to be defined since it might be called from plugins.\n       * @prop Chart#chart\n       * @deprecated since version 2.6.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      me.chart = me;\n      me.controller = me; // chart.chart.controller #inception\n      // Add the chart instance to the global namespace\n\n      Chart.instances[me.id] = me; // Define alias to the config data: `chart.data === chart.config.data`\n\n      Object.defineProperty(me, 'data', {\n        get: function get() {\n          return me.config.data;\n        },\n        set: function set(value) {\n          me.config.data = value;\n        }\n      });\n\n      if (!context || !canvas) {\n        // The given item is not a compatible context2d element, let's return before finalizing\n        // the chart initialization but after setting basic chart / controller properties that\n        // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n        // https://github.com/chartjs/Chart.js/issues/2807\n        console.error(\"Failed to create chart: can't acquire context from the given item\");\n        return;\n      }\n\n      me.initialize();\n      me.update();\n    },\n\n    /**\n     * @private\n     */\n    initialize: function initialize() {\n      var me = this; // Before init plugin notification\n\n      core_plugins.notify(me, 'beforeInit');\n      helpers$1.retinaScale(me, me.options.devicePixelRatio);\n      me.bindEvents();\n\n      if (me.options.responsive) {\n        // Initial resize before chart draws (must be silent to preserve initial animations).\n        me.resize(true);\n      } // Make sure scales have IDs and are built before we build any controllers.\n\n\n      me.ensureScalesHaveIDs();\n      me.buildOrUpdateScales();\n      me.initToolTip(); // After init plugin notification\n\n      core_plugins.notify(me, 'afterInit');\n      return me;\n    },\n    clear: function clear() {\n      helpers$1.canvas.clear(this);\n      return this;\n    },\n    stop: function stop() {\n      // Stops any current animation loop occurring\n      core_animations.cancelAnimation(this);\n      return this;\n    },\n    resize: function resize(silent) {\n      var me = this;\n      var options = me.options;\n      var canvas = me.canvas;\n      var aspectRatio = options.maintainAspectRatio && me.aspectRatio || null; // the canvas render width and height will be casted to integers so make sure that\n      // the canvas display style uses the same integer values to avoid blurring effect.\n      // Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed\n\n      var newWidth = Math.max(0, Math.floor(helpers$1.getMaximumWidth(canvas)));\n      var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers$1.getMaximumHeight(canvas)));\n\n      if (me.width === newWidth && me.height === newHeight) {\n        return;\n      }\n\n      canvas.width = me.width = newWidth;\n      canvas.height = me.height = newHeight;\n      canvas.style.width = newWidth + 'px';\n      canvas.style.height = newHeight + 'px';\n      helpers$1.retinaScale(me, options.devicePixelRatio);\n\n      if (!silent) {\n        // Notify any plugins about the resize\n        var newSize = {\n          width: newWidth,\n          height: newHeight\n        };\n        core_plugins.notify(me, 'resize', [newSize]); // Notify of resize\n\n        if (options.onResize) {\n          options.onResize(me, newSize);\n        }\n\n        me.stop();\n        me.update({\n          duration: options.responsiveAnimationDuration\n        });\n      }\n    },\n    ensureScalesHaveIDs: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      var scaleOptions = options.scale;\n      helpers$1.each(scalesOptions.xAxes, function (xAxisOptions, index) {\n        xAxisOptions.id = xAxisOptions.id || 'x-axis-' + index;\n      });\n      helpers$1.each(scalesOptions.yAxes, function (yAxisOptions, index) {\n        yAxisOptions.id = yAxisOptions.id || 'y-axis-' + index;\n      });\n\n      if (scaleOptions) {\n        scaleOptions.id = scaleOptions.id || 'scale';\n      }\n    },\n\n    /**\n     * Builds a map of scale ID to scale object for future lookup.\n     */\n    buildOrUpdateScales: function buildOrUpdateScales() {\n      var me = this;\n      var options = me.options;\n      var scales = me.scales || {};\n      var items = [];\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n\n      if (options.scales) {\n        items = items.concat((options.scales.xAxes || []).map(function (xAxisOptions) {\n          return {\n            options: xAxisOptions,\n            dtype: 'category',\n            dposition: 'bottom'\n          };\n        }), (options.scales.yAxes || []).map(function (yAxisOptions) {\n          return {\n            options: yAxisOptions,\n            dtype: 'linear',\n            dposition: 'left'\n          };\n        }));\n      }\n\n      if (options.scale) {\n        items.push({\n          options: options.scale,\n          dtype: 'radialLinear',\n          isDefault: true,\n          dposition: 'chartArea'\n        });\n      }\n\n      helpers$1.each(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var scaleType = valueOrDefault$8(scaleOptions.type, item.dtype);\n\n        if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n\n        updated[id] = true;\n        var scale = null;\n\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n          scale.options = scaleOptions;\n          scale.ctx = me.ctx;\n          scale.chart = me;\n        } else {\n          var scaleClass = core_scaleService.getScaleConstructor(scaleType);\n\n          if (!scaleClass) {\n            return;\n          }\n\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            options: scaleOptions,\n            ctx: me.ctx,\n            chart: me\n          });\n          scales[scale.id] = scale;\n        }\n\n        scale.mergeTicksOptions(); // TODO(SB): I think we should be able to remove this custom case (options.scale)\n        // and consider it as a regular scale part of the \"scales\"\" map only! This would\n        // make the logic easier and remove some useless? custom code.\n\n        if (item.isDefault) {\n          me.scale = scale;\n        }\n      }); // clear up discarded scales\n\n      helpers$1.each(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      me.scales = scales;\n      core_scaleService.addScalesToLayout(this);\n    },\n    buildOrUpdateControllers: function buildOrUpdateControllers() {\n      var me = this;\n      var newControllers = [];\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        var meta = me.getDatasetMeta(datasetIndex);\n        var type = dataset.type || me.config.type;\n\n        if (meta.type && meta.type !== type) {\n          me.destroyDatasetMeta(datasetIndex);\n          meta = me.getDatasetMeta(datasetIndex);\n        }\n\n        meta.type = type;\n\n        if (meta.controller) {\n          meta.controller.updateIndex(datasetIndex);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = controllers[meta.type];\n\n          if (ControllerClass === undefined) {\n            throw new Error('\"' + meta.type + '\" is not a chart type.');\n          }\n\n          meta.controller = new ControllerClass(me, datasetIndex);\n          newControllers.push(meta.controller);\n        }\n      }, me);\n      return newControllers;\n    },\n\n    /**\n     * Reset the elements of all datasets\n     * @private\n     */\n    resetElements: function resetElements() {\n      var me = this;\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.reset();\n      }, me);\n    },\n\n    /**\n    * Resets the chart back to it's state before the initial animation\n    */\n    reset: function reset() {\n      this.resetElements();\n      this.tooltip.initialize();\n    },\n    update: function update(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      updateConfig(me); // plugins options references might have change, let's invalidate the cache\n      // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\n      core_plugins._invalidate(me);\n\n      if (core_plugins.notify(me, 'beforeUpdate') === false) {\n        return;\n      } // In case the entire data object changed\n\n\n      me.tooltip._data = me.data; // Make sure dataset controllers are updated and new controllers are reset\n\n      var newControllers = me.buildOrUpdateControllers(); // Make sure all dataset controllers have correct meta data counts\n\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n      }, me);\n      me.updateLayout(); // Can only reset the new controllers after the scales have been updated\n\n      if (me.options.animation && me.options.animation.duration) {\n        helpers$1.each(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n\n      me.updateDatasets(); // Need to reset tooltip in case it is displayed with elements that are removed\n      // after update.\n\n      me.tooltip.initialize(); // Last active contains items that were previously in the tooltip.\n      // When we reset the tooltip, we need to clear it\n\n      me.lastActive = []; // Do this before render so that any plugins that need final scale updates can use it\n\n      core_plugins.notify(me, 'afterUpdate');\n\n      if (me._bufferedRender) {\n        me._bufferedRequest = {\n          duration: config.duration,\n          easing: config.easing,\n          lazy: config.lazy\n        };\n      } else {\n        me.render(config);\n      }\n    },\n\n    /**\n     * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n     * hook, in which case, plugins will not be called on `afterLayout`.\n     * @private\n     */\n    updateLayout: function updateLayout() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeLayout') === false) {\n        return;\n      }\n\n      core_layouts.update(this, this.width, this.height);\n      /**\n       * Provided for backward compatibility, use `afterLayout` instead.\n       * @method IPlugin#afterScaleUpdate\n       * @deprecated since version 2.5.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      core_plugins.notify(me, 'afterScaleUpdate');\n      core_plugins.notify(me, 'afterLayout');\n    },\n\n    /**\n     * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n     * @private\n     */\n    updateDatasets: function updateDatasets() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n        return;\n      }\n\n      for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.updateDataset(i);\n      }\n\n      core_plugins.notify(me, 'afterDatasetsUpdate');\n    },\n\n    /**\n     * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n     * @private\n     */\n    updateDataset: function updateDataset(index) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n        return;\n      }\n\n      meta.controller.update();\n      core_plugins.notify(me, 'afterDatasetUpdate', [args]);\n    },\n    render: function render(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      var animationOptions = me.options.animation;\n      var duration = valueOrDefault$8(config.duration, animationOptions && animationOptions.duration);\n      var lazy = config.lazy;\n\n      if (core_plugins.notify(me, 'beforeRender') === false) {\n        return;\n      }\n\n      var onComplete = function onComplete(animation) {\n        core_plugins.notify(me, 'afterRender');\n        helpers$1.callback(animationOptions && animationOptions.onComplete, [animation], me);\n      };\n\n      if (animationOptions && duration) {\n        var animation = new core_animation({\n          numSteps: duration / 16.66,\n          // 60 fps\n          easing: config.easing || animationOptions.easing,\n          render: function render(chart, animationObject) {\n            var easingFunction = helpers$1.easing.effects[animationObject.easing];\n            var currentStep = animationObject.currentStep;\n            var stepDecimal = currentStep / animationObject.numSteps;\n            chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n          },\n          onAnimationProgress: animationOptions.onProgress,\n          onAnimationComplete: onComplete\n        });\n        core_animations.addAnimation(me, animation, duration, lazy);\n      } else {\n        me.draw(); // See https://github.com/chartjs/Chart.js/issues/3781\n\n        onComplete(new core_animation({\n          numSteps: 0,\n          chart: me\n        }));\n      }\n\n      return me;\n    },\n    draw: function draw(easingValue) {\n      var me = this;\n      me.clear();\n\n      if (helpers$1.isNullOrUndef(easingValue)) {\n        easingValue = 1;\n      }\n\n      me.transition(easingValue);\n\n      if (me.width <= 0 || me.height <= 0) {\n        return;\n      }\n\n      if (core_plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n        return;\n      } // Draw all the scales\n\n\n      helpers$1.each(me.boxes, function (box) {\n        box.draw(me.chartArea);\n      }, me);\n      me.drawDatasets(easingValue);\n\n      me._drawTooltip(easingValue);\n\n      core_plugins.notify(me, 'afterDraw', [easingValue]);\n    },\n\n    /**\n     * @private\n     */\n    transition: function transition(easingValue) {\n      var me = this;\n\n      for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n        if (me.isDatasetVisible(i)) {\n          me.getDatasetMeta(i).controller.transition(easingValue);\n        }\n      }\n\n      me.tooltip.transition(easingValue);\n    },\n\n    /**\n     * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n     * @private\n     */\n    drawDatasets: function drawDatasets(easingValue) {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n        return;\n      } // Draw datasets reversed to support proper line stacking\n\n\n      for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n        if (me.isDatasetVisible(i)) {\n          me.drawDataset(i, easingValue);\n        }\n      }\n\n      core_plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n    },\n\n    /**\n     * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n     * @private\n     */\n    drawDataset: function drawDataset(index, easingValue) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n        return;\n      }\n\n      meta.controller.draw(easingValue);\n      core_plugins.notify(me, 'afterDatasetDraw', [args]);\n    },\n\n    /**\n     * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n     * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n     * @private\n     */\n    _drawTooltip: function _drawTooltip(easingValue) {\n      var me = this;\n      var tooltip = me.tooltip;\n      var args = {\n        tooltip: tooltip,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n        return;\n      }\n\n      tooltip.draw();\n      core_plugins.notify(me, 'afterTooltipDraw', [args]);\n    },\n\n    /**\n     * Get the single element that was clicked on\n     * @return An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n     */\n    getElementAtEvent: function getElementAtEvent(e) {\n      return core_interaction.modes.single(this, e);\n    },\n    getElementsAtEvent: function getElementsAtEvent(e) {\n      return core_interaction.modes.label(this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtXAxis: function getElementsAtXAxis(e) {\n      return core_interaction.modes['x-axis'](this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtEventForMode: function getElementsAtEventForMode(e, mode, options) {\n      var method = core_interaction.modes[mode];\n\n      if (typeof method === 'function') {\n        return method(this, e, options);\n      }\n\n      return [];\n    },\n    getDatasetAtEvent: function getDatasetAtEvent(e) {\n      return core_interaction.modes.dataset(this, e, {\n        intersect: true\n      });\n    },\n    getDatasetMeta: function getDatasetMeta(datasetIndex) {\n      var me = this;\n      var dataset = me.data.datasets[datasetIndex];\n\n      if (!dataset._meta) {\n        dataset._meta = {};\n      }\n\n      var meta = dataset._meta[me.id];\n\n      if (!meta) {\n        meta = dataset._meta[me.id] = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          // See isDatasetVisible() comment\n          xAxisID: null,\n          yAxisID: null\n        };\n      }\n\n      return meta;\n    },\n    getVisibleDatasetCount: function getVisibleDatasetCount() {\n      var count = 0;\n\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        if (this.isDatasetVisible(i)) {\n          count++;\n        }\n      }\n\n      return count;\n    },\n    isDatasetVisible: function isDatasetVisible(datasetIndex) {\n      var meta = this.getDatasetMeta(datasetIndex); // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n      // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n    },\n    generateLegend: function generateLegend() {\n      return this.options.legendCallback(this);\n    },\n\n    /**\n     * @private\n     */\n    destroyDatasetMeta: function destroyDatasetMeta(datasetIndex) {\n      var id = this.id;\n      var dataset = this.data.datasets[datasetIndex];\n      var meta = dataset._meta && dataset._meta[id];\n\n      if (meta) {\n        meta.controller.destroy();\n        delete dataset._meta[id];\n      }\n    },\n    destroy: function destroy() {\n      var me = this;\n      var canvas = me.canvas;\n      var i, ilen;\n      me.stop(); // dataset controllers need to cleanup associated data\n\n      for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.destroyDatasetMeta(i);\n      }\n\n      if (canvas) {\n        me.unbindEvents();\n        helpers$1.canvas.clear(me);\n        platform.releaseContext(me.ctx);\n        me.canvas = null;\n        me.ctx = null;\n      }\n\n      core_plugins.notify(me, 'destroy');\n      delete Chart.instances[me.id];\n    },\n    toBase64Image: function toBase64Image() {\n      return this.canvas.toDataURL.apply(this.canvas, arguments);\n    },\n    initToolTip: function initToolTip() {\n      var me = this;\n      me.tooltip = new core_tooltip({\n        _chart: me,\n        _chartInstance: me,\n        // deprecated, backward compatibility\n        _data: me.data,\n        _options: me.options.tooltips\n      }, me);\n    },\n\n    /**\n     * @private\n     */\n    bindEvents: function bindEvents() {\n      var me = this;\n      var listeners = me._listeners = {};\n\n      var listener = function listener() {\n        me.eventHandler.apply(me, arguments);\n      };\n\n      helpers$1.each(me.options.events, function (type) {\n        platform.addEventListener(me, type, listener);\n        listeners[type] = listener;\n      }); // Elements used to detect size change should not be injected for non responsive charts.\n      // See https://github.com/chartjs/Chart.js/issues/2210\n\n      if (me.options.responsive) {\n        listener = function listener() {\n          me.resize();\n        };\n\n        platform.addEventListener(me, 'resize', listener);\n        listeners.resize = listener;\n      }\n    },\n\n    /**\n     * @private\n     */\n    unbindEvents: function unbindEvents() {\n      var me = this;\n      var listeners = me._listeners;\n\n      if (!listeners) {\n        return;\n      }\n\n      delete me._listeners;\n      helpers$1.each(listeners, function (listener, type) {\n        platform.removeEventListener(me, type, listener);\n      });\n    },\n    updateHoverStyle: function updateHoverStyle(elements, mode, enabled) {\n      var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n      var element, i, ilen;\n\n      for (i = 0, ilen = elements.length; i < ilen; ++i) {\n        element = elements[i];\n\n        if (element) {\n          this.getDatasetMeta(element._datasetIndex).controller[method](element);\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    eventHandler: function eventHandler(e) {\n      var me = this;\n      var tooltip = me.tooltip;\n\n      if (core_plugins.notify(me, 'beforeEvent', [e]) === false) {\n        return;\n      } // Buffer any update calls so that renders do not occur\n\n\n      me._bufferedRender = true;\n      me._bufferedRequest = null;\n      var changed = me.handleEvent(e); // for smooth tooltip animations issue #4989\n      // the tooltip should be the source of change\n      // Animation check workaround:\n      // tooltip._start will be null when tooltip isn't animating\n\n      if (tooltip) {\n        changed = tooltip._start ? tooltip.handleEvent(e) : changed | tooltip.handleEvent(e);\n      }\n\n      core_plugins.notify(me, 'afterEvent', [e]);\n      var bufferedRequest = me._bufferedRequest;\n\n      if (bufferedRequest) {\n        // If we have an update that was triggered, we need to do a normal render\n        me.render(bufferedRequest);\n      } else if (changed && !me.animating) {\n        // If entering, leaving, or changing elements, animate the change via pivot\n        me.stop(); // We only need to render at this point. Updating will cause scales to be\n        // recomputed generating flicker & using more memory than necessary.\n\n        me.render({\n          duration: me.options.hover.animationDuration,\n          lazy: true\n        });\n      }\n\n      me._bufferedRender = false;\n      me._bufferedRequest = null;\n      return me;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event the event to handle\n     * @return {boolean} true if the chart needs to re-render\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me.options || {};\n      var hoverOptions = options.hover;\n      var changed = false;\n      me.lastActive = me.lastActive || []; // Find Active Elements for hover and tooltips\n\n      if (e.type === 'mouseout') {\n        me.active = [];\n      } else {\n        me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n      } // Invoke onHover hook\n      // Need to call with native event here to not break backwards compatibility\n\n\n      helpers$1.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n      if (e.type === 'mouseup' || e.type === 'click') {\n        if (options.onClick) {\n          // Use e.native here for backwards compatibility\n          options.onClick.call(me, e.native, me.active);\n        }\n      } // Remove styling for last active (even if it may still be active)\n\n\n      if (me.lastActive.length) {\n        me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n      } // Built in hover styling\n\n\n      if (me.active.length && hoverOptions.mode) {\n        me.updateHoverStyle(me.active, hoverOptions.mode, true);\n      }\n\n      changed = !helpers$1.arrayEquals(me.active, me.lastActive); // Remember Last Actives\n\n      me.lastActive = me.active;\n      return changed;\n    }\n  });\n  /**\n   * NOTE(SB) We actually don't use this container anymore but we need to keep it\n   * for backward compatibility. Though, it can still be useful for plugins that\n   * would need to work on multiple charts?!\n   */\n\n  Chart.instances = {};\n  var core_controller = Chart; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart instead.\n   * @class Chart.Controller\n   * @deprecated since version 2.6\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.Controller = Chart;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.types = {};\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.configMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.configMerge = mergeConfig;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.scaleMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.scaleMerge = mergeScaleConfig;\n\n  var core_helpers = function core_helpers() {\n    // -- Basic js utility methods\n    helpers$1.where = function (collection, filterCallback) {\n      if (helpers$1.isArray(collection) && Array.prototype.filter) {\n        return collection.filter(filterCallback);\n      }\n\n      var filtered = [];\n      helpers$1.each(collection, function (item) {\n        if (filterCallback(item)) {\n          filtered.push(item);\n        }\n      });\n      return filtered;\n    };\n\n    helpers$1.findIndex = Array.prototype.findIndex ? function (array, callback, scope) {\n      return array.findIndex(callback, scope);\n    } : function (array, callback, scope) {\n      scope = scope === undefined ? array : scope;\n\n      for (var i = 0, ilen = array.length; i < ilen; ++i) {\n        if (callback.call(scope, array[i], i, array)) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n\n    helpers$1.findNextWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to start of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = -1;\n      }\n\n      for (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    };\n\n    helpers$1.findPreviousWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to end of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = arrayToSearch.length;\n      }\n\n      for (var i = startIndex - 1; i >= 0; i--) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    }; // -- Math methods\n\n\n    helpers$1.isNumber = function (n) {\n      return !isNaN(parseFloat(n)) && isFinite(n);\n    };\n\n    helpers$1.almostEquals = function (x, y, epsilon) {\n      return Math.abs(x - y) < epsilon;\n    };\n\n    helpers$1.almostWhole = function (x, epsilon) {\n      var rounded = Math.round(x);\n      return rounded - epsilon < x && rounded + epsilon > x;\n    };\n\n    helpers$1.max = function (array) {\n      return array.reduce(function (max, value) {\n        if (!isNaN(value)) {\n          return Math.max(max, value);\n        }\n\n        return max;\n      }, Number.NEGATIVE_INFINITY);\n    };\n\n    helpers$1.min = function (array) {\n      return array.reduce(function (min, value) {\n        if (!isNaN(value)) {\n          return Math.min(min, value);\n        }\n\n        return min;\n      }, Number.POSITIVE_INFINITY);\n    };\n\n    helpers$1.sign = Math.sign ? function (x) {\n      return Math.sign(x);\n    } : function (x) {\n      x = +x; // convert to a number\n\n      if (x === 0 || isNaN(x)) {\n        return x;\n      }\n\n      return x > 0 ? 1 : -1;\n    };\n    helpers$1.log10 = Math.log10 ? function (x) {\n      return Math.log10(x);\n    } : function (x) {\n      var exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n      // Check for whole powers of 10,\n      // which due to floating point rounding error should be corrected.\n\n      var powerOf10 = Math.round(exponent);\n      var isPowerOf10 = x === Math.pow(10, powerOf10);\n      return isPowerOf10 ? powerOf10 : exponent;\n    };\n\n    helpers$1.toRadians = function (degrees) {\n      return degrees * (Math.PI / 180);\n    };\n\n    helpers$1.toDegrees = function (radians) {\n      return radians * (180 / Math.PI);\n    };\n    /**\n     * Returns the number of decimal places\n     * i.e. the number of digits after the decimal point, of the value of this Number.\n     * @param {number} x - A number.\n     * @returns {number} The number of decimal places.\n     * @private\n     */\n\n\n    helpers$1._decimalPlaces = function (x) {\n      if (!helpers$1.isFinite(x)) {\n        return;\n      }\n\n      var e = 1;\n      var p = 0;\n\n      while (Math.round(x * e) / e !== x) {\n        e *= 10;\n        p++;\n      }\n\n      return p;\n    }; // Gets the angle from vertical upright to the point about a centre.\n\n\n    helpers$1.getAngleFromPoint = function (centrePoint, anglePoint) {\n      var distanceFromXCenter = anglePoint.x - centrePoint.x;\n      var distanceFromYCenter = anglePoint.y - centrePoint.y;\n      var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n      var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n      if (angle < -0.5 * Math.PI) {\n        angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n      }\n\n      return {\n        angle: angle,\n        distance: radialDistanceFromCenter\n      };\n    };\n\n    helpers$1.distanceBetweenPoints = function (pt1, pt2) {\n      return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**\n     * Provided for backward compatibility, not available anymore\n     * @function Chart.helpers.aliasPixel\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     */\n\n\n    helpers$1.aliasPixel = function (pixelWidth) {\n      return pixelWidth % 2 === 0 ? 0 : 0.5;\n    };\n    /**\n     * Returns the aligned pixel value to avoid anti-aliasing blur\n     * @param {Chart} chart - The chart instance.\n     * @param {number} pixel - A pixel value.\n     * @param {number} width - The width of the element.\n     * @returns {number} The aligned pixel value.\n     * @private\n     */\n\n\n    helpers$1._alignPixel = function (chart, pixel, width) {\n      var devicePixelRatio = chart.currentDevicePixelRatio;\n      var halfWidth = width / 2;\n      return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n    };\n\n    helpers$1.splineCurve = function (firstPoint, middlePoint, afterPoint, t) {\n      // Props to Rob Spencer at scaled innovation for his post on splining between points\n      // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n      // This function must also respect \"skipped\" points\n      var previous = firstPoint.skip ? middlePoint : firstPoint;\n      var current = middlePoint;\n      var next = afterPoint.skip ? middlePoint : afterPoint;\n      var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n      var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n      var s01 = d01 / (d01 + d12);\n      var s12 = d12 / (d01 + d12); // If all points are the same, s01 & s02 will be inf\n\n      s01 = isNaN(s01) ? 0 : s01;\n      s12 = isNaN(s12) ? 0 : s12;\n      var fa = t * s01; // scaling factor for triangle Ta\n\n      var fb = t * s12;\n      return {\n        previous: {\n          x: current.x - fa * (next.x - previous.x),\n          y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n          x: current.x + fb * (next.x - previous.x),\n          y: current.y + fb * (next.y - previous.y)\n        }\n      };\n    };\n\n    helpers$1.EPSILON = Number.EPSILON || 1e-14;\n\n    helpers$1.splineCurveMonotone = function (points) {\n      // This function calculates Bézier control points in a similar way than |splineCurve|,\n      // but preserves monotonicity of the provided data and ensures no local extremums are added\n      // between the dataset discrete points due to the interpolation.\n      // See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n      var pointsWithTangents = (points || []).map(function (point) {\n        return {\n          model: point._model,\n          deltaK: 0,\n          mK: 0\n        };\n      }); // Calculate slopes (deltaK) and initialize tangents (mK)\n\n      var pointsLen = pointsWithTangents.length;\n      var i, pointBefore, pointCurrent, pointAfter;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointAfter && !pointAfter.model.skip) {\n          var slopeDeltaX = pointAfter.model.x - pointCurrent.model.x; // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\n          pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n        }\n\n        if (!pointBefore || pointBefore.model.skip) {\n          pointCurrent.mK = pointCurrent.deltaK;\n        } else if (!pointAfter || pointAfter.model.skip) {\n          pointCurrent.mK = pointBefore.deltaK;\n        } else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n          pointCurrent.mK = 0;\n        } else {\n          pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n        }\n      } // Adjust tangents to ensure monotonic properties\n\n\n      var alphaK, betaK, tauK, squaredMagnitude;\n\n      for (i = 0; i < pointsLen - 1; ++i) {\n        pointCurrent = pointsWithTangents[i];\n        pointAfter = pointsWithTangents[i + 1];\n\n        if (pointCurrent.model.skip || pointAfter.model.skip) {\n          continue;\n        }\n\n        if (helpers$1.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n          pointCurrent.mK = pointAfter.mK = 0;\n          continue;\n        }\n\n        alphaK = pointCurrent.mK / pointCurrent.deltaK;\n        betaK = pointAfter.mK / pointCurrent.deltaK;\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\n        if (squaredMagnitude <= 9) {\n          continue;\n        }\n\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n        pointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n      } // Compute control points\n\n\n      var deltaX;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointBefore && !pointBefore.model.skip) {\n          deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n          pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n          pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n        }\n\n        if (pointAfter && !pointAfter.model.skip) {\n          deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n          pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n          pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n        }\n      }\n    };\n\n    helpers$1.nextItem = function (collection, index, loop) {\n      if (loop) {\n        return index >= collection.length - 1 ? collection[0] : collection[index + 1];\n      }\n\n      return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n    };\n\n    helpers$1.previousItem = function (collection, index, loop) {\n      if (loop) {\n        return index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n      }\n\n      return index <= 0 ? collection[0] : collection[index - 1];\n    }; // Implementation of the nice number algorithm used in determining where axis labels will go\n\n\n    helpers$1.niceNum = function (range, round) {\n      var exponent = Math.floor(helpers$1.log10(range));\n      var fraction = range / Math.pow(10, exponent);\n      var niceFraction;\n\n      if (round) {\n        if (fraction < 1.5) {\n          niceFraction = 1;\n        } else if (fraction < 3) {\n          niceFraction = 2;\n        } else if (fraction < 7) {\n          niceFraction = 5;\n        } else {\n          niceFraction = 10;\n        }\n      } else if (fraction <= 1.0) {\n        niceFraction = 1;\n      } else if (fraction <= 2) {\n        niceFraction = 2;\n      } else if (fraction <= 5) {\n        niceFraction = 5;\n      } else {\n        niceFraction = 10;\n      }\n\n      return niceFraction * Math.pow(10, exponent);\n    }; // Request animation polyfill - https://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\n    helpers$1.requestAnimFrame = function () {\n      if (typeof window === 'undefined') {\n        return function (callback) {\n          callback();\n        };\n      }\n\n      return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n        return window.setTimeout(callback, 1000 / 60);\n      };\n    }(); // -- DOM methods\n\n\n    helpers$1.getRelativePosition = function (evt, chart) {\n      var mouseX, mouseY;\n      var e = evt.originalEvent || evt;\n      var canvas = evt.target || evt.srcElement;\n      var boundingRect = canvas.getBoundingClientRect();\n      var touches = e.touches;\n\n      if (touches && touches.length > 0) {\n        mouseX = touches[0].clientX;\n        mouseY = touches[0].clientY;\n      } else {\n        mouseX = e.clientX;\n        mouseY = e.clientY;\n      } // Scale mouse coordinates into canvas coordinates\n      // by following the pattern laid out by 'jerryj' in the comments of\n      // https://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\n\n      var paddingLeft = parseFloat(helpers$1.getStyle(canvas, 'padding-left'));\n      var paddingTop = parseFloat(helpers$1.getStyle(canvas, 'padding-top'));\n      var paddingRight = parseFloat(helpers$1.getStyle(canvas, 'padding-right'));\n      var paddingBottom = parseFloat(helpers$1.getStyle(canvas, 'padding-bottom'));\n      var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n      var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom; // We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n      // the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\n      mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / width * canvas.width / chart.currentDevicePixelRatio);\n      mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / height * canvas.height / chart.currentDevicePixelRatio);\n      return {\n        x: mouseX,\n        y: mouseY\n      };\n    }; // Private helper function to convert max-width/max-height values that may be percentages into a number\n\n\n    function parseMaxStyle(styleValue, node, parentProperty) {\n      var valueInPixels;\n\n      if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n\n        if (styleValue.indexOf('%') !== -1) {\n          // percentage * size in dimension\n          valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n      } else {\n        valueInPixels = styleValue;\n      }\n\n      return valueInPixels;\n    }\n    /**\n     * Returns if the given value contains an effective constraint.\n     * @private\n     */\n\n\n    function isConstrainedValue(value) {\n      return value !== undefined && value !== null && value !== 'none';\n    }\n    /**\n     * Returns the max width or height of the given DOM node in a cross-browser compatible fashion\n     * @param {HTMLElement} domNode - the node to check the constraint on\n     * @param {string} maxStyle - the style that defines the maximum for the direction we are using ('max-width' / 'max-height')\n     * @param {string} percentageProperty - property of parent to use when calculating width as a percentage\n     * @see {@link https://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser}\n     */\n\n\n    function getConstraintDimension(domNode, maxStyle, percentageProperty) {\n      var view = document.defaultView;\n\n      var parentNode = helpers$1._getParentNode(domNode);\n\n      var constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n      var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n      var hasCNode = isConstrainedValue(constrainedNode);\n      var hasCContainer = isConstrainedValue(constrainedContainer);\n      var infinity = Number.POSITIVE_INFINITY;\n\n      if (hasCNode || hasCContainer) {\n        return Math.min(hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity, hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n      }\n\n      return 'none';\n    } // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintWidth = function (domNode) {\n      return getConstraintDimension(domNode, 'max-width', 'clientWidth');\n    }; // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintHeight = function (domNode) {\n      return getConstraintDimension(domNode, 'max-height', 'clientHeight');\n    };\n    /**\n     * @private\n    \t */\n\n\n    helpers$1._calculatePadding = function (container, padding, parentDimension) {\n      padding = helpers$1.getStyle(container, padding);\n      return padding.indexOf('%') > -1 ? parentDimension * parseInt(padding, 10) / 100 : parseInt(padding, 10);\n    };\n    /**\n     * @private\n     */\n\n\n    helpers$1._getParentNode = function (domNode) {\n      var parent = domNode.parentNode;\n\n      if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n      }\n\n      return parent;\n    };\n\n    helpers$1.getMaximumWidth = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientWidth;\n      }\n\n      var clientWidth = container.clientWidth;\n\n      var paddingLeft = helpers$1._calculatePadding(container, 'padding-left', clientWidth);\n\n      var paddingRight = helpers$1._calculatePadding(container, 'padding-right', clientWidth);\n\n      var w = clientWidth - paddingLeft - paddingRight;\n      var cw = helpers$1.getConstraintWidth(domNode);\n      return isNaN(cw) ? w : Math.min(w, cw);\n    };\n\n    helpers$1.getMaximumHeight = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientHeight;\n      }\n\n      var clientHeight = container.clientHeight;\n\n      var paddingTop = helpers$1._calculatePadding(container, 'padding-top', clientHeight);\n\n      var paddingBottom = helpers$1._calculatePadding(container, 'padding-bottom', clientHeight);\n\n      var h = clientHeight - paddingTop - paddingBottom;\n      var ch = helpers$1.getConstraintHeight(domNode);\n      return isNaN(ch) ? h : Math.min(h, ch);\n    };\n\n    helpers$1.getStyle = function (el, property) {\n      return el.currentStyle ? el.currentStyle[property] : document.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n    };\n\n    helpers$1.retinaScale = function (chart, forceRatio) {\n      var pixelRatio = chart.currentDevicePixelRatio = forceRatio || typeof window !== 'undefined' && window.devicePixelRatio || 1;\n\n      if (pixelRatio === 1) {\n        return;\n      }\n\n      var canvas = chart.canvas;\n      var height = chart.height;\n      var width = chart.width;\n      canvas.height = height * pixelRatio;\n      canvas.width = width * pixelRatio;\n      chart.ctx.scale(pixelRatio, pixelRatio); // If no style has been set on the canvas, the render size is used as display size,\n      // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n      // See https://github.com/chartjs/Chart.js/issues/3575\n\n      if (!canvas.style.height && !canvas.style.width) {\n        canvas.style.height = height + 'px';\n        canvas.style.width = width + 'px';\n      }\n    }; // -- Canvas methods\n\n\n    helpers$1.fontString = function (pixelSize, fontStyle, fontFamily) {\n      return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n    };\n\n    helpers$1.longestText = function (ctx, font, arrayOfThings, cache) {\n      cache = cache || {};\n      var data = cache.data = cache.data || {};\n      var gc = cache.garbageCollect = cache.garbageCollect || [];\n\n      if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n      }\n\n      ctx.font = font;\n      var longest = 0;\n      helpers$1.each(arrayOfThings, function (thing) {\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && helpers$1.isArray(thing) !== true) {\n          longest = helpers$1.measureText(ctx, data, gc, longest, thing);\n        } else if (helpers$1.isArray(thing)) {\n          // if it is an array lets measure each element\n          // to do maybe simplify this function a bit so we can do this more recursively?\n          helpers$1.each(thing, function (nestedThing) {\n            // Undefined strings and arrays should not be measured\n            if (nestedThing !== undefined && nestedThing !== null && !helpers$1.isArray(nestedThing)) {\n              longest = helpers$1.measureText(ctx, data, gc, longest, nestedThing);\n            }\n          });\n        }\n      });\n      var gcLen = gc.length / 2;\n\n      if (gcLen > arrayOfThings.length) {\n        for (var i = 0; i < gcLen; i++) {\n          delete data[gc[i]];\n        }\n\n        gc.splice(0, gcLen);\n      }\n\n      return longest;\n    };\n\n    helpers$1.measureText = function (ctx, data, gc, longest, string) {\n      var textWidth = data[string];\n\n      if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n      }\n\n      if (textWidth > longest) {\n        longest = textWidth;\n      }\n\n      return longest;\n    };\n\n    helpers$1.numberOfLabelLines = function (arrayOfThings) {\n      var numberOfLines = 1;\n      helpers$1.each(arrayOfThings, function (thing) {\n        if (helpers$1.isArray(thing)) {\n          if (thing.length > numberOfLines) {\n            numberOfLines = thing.length;\n          }\n        }\n      });\n      return numberOfLines;\n    };\n\n    helpers$1.color = !chartjsColor ? function (value) {\n      console.error('Color.js not found!');\n      return value;\n    } : function (value) {\n      /* global CanvasGradient */\n      if (value instanceof CanvasGradient) {\n        value = core_defaults.global.defaultColor;\n      }\n\n      return chartjsColor(value);\n    };\n\n    helpers$1.getHoverColor = function (colorValue) {\n      /* global CanvasPattern */\n      return colorValue instanceof CanvasPattern || colorValue instanceof CanvasGradient ? colorValue : helpers$1.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n    };\n  };\n\n  function abstract() {\n    throw new Error('This method is not implemented: either no adapter can ' + 'be found or an incomplete integration was provided.');\n  }\n  /**\n   * Date adapter (current used by the time scale)\n   * @namespace Chart._adapters._date\n   * @memberof Chart._adapters\n   * @private\n   */\n\n  /**\n   * Currently supported unit string values.\n   * @typedef {('millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year')}\n   * @memberof Chart._adapters._date\n   * @name Unit\n   */\n\n  /**\n   * @class\n   */\n\n\n  function DateAdapter(options) {\n    this.options = options || {};\n  }\n\n  helpers$1.extend(DateAdapter.prototype,\n  /** @lends DateAdapter */\n  {\n    /**\n     * Returns a map of time formats for the supported formatting units defined\n     * in Unit as well as 'datetime' representing a detailed date/time string.\n     * @returns {{string: string}}\n     */\n    formats: abstract,\n\n    /**\n     * Parses the given `value` and return the associated timestamp.\n     * @param {any} value - the value to parse (usually comes from the data)\n     * @param {string} [format] - the expected data format\n     * @returns {(number|null)}\n     * @function\n     */\n    parse: abstract,\n\n    /**\n     * Returns the formatted date in the specified `format` for a given `timestamp`.\n     * @param {number} timestamp - the timestamp to format\n     * @param {string} format - the date/time token\n     * @return {string}\n     * @function\n     */\n    format: abstract,\n\n    /**\n     * Adds the specified `amount` of `unit` to the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {number} amount - the amount to add\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    add: abstract,\n\n    /**\n     * Returns the number of `unit` between the given timestamps.\n     * @param {number} max - the input timestamp (reference)\n     * @param {number} min - the timestamp to substract\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    diff: abstract,\n\n    /**\n     * Returns start of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @param {number} [weekday] - the ISO day of the week with 1 being Monday\n     * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n     * @function\n     */\n    startOf: abstract,\n\n    /**\n     * Returns end of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @function\n     */\n    endOf: abstract,\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility for scale.getValueForPixel(),\n     * this method should be overridden only by the moment adapter.\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(value) {\n      return value;\n    }\n  });\n\n  DateAdapter.override = function (members) {\n    helpers$1.extend(DateAdapter.prototype, members);\n  };\n\n  var _date = DateAdapter;\n  var core_adapters = {\n    _date: _date\n  };\n  /**\n   * Namespace to hold static tick generation functions\n   * @namespace Chart.Ticks\n   */\n\n  var core_ticks = {\n    /**\n     * Namespace to hold formatters for different types of ticks\n     * @namespace Chart.Ticks.formatters\n     */\n    formatters: {\n      /**\n       * Formatter for value labels\n       * @method Chart.Ticks.formatters.values\n       * @param value the value to display\n       * @return {string|string[]} the label to display\n       */\n      values: function values(value) {\n        return helpers$1.isArray(value) ? value : '' + value;\n      },\n\n      /**\n       * Formatter for linear numeric ticks\n       * @method Chart.Ticks.formatters.linear\n       * @param tickValue {number} the value to be formatted\n       * @param index {number} the position of the tickValue parameter in the ticks array\n       * @param ticks {number[]} the list of ticks being converted\n       * @return {string} string representation of the tickValue parameter\n       */\n      linear: function linear(tickValue, index, ticks) {\n        // If we have lots of ticks, don't use the ones\n        var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0]; // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\n        if (Math.abs(delta) > 1) {\n          if (tickValue !== Math.floor(tickValue)) {\n            // not an integer\n            delta = tickValue - Math.floor(tickValue);\n          }\n        }\n\n        var logDelta = helpers$1.log10(Math.abs(delta));\n        var tickString = '';\n\n        if (tickValue !== 0) {\n          var maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\n\n          if (maxTick < 1e-4) {\n            // all ticks are small numbers; use scientific notation\n            var logTick = helpers$1.log10(Math.abs(tickValue));\n            tickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));\n          } else {\n            var numDecimal = -1 * Math.floor(logDelta);\n            numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\n            tickString = tickValue.toFixed(numDecimal);\n          }\n        } else {\n          tickString = '0'; // never show decimal places for 0\n        }\n\n        return tickString;\n      },\n      logarithmic: function logarithmic(tickValue, index, ticks) {\n        var remain = tickValue / Math.pow(10, Math.floor(helpers$1.log10(tickValue)));\n\n        if (tickValue === 0) {\n          return '0';\n        } else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n          return tickValue.toExponential();\n        }\n\n        return '';\n      }\n    }\n  };\n  var valueOrDefault$9 = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault = helpers$1.valueAtIndexOrDefault;\n\n  core_defaults._set('scale', {\n    display: true,\n    position: 'left',\n    offset: false,\n    // grid line settings\n    gridLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      drawBorder: true,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickMarkLength: 10,\n      zeroLineWidth: 1,\n      zeroLineColor: 'rgba(0,0,0,0.25)',\n      zeroLineBorderDash: [],\n      zeroLineBorderDashOffset: 0.0,\n      offsetGridLines: false,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    // scale label\n    scaleLabel: {\n      // display property\n      display: false,\n      // actual label\n      labelString: '',\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n    // label settings\n    ticks: {\n      beginAtZero: false,\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      padding: 0,\n      reverse: false,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 0,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: core_ticks.formatters.values,\n      minor: {},\n      major: {}\n    }\n  });\n\n  function labelsFromTicks(ticks) {\n    var labels = [];\n    var i, ilen;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      labels.push(ticks[i].label);\n    }\n\n    return labels;\n  }\n\n  function getPixelForGridLine(scale, index, offsetGridLines) {\n    var lineValue = scale.getPixelForTick(index);\n\n    if (offsetGridLines) {\n      if (scale.getTicks().length === 1) {\n        lineValue -= scale.isHorizontal() ? Math.max(lineValue - scale.left, scale.right - lineValue) : Math.max(lineValue - scale.top, scale.bottom - lineValue);\n      } else if (index === 0) {\n        lineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n      } else {\n        lineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n      }\n    }\n\n    return lineValue;\n  }\n\n  function computeTextSize(context, tick, font) {\n    return helpers$1.isArray(tick) ? helpers$1.longestText(context, font, tick) : context.measureText(tick).width;\n  }\n\n  var core_scale = core_element.extend({\n    /**\n     * Get the padding needed for the scale\n     * @method getPadding\n     * @private\n     * @returns {Padding} the necessary padding\n     */\n    getPadding: function getPadding() {\n      var me = this;\n      return {\n        left: me.paddingLeft || 0,\n        top: me.paddingTop || 0,\n        right: me.paddingRight || 0,\n        bottom: me.paddingBottom || 0\n      };\n    },\n\n    /**\n     * Returns the scale tick objects ({label, major})\n     * @since 2.7\n     */\n    getTicks: function getTicks() {\n      return this._ticks;\n    },\n    // These methods are ordered by lifecyle. Utilities then follow.\n    // Any function defined here is inherited by all scale types.\n    // Any function can be extended by the scale type\n    mergeTicksOptions: function mergeTicksOptions() {\n      var ticks = this.options.ticks;\n\n      if (ticks.minor === false) {\n        ticks.minor = {\n          display: false\n        };\n      }\n\n      if (ticks.major === false) {\n        ticks.major = {\n          display: false\n        };\n      }\n\n      for (var key in ticks) {\n        if (key !== 'major' && key !== 'minor') {\n          if (typeof ticks.minor[key] === 'undefined') {\n            ticks.minor[key] = ticks[key];\n          }\n\n          if (typeof ticks.major[key] === 'undefined') {\n            ticks.major[key] = ticks[key];\n          }\n        }\n      }\n    },\n    beforeUpdate: function beforeUpdate() {\n      helpers$1.callback(this.options.beforeUpdate, [this]);\n    },\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this;\n      var i, ilen, labels, label, ticks, tick; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = helpers$1.extend({\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }, margins);\n      me._maxLabelLines = 0;\n      me.longestLabelWidth = 0;\n      me.longestTextCache = me.longestTextCache || {}; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Data min/max\n\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits(); // Ticks - `this.ticks` is now DEPRECATED!\n      // Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n      // and must not be accessed directly from outside this class. `this.ticks` being\n      // around for long time and not marked as private, we can't change its structure\n      // without unexpected breaking changes. If you need to access the scale ticks,\n      // use scale.getTicks() instead.\n\n      me.beforeBuildTicks(); // New implementations should return an array of objects but for BACKWARD COMPAT,\n      // we still support no return (`this.ticks` internally set by calling this method).\n\n      ticks = me.buildTicks() || []; // Allow modification of ticks in callback.\n\n      ticks = me.afterBuildTicks(ticks) || ticks;\n      me.beforeTickToLabelConversion(); // New implementations should return the formatted tick labels but for BACKWARD\n      // COMPAT, we still support no return (`this.ticks` internally changed by calling\n      // this method and supposed to contain only string values).\n\n      labels = me.convertTicksToLabels(ticks) || me.ticks;\n      me.afterTickToLabelConversion();\n      me.ticks = labels; // BACKWARD COMPATIBILITY\n      // IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n      // BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\n      for (i = 0, ilen = labels.length; i < ilen; ++i) {\n        label = labels[i];\n        tick = ticks[i];\n\n        if (!tick) {\n          ticks.push(tick = {\n            label: label,\n            major: false\n          });\n        } else {\n          tick.label = label;\n        }\n      }\n\n      me._ticks = ticks; // Tick Rotation\n\n      me.beforeCalculateTickRotation();\n      me.calculateTickRotation();\n      me.afterCalculateTickRotation(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: function afterUpdate() {\n      helpers$1.callback(this.options.afterUpdate, [this]);\n    },\n    //\n    beforeSetDimensions: function beforeSetDimensions() {\n      helpers$1.callback(this.options.beforeSetDimensions, [this]);\n    },\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0;\n    },\n    afterSetDimensions: function afterSetDimensions() {\n      helpers$1.callback(this.options.afterSetDimensions, [this]);\n    },\n    // Data limits\n    beforeDataLimits: function beforeDataLimits() {\n      helpers$1.callback(this.options.beforeDataLimits, [this]);\n    },\n    determineDataLimits: helpers$1.noop,\n    afterDataLimits: function afterDataLimits() {\n      helpers$1.callback(this.options.afterDataLimits, [this]);\n    },\n    //\n    beforeBuildTicks: function beforeBuildTicks() {\n      helpers$1.callback(this.options.beforeBuildTicks, [this]);\n    },\n    buildTicks: helpers$1.noop,\n    afterBuildTicks: function afterBuildTicks(ticks) {\n      var me = this; // ticks is empty for old axis implementations here\n\n      if (helpers$1.isArray(ticks) && ticks.length) {\n        return helpers$1.callback(me.options.afterBuildTicks, [me, ticks]);\n      } // Support old implementations (that modified `this.ticks` directly in buildTicks)\n\n\n      me.ticks = helpers$1.callback(me.options.afterBuildTicks, [me, me.ticks]) || me.ticks;\n      return ticks;\n    },\n    beforeTickToLabelConversion: function beforeTickToLabelConversion() {\n      helpers$1.callback(this.options.beforeTickToLabelConversion, [this]);\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this; // Convert ticks to strings\n\n      var tickOpts = me.options.ticks;\n      me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n    },\n    afterTickToLabelConversion: function afterTickToLabelConversion() {\n      helpers$1.callback(this.options.afterTickToLabelConversion, [this]);\n    },\n    //\n    beforeCalculateTickRotation: function beforeCalculateTickRotation() {\n      helpers$1.callback(this.options.beforeCalculateTickRotation, [this]);\n    },\n    calculateTickRotation: function calculateTickRotation() {\n      var me = this;\n      var context = me.ctx;\n      var tickOpts = me.options.ticks;\n      var labels = labelsFromTicks(me._ticks); // Get the width of each grid by calculating the difference\n      // between x offsets between 0 and 1.\n\n      var tickFont = helpers$1.options._parseFont(tickOpts);\n\n      context.font = tickFont.string;\n      var labelRotation = tickOpts.minRotation || 0;\n\n      if (labels.length && me.options.display && me.isHorizontal()) {\n        var originalLabelWidth = helpers$1.longestText(context, tickFont.string, labels, me.longestTextCache);\n        var labelWidth = originalLabelWidth;\n        var cosRotation, sinRotation; // Allow 3 pixels x2 padding either side for label readability\n\n        var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6; // Max label rotation can be set or default to 90 - also act as a loop counter\n\n        while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n          var angleRadians = helpers$1.toRadians(labelRotation);\n          cosRotation = Math.cos(angleRadians);\n          sinRotation = Math.sin(angleRadians);\n\n          if (sinRotation * originalLabelWidth > me.maxHeight) {\n            // go back one step\n            labelRotation--;\n            break;\n          }\n\n          labelRotation++;\n          labelWidth = cosRotation * originalLabelWidth;\n        }\n      }\n\n      me.labelRotation = labelRotation;\n    },\n    afterCalculateTickRotation: function afterCalculateTickRotation() {\n      helpers$1.callback(this.options.afterCalculateTickRotation, [this]);\n    },\n    //\n    beforeFit: function beforeFit() {\n      helpers$1.callback(this.options.beforeFit, [this]);\n    },\n    fit: function fit() {\n      var me = this; // Reset\n\n      var minSize = me.minSize = {\n        width: 0,\n        height: 0\n      };\n      var labels = labelsFromTicks(me._ticks);\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var scaleLabelOpts = opts.scaleLabel;\n      var gridLineOpts = opts.gridLines;\n\n      var display = me._isVisible();\n\n      var position = opts.position;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var tickFont = parseFont(tickOpts);\n      var tickMarkLength = opts.gridLines.tickMarkLength; // Width\n\n      if (isHorizontal) {\n        // subtract the margins to line up with the chartArea if we are a full width scale\n        minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n      } else {\n        minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } // height\n\n\n      if (isHorizontal) {\n        minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } else {\n        minSize.height = me.maxHeight; // fill all the height\n      } // Are we showing a title for the scale?\n\n\n      if (scaleLabelOpts.display && display) {\n        var scaleLabelFont = parseFont(scaleLabelOpts);\n        var scaleLabelPadding = helpers$1.options.toPadding(scaleLabelOpts.padding);\n        var deltaHeight = scaleLabelFont.lineHeight + scaleLabelPadding.height;\n\n        if (isHorizontal) {\n          minSize.height += deltaHeight;\n        } else {\n          minSize.width += deltaHeight;\n        }\n      } // Don't bother fitting the ticks if we are not showing the labels\n\n\n      if (tickOpts.display && display) {\n        var largestTextWidth = helpers$1.longestText(me.ctx, tickFont.string, labels, me.longestTextCache);\n        var tallestLabelHeightInLines = helpers$1.numberOfLabelLines(labels);\n        var lineSpace = tickFont.size * 0.5;\n        var tickPadding = me.options.ticks.padding; // Store max number of lines and widest label for _autoSkip\n\n        me._maxLabelLines = tallestLabelHeightInLines;\n        me.longestLabelWidth = largestTextWidth;\n\n        if (isHorizontal) {\n          var angleRadians = helpers$1.toRadians(me.labelRotation);\n          var cosRotation = Math.cos(angleRadians);\n          var sinRotation = Math.sin(angleRadians); // TODO - improve this calculation\n\n          var labelHeight = sinRotation * largestTextWidth + tickFont.lineHeight * tallestLabelHeightInLines + lineSpace; // padding\n\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n          me.ctx.font = tickFont.string;\n          var firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.string);\n          var lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.string);\n          var offsetLeft = me.getPixelForTick(0) - me.left;\n          var offsetRight = me.right - me.getPixelForTick(labels.length - 1);\n          var paddingLeft, paddingRight; // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n          // which means that the right padding is dominated by the font height\n\n          if (me.labelRotation !== 0) {\n            paddingLeft = position === 'bottom' ? cosRotation * firstLabelWidth : cosRotation * lineSpace;\n            paddingRight = position === 'bottom' ? cosRotation * lineSpace : cosRotation * lastLabelWidth;\n          } else {\n            paddingLeft = firstLabelWidth / 2;\n            paddingRight = lastLabelWidth / 2;\n          }\n\n          me.paddingLeft = Math.max(paddingLeft - offsetLeft, 0) + 3; // add 3 px to move away from canvas edges\n\n          me.paddingRight = Math.max(paddingRight - offsetRight, 0) + 3;\n        } else {\n          // A vertical axis is more constrained by the width. Labels are the\n          // dominant factor here, so get that length first and account for padding\n          if (tickOpts.mirror) {\n            largestTextWidth = 0;\n          } else {\n            // use lineSpace for consistency with horizontal axis\n            // tickPadding is not implemented for horizontal\n            largestTextWidth += tickPadding + lineSpace;\n          }\n\n          minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n          me.paddingTop = tickFont.size / 2;\n          me.paddingBottom = tickFont.size / 2;\n        }\n      }\n\n      me.handleMargins();\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n\n    /**\n     * Handle margins and padding interactions\n     * @private\n     */\n    handleMargins: function handleMargins() {\n      var me = this;\n\n      if (me.margins) {\n        me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n        me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n        me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n        me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n      }\n    },\n    afterFit: function afterFit() {\n      helpers$1.callback(this.options.afterFit, [this]);\n    },\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    isFullWidth: function isFullWidth() {\n      return this.options.fullWidth;\n    },\n    // Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n    getRightValue: function getRightValue(rawValue) {\n      // Null and undefined values first\n      if (helpers$1.isNullOrUndef(rawValue)) {\n        return NaN;\n      } // isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\n\n      if ((typeof rawValue === 'number' || rawValue instanceof Number) && !isFinite(rawValue)) {\n        return NaN;\n      } // If it is in fact an object, dive in one more level\n\n\n      if (rawValue) {\n        if (this.isHorizontal()) {\n          if (rawValue.x !== undefined) {\n            return this.getRightValue(rawValue.x);\n          }\n        } else if (rawValue.y !== undefined) {\n          return this.getRightValue(rawValue.y);\n        }\n      } // Value is good, return it\n\n\n      return rawValue;\n    },\n\n    /**\n     * Used to get the value to display in the tooltip for the data at the given index\n     * @param index\n     * @param datasetIndex\n     */\n    getLabelForIndex: helpers$1.noop,\n\n    /**\n     * Returns the location of the given data point. Value can either be an index or a numerical value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param value\n     * @param index\n     * @param datasetIndex\n     */\n    getPixelForValue: helpers$1.noop,\n\n    /**\n     * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param pixel\n     */\n    getValueForPixel: helpers$1.noop,\n\n    /**\n     * Returns the location of the tick at the given index\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForTick: function getPixelForTick(index) {\n      var me = this;\n      var offset = me.options.offset;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var tickWidth = innerWidth / Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n        var pixel = tickWidth * index + me.paddingLeft;\n\n        if (offset) {\n          pixel += tickWidth / 2;\n        }\n\n        var finalVal = me.left + pixel;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      var innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n      return me.top + index * (innerHeight / (me._ticks.length - 1));\n    },\n\n    /**\n     * Utility for getting the pixel location of a percentage of scale\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForDecimal: function getPixelForDecimal(decimal) {\n      var me = this;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var valueOffset = innerWidth * decimal + me.paddingLeft;\n        var finalVal = me.left + valueOffset;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      return me.top + decimal * me.height;\n    },\n\n    /**\n     * Returns the pixel for the minimum chart value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getBasePixel: function getBasePixel() {\n      return this.getPixelForValue(this.getBaseValue());\n    },\n    getBaseValue: function getBaseValue() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    },\n\n    /**\n     * Returns a subset of ticks to be plotted to avoid overlapping labels.\n     * @private\n     */\n    _autoSkip: function _autoSkip(ticks) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor;\n      var tickCount = ticks.length;\n      var skipRatio = false;\n      var maxTicks = optionTicks.maxTicksLimit; // Total space needed to display all ticks. First and last ticks are\n      // drawn as their center at end of axis, so tickCount-1\n\n      var ticksLength = me._tickSize() * (tickCount - 1); // Axis length\n\n      var axisLength = isHorizontal ? me.width - (me.paddingLeft + me.paddingRight) : me.height - (me.paddingTop + me.PaddingBottom);\n      var result = [];\n      var i, tick;\n\n      if (ticksLength > axisLength) {\n        skipRatio = 1 + Math.floor(ticksLength / axisLength);\n      } // if they defined a max number of optionTicks,\n      // increase skipRatio until that number is met\n\n\n      if (tickCount > maxTicks) {\n        skipRatio = Math.max(skipRatio, 1 + Math.floor(tickCount / maxTicks));\n      }\n\n      for (i = 0; i < tickCount; i++) {\n        tick = ticks[i];\n\n        if (skipRatio > 1 && i % skipRatio > 0) {\n          // leave tick in place but make sure it's not displayed (#4635)\n          delete tick.label;\n        }\n\n        result.push(tick);\n      }\n\n      return result;\n    },\n\n    /**\n     * @private\n     */\n    _tickSize: function _tickSize() {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor; // Calculate space needed by label in axis direction.\n\n      var rot = helpers$1.toRadians(me.labelRotation);\n      var cos = Math.abs(Math.cos(rot));\n      var sin = Math.abs(Math.sin(rot));\n      var padding = optionTicks.autoSkipPadding || 0;\n      var w = me.longestLabelWidth + padding || 0;\n\n      var tickFont = helpers$1.options._parseFont(optionTicks);\n\n      var h = me._maxLabelLines * tickFont.lineHeight + padding || 0; // Calculate space needed for 1 tick in axis direction.\n\n      return isHorizontal ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    },\n\n    /**\n     * @private\n     */\n    _isVisible: function _isVisible() {\n      var me = this;\n      var chart = me.chart;\n      var display = me.options.display;\n      var i, ilen, meta;\n\n      if (display !== 'auto') {\n        return !!display;\n      } // When 'auto', the scale is visible if at least one associated dataset is visible.\n\n\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n\n          if (meta.xAxisID === me.id || meta.yAxisID === me.id) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Actually draw the scale on the canvas\n     * @param {object} chartArea - the area of the chart to draw full grid lines on\n     */\n    draw: function draw(chartArea) {\n      var me = this;\n      var options = me.options;\n\n      if (!me._isVisible()) {\n        return;\n      }\n\n      var chart = me.chart;\n      var context = me.ctx;\n      var globalDefaults = core_defaults.global;\n      var defaultFontColor = globalDefaults.defaultFontColor;\n      var optionTicks = options.ticks.minor;\n      var optionMajorTicks = options.ticks.major || optionTicks;\n      var gridLines = options.gridLines;\n      var scaleLabel = options.scaleLabel;\n      var position = options.position;\n      var isRotated = me.labelRotation !== 0;\n      var isMirrored = optionTicks.mirror;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var ticks = optionTicks.display && optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n      var tickFontColor = valueOrDefault$9(optionTicks.fontColor, defaultFontColor);\n      var tickFont = parseFont(optionTicks);\n      var lineHeight = tickFont.lineHeight;\n      var majorTickFontColor = valueOrDefault$9(optionMajorTicks.fontColor, defaultFontColor);\n      var majorTickFont = parseFont(optionMajorTicks);\n      var tickPadding = optionTicks.padding;\n      var labelOffset = optionTicks.labelOffset;\n      var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n      var scaleLabelFontColor = valueOrDefault$9(scaleLabel.fontColor, defaultFontColor);\n      var scaleLabelFont = parseFont(scaleLabel);\n      var scaleLabelPadding = helpers$1.options.toPadding(scaleLabel.padding);\n      var labelRotationRadians = helpers$1.toRadians(me.labelRotation);\n      var itemsToDraw = [];\n      var axisWidth = gridLines.drawBorder ? valueAtIndexOrDefault(gridLines.lineWidth, 0, 0) : 0;\n      var alignPixel = helpers$1._alignPixel;\n      var borderValue, tickStart, tickEnd;\n\n      if (position === 'top') {\n        borderValue = alignPixel(chart, me.bottom, axisWidth);\n        tickStart = me.bottom - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else if (position === 'bottom') {\n        borderValue = alignPixel(chart, me.top, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.top + tl;\n      } else if (position === 'left') {\n        borderValue = alignPixel(chart, me.right, axisWidth);\n        tickStart = me.right - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else {\n        borderValue = alignPixel(chart, me.left, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.left + tl;\n      }\n\n      var epsilon = 0.0000001; // 0.0000001 is margin in pixels for Accumulated error.\n\n      helpers$1.each(ticks, function (tick, index) {\n        // autoskipper skipped this tick (#4635)\n        if (helpers$1.isNullOrUndef(tick.label)) {\n          return;\n        }\n\n        var label = tick.label;\n        var lineWidth, lineColor, borderDash, borderDashOffset;\n\n        if (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n          // Draw the first index specially\n          lineWidth = gridLines.zeroLineWidth;\n          lineColor = gridLines.zeroLineColor;\n          borderDash = gridLines.zeroLineBorderDash || [];\n          borderDashOffset = gridLines.zeroLineBorderDashOffset || 0.0;\n        } else {\n          lineWidth = valueAtIndexOrDefault(gridLines.lineWidth, index);\n          lineColor = valueAtIndexOrDefault(gridLines.color, index);\n          borderDash = gridLines.borderDash || [];\n          borderDashOffset = gridLines.borderDashOffset || 0.0;\n        } // Common properties\n\n\n        var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY, textOffset, textAlign;\n        var labelCount = helpers$1.isArray(label) ? label.length : 1;\n        var lineValue = getPixelForGridLine(me, index, gridLines.offsetGridLines);\n\n        if (isHorizontal) {\n          var labelYOffset = tl + tickPadding;\n\n          if (lineValue < me.left - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tx2 = x1 = x2 = alignPixel(chart, lineValue, lineWidth);\n          ty1 = tickStart;\n          ty2 = tickEnd;\n          labelX = me.getPixelForTick(index) + labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n          if (position === 'top') {\n            y1 = alignPixel(chart, chartArea.top, axisWidth) + axisWidth / 2;\n            y2 = chartArea.bottom;\n            textOffset = ((!isRotated ? 0.5 : 1) - labelCount) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'left';\n            labelY = me.bottom - labelYOffset;\n          } else {\n            y1 = chartArea.top;\n            y2 = alignPixel(chart, chartArea.bottom, axisWidth) - axisWidth / 2;\n            textOffset = (!isRotated ? 0.5 : 0) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'right';\n            labelY = me.top + labelYOffset;\n          }\n        } else {\n          var labelXOffset = (isMirrored ? 0 : tl) + tickPadding;\n\n          if (lineValue < me.top - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tickStart;\n          tx2 = tickEnd;\n          ty1 = ty2 = y1 = y2 = alignPixel(chart, lineValue, lineWidth);\n          labelY = me.getPixelForTick(index) + labelOffset;\n          textOffset = (1 - labelCount) * lineHeight / 2;\n\n          if (position === 'left') {\n            x1 = alignPixel(chart, chartArea.left, axisWidth) + axisWidth / 2;\n            x2 = chartArea.right;\n            textAlign = isMirrored ? 'left' : 'right';\n            labelX = me.right - labelXOffset;\n          } else {\n            x1 = chartArea.left;\n            x2 = alignPixel(chart, chartArea.right, axisWidth) - axisWidth / 2;\n            textAlign = isMirrored ? 'right' : 'left';\n            labelX = me.left + labelXOffset;\n          }\n        }\n\n        itemsToDraw.push({\n          tx1: tx1,\n          ty1: ty1,\n          tx2: tx2,\n          ty2: ty2,\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2,\n          labelX: labelX,\n          labelY: labelY,\n          glWidth: lineWidth,\n          glColor: lineColor,\n          glBorderDash: borderDash,\n          glBorderDashOffset: borderDashOffset,\n          rotation: -1 * labelRotationRadians,\n          label: label,\n          major: tick.major,\n          textOffset: textOffset,\n          textAlign: textAlign\n        });\n      }); // Draw all of the tick labels, tick marks, and grid lines at the correct places\n\n      helpers$1.each(itemsToDraw, function (itemToDraw) {\n        var glWidth = itemToDraw.glWidth;\n        var glColor = itemToDraw.glColor;\n\n        if (gridLines.display && glWidth && glColor) {\n          context.save();\n          context.lineWidth = glWidth;\n          context.strokeStyle = glColor;\n\n          if (context.setLineDash) {\n            context.setLineDash(itemToDraw.glBorderDash);\n            context.lineDashOffset = itemToDraw.glBorderDashOffset;\n          }\n\n          context.beginPath();\n\n          if (gridLines.drawTicks) {\n            context.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n            context.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n          }\n\n          if (gridLines.drawOnChartArea) {\n            context.moveTo(itemToDraw.x1, itemToDraw.y1);\n            context.lineTo(itemToDraw.x2, itemToDraw.y2);\n          }\n\n          context.stroke();\n          context.restore();\n        }\n\n        if (optionTicks.display) {\n          // Make sure we draw text in the correct color and font\n          context.save();\n          context.translate(itemToDraw.labelX, itemToDraw.labelY);\n          context.rotate(itemToDraw.rotation);\n          context.font = itemToDraw.major ? majorTickFont.string : tickFont.string;\n          context.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n          context.textBaseline = 'middle';\n          context.textAlign = itemToDraw.textAlign;\n          var label = itemToDraw.label;\n          var y = itemToDraw.textOffset;\n\n          if (helpers$1.isArray(label)) {\n            for (var i = 0; i < label.length; ++i) {\n              // We just make sure the multiline element is a string here..\n              context.fillText('' + label[i], 0, y);\n              y += lineHeight;\n            }\n          } else {\n            context.fillText(label, 0, y);\n          }\n\n          context.restore();\n        }\n      });\n\n      if (scaleLabel.display) {\n        // Draw the scale label\n        var scaleLabelX;\n        var scaleLabelY;\n        var rotation = 0;\n        var halfLineHeight = scaleLabelFont.lineHeight / 2;\n\n        if (isHorizontal) {\n          scaleLabelX = me.left + (me.right - me.left) / 2; // midpoint of the width\n\n          scaleLabelY = position === 'bottom' ? me.bottom - halfLineHeight - scaleLabelPadding.bottom : me.top + halfLineHeight + scaleLabelPadding.top;\n        } else {\n          var isLeft = position === 'left';\n          scaleLabelX = isLeft ? me.left + halfLineHeight + scaleLabelPadding.top : me.right - halfLineHeight - scaleLabelPadding.top;\n          scaleLabelY = me.top + (me.bottom - me.top) / 2;\n          rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n        }\n\n        context.save();\n        context.translate(scaleLabelX, scaleLabelY);\n        context.rotate(rotation);\n        context.textAlign = 'center';\n        context.textBaseline = 'middle';\n        context.fillStyle = scaleLabelFontColor; // render in correct colour\n\n        context.font = scaleLabelFont.string;\n        context.fillText(scaleLabel.labelString, 0, 0);\n        context.restore();\n      }\n\n      if (axisWidth) {\n        // Draw the line at the edge of the axis\n        var firstLineWidth = axisWidth;\n        var lastLineWidth = valueAtIndexOrDefault(gridLines.lineWidth, ticks.length - 1, 0);\n        var x1, x2, y1, y2;\n\n        if (isHorizontal) {\n          x1 = alignPixel(chart, me.left, firstLineWidth) - firstLineWidth / 2;\n          x2 = alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n          y1 = y2 = borderValue;\n        } else {\n          y1 = alignPixel(chart, me.top, firstLineWidth) - firstLineWidth / 2;\n          y2 = alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n          x1 = x2 = borderValue;\n        }\n\n        context.lineWidth = axisWidth;\n        context.strokeStyle = valueAtIndexOrDefault(gridLines.color, 0);\n        context.beginPath();\n        context.moveTo(x1, y1);\n        context.lineTo(x2, y2);\n        context.stroke();\n      }\n    }\n  });\n  var defaultConfig = {\n    position: 'bottom'\n  };\n  var scale_category = core_scale.extend({\n    /**\n    * Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n    * else fall back to data.labels\n    * @private\n    */\n    getLabels: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var labels = me.getLabels();\n      me.minIndex = 0;\n      me.maxIndex = labels.length - 1;\n      var findIndex;\n\n      if (me.options.ticks.min !== undefined) {\n        // user specified min value\n        findIndex = labels.indexOf(me.options.ticks.min);\n        me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n      }\n\n      if (me.options.ticks.max !== undefined) {\n        // user specified max value\n        findIndex = labels.indexOf(me.options.ticks.max);\n        me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n      }\n\n      me.min = labels[me.minIndex];\n      me.max = labels[me.maxIndex];\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var labels = me.getLabels(); // If we are viewing some subset of labels, slice the original array\n\n      me.ticks = me.minIndex === 0 && me.maxIndex === labels.length - 1 ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n\n      if (chart.getDatasetMeta(datasetIndex).controller._getValueScaleId() === me.id) {\n        return me.getRightValue(chart.data.datasets[datasetIndex].data[index]);\n      }\n\n      return me.ticks[index - me.minIndex];\n    },\n    // Used to get data value locations.  Value can either be an index or a numerical value\n    getPixelForValue: function getPixelForValue(value, index) {\n      var me = this;\n      var offset = me.options.offset; // 1 is added because we need the length but we have the indexes\n\n      var offsetAmt = Math.max(me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1), 1); // If value is a data object, then index is the index in the data array,\n      // not the index of the scale. We need to change that.\n\n      var valueCategory;\n\n      if (value !== undefined && value !== null) {\n        valueCategory = me.isHorizontal() ? value.x : value.y;\n      }\n\n      if (valueCategory !== undefined || value !== undefined && isNaN(index)) {\n        var labels = me.getLabels();\n        value = valueCategory || value;\n        var idx = labels.indexOf(value);\n        index = idx !== -1 ? idx : index;\n      }\n\n      if (me.isHorizontal()) {\n        var valueWidth = me.width / offsetAmt;\n        var widthOffset = valueWidth * (index - me.minIndex);\n\n        if (offset) {\n          widthOffset += valueWidth / 2;\n        }\n\n        return me.left + widthOffset;\n      }\n\n      var valueHeight = me.height / offsetAmt;\n      var heightOffset = valueHeight * (index - me.minIndex);\n\n      if (offset) {\n        heightOffset += valueHeight / 2;\n      }\n\n      return me.top + heightOffset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var offset = me.options.offset;\n      var value;\n      var offsetAmt = Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n      var horz = me.isHorizontal();\n      var valueDimension = (horz ? me.width : me.height) / offsetAmt;\n      pixel -= horz ? me.left : me.top;\n\n      if (offset) {\n        pixel -= valueDimension / 2;\n      }\n\n      if (pixel <= 0) {\n        value = 0;\n      } else {\n        value = Math.round(pixel / valueDimension);\n      }\n\n      return value + me.minIndex;\n    },\n    getBasePixel: function getBasePixel() {\n      return this.bottom;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults = defaultConfig;\n  scale_category._defaults = _defaults;\n  var noop = helpers$1.noop;\n  var isNullOrUndef = helpers$1.isNullOrUndef;\n  /**\n   * Generate a set of linear ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks(generationOptions, dataRange) {\n    var ticks = []; // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n    // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n    // for details.\n\n    var MIN_SPACING = 1e-14;\n    var stepSize = generationOptions.stepSize;\n    var unit = stepSize || 1;\n    var maxNumSpaces = generationOptions.maxTicks - 1;\n    var min = generationOptions.min;\n    var max = generationOptions.max;\n    var precision = generationOptions.precision;\n    var rmin = dataRange.min;\n    var rmax = dataRange.max;\n    var spacing = helpers$1.niceNum((rmax - rmin) / maxNumSpaces / unit) * unit;\n    var factor, niceMin, niceMax, numSpaces; // Beyond MIN_SPACING floating point numbers being to lose precision\n    // such that we can't do the math necessary to generate ticks\n\n    if (spacing < MIN_SPACING && isNullOrUndef(min) && isNullOrUndef(max)) {\n      return [rmin, rmax];\n    }\n\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\n    if (numSpaces > maxNumSpaces) {\n      // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n      spacing = helpers$1.niceNum(numSpaces * spacing / maxNumSpaces / unit) * unit;\n    }\n\n    if (stepSize || isNullOrUndef(precision)) {\n      // If a precision is not specified, calculate factor based on spacing\n      factor = Math.pow(10, helpers$1._decimalPlaces(spacing));\n    } else {\n      // If the user specified a precision, round to that number of decimal places\n      factor = Math.pow(10, precision);\n      spacing = Math.ceil(spacing * factor) / factor;\n    }\n\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing; // If min, max and stepSize is set and they make an evenly spaced scale use it.\n\n    if (stepSize) {\n      // If very close to our whole number, use it.\n      if (!isNullOrUndef(min) && helpers$1.almostWhole(min / spacing, spacing / 1000)) {\n        niceMin = min;\n      }\n\n      if (!isNullOrUndef(max) && helpers$1.almostWhole(max / spacing, spacing / 1000)) {\n        niceMax = max;\n      }\n    }\n\n    numSpaces = (niceMax - niceMin) / spacing; // If very close to our rounded value, use it.\n\n    if (helpers$1.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    ticks.push(isNullOrUndef(min) ? niceMin : min);\n\n    for (var j = 1; j < numSpaces; ++j) {\n      ticks.push(Math.round((niceMin + j * spacing) * factor) / factor);\n    }\n\n    ticks.push(isNullOrUndef(max) ? niceMax : max);\n    return ticks;\n  }\n\n  var scale_linearbase = core_scale.extend({\n    getRightValue: function getRightValue(value) {\n      if (typeof value === 'string') {\n        return +value;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, value);\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n      // do nothing since that would make the chart weird. If the user really wants a weird chart\n      // axis, they can manually override it\n\n      if (tickOpts.beginAtZero) {\n        var minSign = helpers$1.sign(me.min);\n        var maxSign = helpers$1.sign(me.max);\n\n        if (minSign < 0 && maxSign < 0) {\n          // move the top up to 0\n          me.max = 0;\n        } else if (minSign > 0 && maxSign > 0) {\n          // move the bottom down to 0\n          me.min = 0;\n        }\n      }\n\n      var setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n      var setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n      if (tickOpts.min !== undefined) {\n        me.min = tickOpts.min;\n      } else if (tickOpts.suggestedMin !== undefined) {\n        if (me.min === null) {\n          me.min = tickOpts.suggestedMin;\n        } else {\n          me.min = Math.min(me.min, tickOpts.suggestedMin);\n        }\n      }\n\n      if (tickOpts.max !== undefined) {\n        me.max = tickOpts.max;\n      } else if (tickOpts.suggestedMax !== undefined) {\n        if (me.max === null) {\n          me.max = tickOpts.suggestedMax;\n        } else {\n          me.max = Math.max(me.max, tickOpts.suggestedMax);\n        }\n      }\n\n      if (setMin !== setMax) {\n        // We set the min or the max but not both.\n        // So ensure that our range is good\n        // Inverted or 0 length range can happen when\n        // ticks.min is set, and no datasets are visible\n        if (me.min >= me.max) {\n          if (setMin) {\n            me.max = me.min + 1;\n          } else {\n            me.min = me.max - 1;\n          }\n        }\n      }\n\n      if (me.min === me.max) {\n        me.max++;\n\n        if (!tickOpts.beginAtZero) {\n          me.min--;\n        }\n      }\n    },\n    getTickLimit: function getTickLimit() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var stepSize = tickOpts.stepSize;\n      var maxTicksLimit = tickOpts.maxTicksLimit;\n      var maxTicks;\n\n      if (stepSize) {\n        maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n      } else {\n        maxTicks = me._computeTickLimit();\n        maxTicksLimit = maxTicksLimit || 11;\n      }\n\n      if (maxTicksLimit) {\n        maxTicks = Math.min(maxTicksLimit, maxTicks);\n      }\n\n      return maxTicks;\n    },\n    _computeTickLimit: function _computeTickLimit() {\n      return Number.POSITIVE_INFINITY;\n    },\n    handleDirectionalChanges: noop,\n    buildTicks: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // Figure out what the max number of ticks we can support it is based on the size of\n      // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n      // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n      // the graph. Make sure we always have at least 2 ticks\n\n      var maxTicks = me.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        min: tickOpts.min,\n        max: tickOpts.max,\n        precision: tickOpts.precision,\n        stepSize: helpers$1.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n      };\n      var ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n      me.handleDirectionalChanges(); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        ticks.reverse();\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      me.ticksAsNumbers = me.ticks.slice();\n      me.zeroLineIndex = me.ticks.indexOf(0);\n      core_scale.prototype.convertTicksToLabels.call(me);\n    }\n  });\n  var defaultConfig$1 = {\n    position: 'left',\n    ticks: {\n      callback: core_ticks.formatters.linear\n    }\n  };\n  var scale_linear = scale_linearbase.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n      var DEFAULT_MIN = 0;\n      var DEFAULT_MAX = 1;\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // First Calculate the range\n\n\n      me.min = null;\n      me.max = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (valuesPerStack[key] === undefined) {\n            valuesPerStack[key] = {\n              positiveValues: [],\n              negativeValues: []\n            };\n          } // Store these per type\n\n\n          var positiveValues = valuesPerStack[key].positiveValues;\n          var negativeValues = valuesPerStack[key].negativeValues;\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              positiveValues[index] = positiveValues[index] || 0;\n              negativeValues[index] = negativeValues[index] || 0;\n\n              if (opts.relativePoints) {\n                positiveValues[index] = 100;\n              } else if (value < 0) {\n                negativeValues[index] += value;\n              } else {\n                positiveValues[index] += value;\n              }\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n          var minVal = helpers$1.min(values);\n          var maxVal = helpers$1.max(values);\n          me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n          me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n            });\n          }\n        });\n      }\n\n      me.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n      me.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      this.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      var me = this;\n      var tickFont;\n\n      if (me.isHorizontal()) {\n        return Math.ceil(me.width / 40);\n      }\n\n      tickFont = helpers$1.options._parseFont(me.options.ticks);\n      return Math.ceil(me.height / tickFont.lineHeight);\n    },\n    // Called after the ticks are built. We need\n    handleDirectionalChanges: function handleDirectionalChanges() {\n      if (!this.isHorizontal()) {\n        // We are in a vertical orientation. The top value is the highest. So reverse the array\n        this.ticks.reverse();\n      }\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    // Utils\n    getPixelForValue: function getPixelForValue(value) {\n      // This must be called after fit has been run so that\n      // this.left, this.top, this.right, and this.bottom have been defined\n      var me = this;\n      var start = me.start;\n      var rightValue = +me.getRightValue(value);\n      var pixel;\n      var range = me.end - start;\n\n      if (me.isHorizontal()) {\n        pixel = me.left + me.width / range * (rightValue - start);\n      } else {\n        pixel = me.bottom - me.height / range * (rightValue - start);\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var innerDimension = isHorizontal ? me.width : me.height;\n      var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n      return me.start + (me.end - me.start) * offset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticksAsNumbers[index]);\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$1 = defaultConfig$1;\n  scale_linear._defaults = _defaults$1;\n  var valueOrDefault$a = helpers$1.valueOrDefault;\n  /**\n   * Generate a set of logarithmic ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks$1(generationOptions, dataRange) {\n    var ticks = [];\n    var tickVal = valueOrDefault$a(generationOptions.min, Math.pow(10, Math.floor(helpers$1.log10(dataRange.min))));\n    var endExp = Math.floor(helpers$1.log10(dataRange.max));\n    var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n    var exp, significand;\n\n    if (tickVal === 0) {\n      exp = Math.floor(helpers$1.log10(dataRange.minNotZero));\n      significand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n      ticks.push(tickVal);\n      tickVal = significand * Math.pow(10, exp);\n    } else {\n      exp = Math.floor(helpers$1.log10(tickVal));\n      significand = Math.floor(tickVal / Math.pow(10, exp));\n    }\n\n    var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n    do {\n      ticks.push(tickVal);\n      ++significand;\n\n      if (significand === 10) {\n        significand = 1;\n        ++exp;\n        precision = exp >= 0 ? 1 : precision;\n      }\n\n      tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n    } while (exp < endExp || exp === endExp && significand < endSignificand);\n\n    var lastTick = valueOrDefault$a(generationOptions.max, tickVal);\n    ticks.push(lastTick);\n    return ticks;\n  }\n\n  var defaultConfig$2 = {\n    position: 'left',\n    // label settings\n    ticks: {\n      callback: core_ticks.formatters.logarithmic\n    }\n  }; // TODO(v3): change this to positiveOrDefault\n\n  function nonNegativeOrDefault(value, defaultValue) {\n    return helpers$1.isFinite(value) && value >= 0 ? value : defaultValue;\n  }\n\n  var scale_logarithmic = core_scale.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // Calculate Range\n\n\n      me.min = null;\n      me.max = null;\n      me.minNotZero = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            if (valuesPerStack[key] === undefined) {\n              valuesPerStack[key] = [];\n            }\n\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var values = valuesPerStack[key];\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              values[index] = values[index] || 0;\n              values[index] += value;\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          if (valuesForType.length > 0) {\n            var minVal = helpers$1.min(valuesForType);\n            var maxVal = helpers$1.max(valuesForType);\n            me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n            me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n          }\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n\n              if (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n                me.minNotZero = value;\n              }\n            });\n          }\n        });\n      } // Common base implementation to handle ticks.min, ticks.max\n\n\n      this.handleTickRangeOptions();\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var DEFAULT_MIN = 1;\n      var DEFAULT_MAX = 10;\n      me.min = nonNegativeOrDefault(tickOpts.min, me.min);\n      me.max = nonNegativeOrDefault(tickOpts.max, me.max);\n\n      if (me.min === me.max) {\n        if (me.min !== 0 && me.min !== null) {\n          me.min = Math.pow(10, Math.floor(helpers$1.log10(me.min)) - 1);\n          me.max = Math.pow(10, Math.floor(helpers$1.log10(me.max)) + 1);\n        } else {\n          me.min = DEFAULT_MIN;\n          me.max = DEFAULT_MAX;\n        }\n      }\n\n      if (me.min === null) {\n        me.min = Math.pow(10, Math.floor(helpers$1.log10(me.max)) - 1);\n      }\n\n      if (me.max === null) {\n        me.max = me.min !== 0 ? Math.pow(10, Math.floor(helpers$1.log10(me.min)) + 1) : DEFAULT_MAX;\n      }\n\n      if (me.minNotZero === null) {\n        if (me.min > 0) {\n          me.minNotZero = me.min;\n        } else if (me.max < 1) {\n          me.minNotZero = Math.pow(10, Math.floor(helpers$1.log10(me.max)));\n        } else {\n          me.minNotZero = DEFAULT_MIN;\n        }\n      }\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = !me.isHorizontal();\n      var generationOptions = {\n        min: nonNegativeOrDefault(tickOpts.min),\n        max: nonNegativeOrDefault(tickOpts.max)\n      };\n      var ticks = me.ticks = generateTicks$1(generationOptions, me); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        reverse = !reverse;\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n\n      if (reverse) {\n        ticks.reverse();\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      this.tickValues = this.ticks.slice();\n      core_scale.prototype.convertTicksToLabels.call(this);\n    },\n    // Get the correct tooltip label\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.tickValues[index]);\n    },\n\n    /**\n     * Returns the value of the first tick.\n     * @param {number} value - The minimum not zero value.\n     * @return {number} The first tick value.\n     * @private\n     */\n    _getFirstTickValue: function _getFirstTickValue(value) {\n      var exp = Math.floor(helpers$1.log10(value));\n      var significand = Math.floor(value / Math.pow(10, exp));\n      return significand * Math.pow(10, exp);\n    },\n    getPixelForValue: function getPixelForValue(value) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var offset = 0;\n      var innerDimension, pixel, start, end, sign;\n      value = +me.getRightValue(value);\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n        sign = -1;\n      } else {\n        start = me.start;\n        end = me.end;\n        sign = 1;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        pixel = reverse ? me.right : me.left;\n      } else {\n        innerDimension = me.height;\n        sign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\n        pixel = reverse ? me.top : me.bottom;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        if (value !== 0) {\n          offset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n        }\n\n        pixel += sign * offset;\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var innerDimension, start, end, value;\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n      } else {\n        start = me.start;\n        end = me.end;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        value = reverse ? me.right - pixel : pixel - me.left;\n      } else {\n        innerDimension = me.height;\n        value = reverse ? pixel - me.top : me.bottom - pixel;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          var offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          value -= offset;\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        value *= log10(end) - log10(start);\n        value /= innerDimension;\n        value = Math.pow(10, log10(start) + value);\n      }\n\n      return value;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$2 = defaultConfig$2;\n  scale_logarithmic._defaults = _defaults$2;\n  var valueOrDefault$b = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault$1 = helpers$1.valueAtIndexOrDefault;\n  var resolve$7 = helpers$1.options.resolve;\n  var defaultConfig$3 = {\n    display: true,\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n    angleLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    gridLines: {\n      circular: false\n    },\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n      // String - The colour of the label backdrop\n      backdropColor: 'rgba(255,255,255,0.75)',\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPaddingY: 2,\n      // Number - The backdrop padding to the side of the label in pixels\n      backdropPaddingX: 2,\n      callback: core_ticks.formatters.linear\n    },\n    pointLabels: {\n      // Boolean - if true, show point labels\n      display: true,\n      // Number - Point label font size in pixels\n      fontSize: 10,\n      // Function - Used to convert point labels\n      callback: function callback(label) {\n        return label;\n      }\n    }\n  };\n\n  function getValueCount(scale) {\n    var opts = scale.options;\n    return opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n  }\n\n  function getTickBackdropHeight(opts) {\n    var tickOpts = opts.ticks;\n\n    if (tickOpts.display && opts.display) {\n      return valueOrDefault$b(tickOpts.fontSize, core_defaults.global.defaultFontSize) + tickOpts.backdropPaddingY * 2;\n    }\n\n    return 0;\n  }\n\n  function measureLabelSize(ctx, lineHeight, label) {\n    if (helpers$1.isArray(label)) {\n      return {\n        w: helpers$1.longestText(ctx, ctx.font, label),\n        h: label.length * lineHeight\n      };\n    }\n\n    return {\n      w: ctx.measureText(label).width,\n      h: lineHeight\n    };\n  }\n\n  function determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n      return {\n        start: pos - size / 2,\n        end: pos + size / 2\n      };\n    } else if (angle < min || angle > max) {\n      return {\n        start: pos - size,\n        end: pos\n      };\n    }\n\n    return {\n      start: pos,\n      end: pos + size\n    };\n  }\n  /**\n   * Helper function to fit a radial linear scale with point labels\n   */\n\n\n  function fitWithPointLabels(scale) {\n    // Right, this is really confusing and there is a lot of maths going on here\n    // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n    //\n    // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n    //\n    // Solution:\n    //\n    // We assume the radius of the polygon is half the size of the canvas at first\n    // at each index we check if the text overlaps.\n    //\n    // Where it does, we store that angle and that index.\n    //\n    // After finding the largest index and angle we calculate how much we need to remove\n    // from the shape radius to move the point inwards by that x.\n    //\n    // We average the left and right distances to get the maximum shape radius that can fit in the box\n    // along with labels.\n    //\n    // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n    // on each side, removing that from the size, halving it and adding the left x protrusion width.\n    //\n    // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n    // and position it in the most space efficient manner\n    //\n    // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n    var plFont = helpers$1.options._parseFont(scale.options.pointLabels); // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n    // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\n\n    var furthestLimits = {\n      l: 0,\n      r: scale.width,\n      t: 0,\n      b: scale.height - scale.paddingTop\n    };\n    var furthestAngles = {};\n    var i, textSize, pointPosition;\n    scale.ctx.font = plFont.string;\n    scale._pointLabelSizes = [];\n    var valueCount = getValueCount(scale);\n\n    for (i = 0; i < valueCount; i++) {\n      pointPosition = scale.getPointPosition(i, scale.drawingArea + 5);\n      textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale.pointLabels[i] || '');\n      scale._pointLabelSizes[i] = textSize; // Add quarter circle to make degree 0 mean top of circle\n\n      var angleRadians = scale.getIndexAngle(i);\n      var angle = helpers$1.toDegrees(angleRadians) % 360;\n      var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n      var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n      if (hLimits.start < furthestLimits.l) {\n        furthestLimits.l = hLimits.start;\n        furthestAngles.l = angleRadians;\n      }\n\n      if (hLimits.end > furthestLimits.r) {\n        furthestLimits.r = hLimits.end;\n        furthestAngles.r = angleRadians;\n      }\n\n      if (vLimits.start < furthestLimits.t) {\n        furthestLimits.t = vLimits.start;\n        furthestAngles.t = angleRadians;\n      }\n\n      if (vLimits.end > furthestLimits.b) {\n        furthestLimits.b = vLimits.end;\n        furthestAngles.b = angleRadians;\n      }\n    }\n\n    scale.setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  }\n\n  function getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n      return 'center';\n    } else if (angle < 180) {\n      return 'left';\n    }\n\n    return 'right';\n  }\n\n  function fillText(ctx, text, position, lineHeight) {\n    var y = position.y + lineHeight / 2;\n    var i, ilen;\n\n    if (helpers$1.isArray(text)) {\n      for (i = 0, ilen = text.length; i < ilen; ++i) {\n        ctx.fillText(text[i], position.x, y);\n        y += lineHeight;\n      }\n    } else {\n      ctx.fillText(text, position.x, y);\n    }\n  }\n\n  function adjustPointPositionForLabelHeight(angle, textSize, position) {\n    if (angle === 90 || angle === 270) {\n      position.y -= textSize.h / 2;\n    } else if (angle > 270 || angle < 90) {\n      position.y -= textSize.h;\n    }\n  }\n\n  function drawPointLabels(scale) {\n    var ctx = scale.ctx;\n    var opts = scale.options;\n    var angleLineOpts = opts.angleLines;\n    var gridLineOpts = opts.gridLines;\n    var pointLabelOpts = opts.pointLabels;\n    var lineWidth = valueOrDefault$b(angleLineOpts.lineWidth, gridLineOpts.lineWidth);\n    var lineColor = valueOrDefault$b(angleLineOpts.color, gridLineOpts.color);\n    var tickBackdropHeight = getTickBackdropHeight(opts);\n    ctx.save();\n    ctx.lineWidth = lineWidth;\n    ctx.strokeStyle = lineColor;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(resolve$7([angleLineOpts.borderDash, gridLineOpts.borderDash, []]));\n      ctx.lineDashOffset = resolve$7([angleLineOpts.borderDashOffset, gridLineOpts.borderDashOffset, 0.0]);\n    }\n\n    var outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max); // Point Label Font\n\n    var plFont = helpers$1.options._parseFont(pointLabelOpts);\n\n    ctx.font = plFont.string;\n    ctx.textBaseline = 'middle';\n\n    for (var i = getValueCount(scale) - 1; i >= 0; i--) {\n      if (angleLineOpts.display && lineWidth && lineColor) {\n        var outerPosition = scale.getPointPosition(i, outerDistance);\n        ctx.beginPath();\n        ctx.moveTo(scale.xCenter, scale.yCenter);\n        ctx.lineTo(outerPosition.x, outerPosition.y);\n        ctx.stroke();\n      }\n\n      if (pointLabelOpts.display) {\n        // Extra pixels out for some label spacing\n        var extra = i === 0 ? tickBackdropHeight / 2 : 0;\n        var pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + 5); // Keep this in loop since we may support array properties here\n\n        var pointLabelFontColor = valueAtIndexOrDefault$1(pointLabelOpts.fontColor, i, core_defaults.global.defaultFontColor);\n        ctx.fillStyle = pointLabelFontColor;\n        var angleRadians = scale.getIndexAngle(i);\n        var angle = helpers$1.toDegrees(angleRadians);\n        ctx.textAlign = getTextAlignForAngle(angle);\n        adjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n        fillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.lineHeight);\n      }\n    }\n\n    ctx.restore();\n  }\n\n  function drawRadiusLine(scale, gridLineOpts, radius, index) {\n    var ctx = scale.ctx;\n    var circular = gridLineOpts.circular;\n    var valueCount = getValueCount(scale);\n    var lineColor = valueAtIndexOrDefault$1(gridLineOpts.color, index - 1);\n    var lineWidth = valueAtIndexOrDefault$1(gridLineOpts.lineWidth, index - 1);\n    var pointPosition;\n\n    if (!circular && !valueCount || !lineColor || !lineWidth) {\n      return;\n    }\n\n    ctx.save();\n    ctx.strokeStyle = lineColor;\n    ctx.lineWidth = lineWidth;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(gridLineOpts.borderDash || []);\n      ctx.lineDashOffset = gridLineOpts.borderDashOffset || 0.0;\n    }\n\n    ctx.beginPath();\n\n    if (circular) {\n      // Draw circular arcs between the points\n      ctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n    } else {\n      // Draw straight lines connecting each index\n      pointPosition = scale.getPointPosition(0, radius);\n      ctx.moveTo(pointPosition.x, pointPosition.y);\n\n      for (var i = 1; i < valueCount; i++) {\n        pointPosition = scale.getPointPosition(i, radius);\n        ctx.lineTo(pointPosition.x, pointPosition.y);\n      }\n    }\n\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  function numberOrZero(param) {\n    return helpers$1.isNumber(param) ? param : 0;\n  }\n\n  var scale_radialLinear = scale_linearbase.extend({\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      me.width = me.maxWidth;\n      me.height = me.maxHeight;\n      me.paddingTop = getTickBackdropHeight(me.options) / 2;\n      me.xCenter = Math.floor(me.width / 2);\n      me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n      me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n      helpers$1.each(chart.data.datasets, function (dataset, datasetIndex) {\n        if (chart.isDatasetVisible(datasetIndex)) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          helpers$1.each(dataset.data, function (rawValue, index) {\n            var value = +me.getRightValue(rawValue);\n\n            if (isNaN(value) || meta.data[index].hidden) {\n              return;\n            }\n\n            min = Math.min(value, min);\n            max = Math.max(value, max);\n          });\n        }\n      });\n      me.min = min === Number.POSITIVE_INFINITY ? 0 : min;\n      me.max = max === Number.NEGATIVE_INFINITY ? 0 : max; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      me.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      scale_linearbase.prototype.convertTicksToLabels.call(me); // Point labels\n\n      me.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n\n      if (opts.display && opts.pointLabels.display) {\n        fitWithPointLabels(me);\n      } else {\n        me.setCenterPoint(0, 0, 0, 0);\n      }\n    },\n\n    /**\n     * Set radius reductions and determine new radius and center point\n     * @private\n     */\n    setReductions: function setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n      var me = this;\n      var radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n      var radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n      var radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n      var radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n      radiusReductionLeft = numberOrZero(radiusReductionLeft);\n      radiusReductionRight = numberOrZero(radiusReductionRight);\n      radiusReductionTop = numberOrZero(radiusReductionTop);\n      radiusReductionBottom = numberOrZero(radiusReductionBottom);\n      me.drawingArea = Math.min(Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n      me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n    },\n    setCenterPoint: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      var me = this;\n      var maxRight = me.width - rightMovement - me.drawingArea;\n      var maxLeft = leftMovement + me.drawingArea;\n      var maxTop = topMovement + me.drawingArea;\n      var maxBottom = me.height - me.paddingTop - bottomMovement - me.drawingArea;\n      me.xCenter = Math.floor((maxLeft + maxRight) / 2 + me.left);\n      me.yCenter = Math.floor((maxTop + maxBottom) / 2 + me.top + me.paddingTop);\n    },\n    getIndexAngle: function getIndexAngle(index) {\n      var angleMultiplier = Math.PI * 2 / getValueCount(this);\n      var startAngle = this.chart.options && this.chart.options.startAngle ? this.chart.options.startAngle : 0;\n      var startAngleRadians = startAngle * Math.PI * 2 / 360; // Start from the top instead of right, so remove a quarter of the circle\n\n      return index * angleMultiplier + startAngleRadians;\n    },\n    getDistanceFromCenterForValue: function getDistanceFromCenterForValue(value) {\n      var me = this;\n\n      if (value === null) {\n        return 0; // null always in center\n      } // Take into account half font size + the yPadding of the top value\n\n\n      var scalingFactor = me.drawingArea / (me.max - me.min);\n\n      if (me.options.ticks.reverse) {\n        return (me.max - value) * scalingFactor;\n      }\n\n      return (value - me.min) * scalingFactor;\n    },\n    getPointPosition: function getPointPosition(index, distanceFromCenter) {\n      var me = this;\n      var thisAngle = me.getIndexAngle(index) - Math.PI / 2;\n      return {\n        x: Math.cos(thisAngle) * distanceFromCenter + me.xCenter,\n        y: Math.sin(thisAngle) * distanceFromCenter + me.yCenter\n      };\n    },\n    getPointPositionForValue: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    },\n    getBasePosition: function getBasePosition() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.getPointPositionForValue(0, me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0);\n    },\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var gridLineOpts = opts.gridLines;\n      var tickOpts = opts.ticks;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var startAngle = this.getIndexAngle(0);\n\n        var tickFont = helpers$1.options._parseFont(tickOpts);\n\n        if (opts.angleLines.display || opts.pointLabels.display) {\n          drawPointLabels(me);\n        }\n\n        helpers$1.each(me.ticks, function (label, index) {\n          // Don't draw a centre value (if it is minimum)\n          if (index > 0 || tickOpts.reverse) {\n            var yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]); // Draw circular lines around the scale\n\n            if (gridLineOpts.display && index !== 0) {\n              drawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n            }\n\n            if (tickOpts.display) {\n              var tickFontColor = valueOrDefault$b(tickOpts.fontColor, core_defaults.global.defaultFontColor);\n              ctx.font = tickFont.string;\n              ctx.save();\n              ctx.translate(me.xCenter, me.yCenter);\n              ctx.rotate(startAngle);\n\n              if (tickOpts.showLabelBackdrop) {\n                var labelWidth = ctx.measureText(label).width;\n                ctx.fillStyle = tickOpts.backdropColor;\n                ctx.fillRect(-labelWidth / 2 - tickOpts.backdropPaddingX, -yCenterOffset - tickFont.size / 2 - tickOpts.backdropPaddingY, labelWidth + tickOpts.backdropPaddingX * 2, tickFont.size + tickOpts.backdropPaddingY * 2);\n              }\n\n              ctx.textAlign = 'center';\n              ctx.textBaseline = 'middle';\n              ctx.fillStyle = tickFontColor;\n              ctx.fillText(label, 0, -yCenterOffset);\n              ctx.restore();\n            }\n          }\n        });\n      }\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$3 = defaultConfig$3;\n  scale_radialLinear._defaults = _defaults$3;\n  var valueOrDefault$c = helpers$1.valueOrDefault; // Integer constants are from the ES6 spec.\n\n  var MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\n  var MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n  var INTERVALS = {\n    millisecond: {\n      common: true,\n      size: 1,\n      steps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n    },\n    second: {\n      common: true,\n      size: 1000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    minute: {\n      common: true,\n      size: 60000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    hour: {\n      common: true,\n      size: 3600000,\n      steps: [1, 2, 3, 6, 12]\n    },\n    day: {\n      common: true,\n      size: 86400000,\n      steps: [1, 2, 5]\n    },\n    week: {\n      common: false,\n      size: 604800000,\n      steps: [1, 2, 3, 4]\n    },\n    month: {\n      common: true,\n      size: 2.628e9,\n      steps: [1, 2, 3]\n    },\n    quarter: {\n      common: false,\n      size: 7.884e9,\n      steps: [1, 2, 3, 4]\n    },\n    year: {\n      common: true,\n      size: 3.154e10\n    }\n  };\n  var UNITS = Object.keys(INTERVALS);\n\n  function sorter(a, b) {\n    return a - b;\n  }\n\n  function arrayUnique(items) {\n    var hash = {};\n    var out = [];\n    var i, ilen, item;\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n\n      if (!hash[item]) {\n        hash[item] = true;\n        out.push(item);\n      }\n    }\n\n    return out;\n  }\n  /**\n   * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n   * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n   * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n   * extremity (left + width or top + height). Note that it would be more optimized to directly\n   * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n   * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n   *\n   * @param {number[]} timestamps - timestamps sorted from lowest to highest.\n   * @param {string} distribution - If 'linear', timestamps will be spread linearly along the min\n   * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n   * If 'series', timestamps will be positioned at the same distance from each other. In this\n   * case, only timestamps that break the time linearity are registered, meaning that in the\n   * best case, all timestamps are linear, the table contains only min and max.\n   */\n\n\n  function buildLookupTable(timestamps, min, max, distribution) {\n    if (distribution === 'linear' || !timestamps.length) {\n      return [{\n        time: min,\n        pos: 0\n      }, {\n        time: max,\n        pos: 1\n      }];\n    }\n\n    var table = [];\n    var items = [min];\n    var i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n\n      if (curr > min && curr < max) {\n        items.push(curr);\n      }\n    }\n\n    items.push(max);\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i]; // only add points that breaks the scale linearity\n\n      if (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n        table.push({\n          time: curr,\n          pos: i / (ilen - 1)\n        });\n      }\n    }\n\n    return table;\n  } // @see adapted from https://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\n\n\n  function lookup(table, key, value) {\n    var lo = 0;\n    var hi = table.length - 1;\n    var mid, i0, i1;\n\n    while (lo >= 0 && lo <= hi) {\n      mid = lo + hi >> 1;\n      i0 = table[mid - 1] || null;\n      i1 = table[mid];\n\n      if (!i0) {\n        // given value is outside table (before first item)\n        return {\n          lo: null,\n          hi: i1\n        };\n      } else if (i1[key] < value) {\n        lo = mid + 1;\n      } else if (i0[key] > value) {\n        hi = mid - 1;\n      } else {\n        return {\n          lo: i0,\n          hi: i1\n        };\n      }\n    } // given value is outside table (after last item)\n\n\n    return {\n      lo: i1,\n      hi: null\n    };\n  }\n  /**\n   * Linearly interpolates the given source `value` using the table items `skey` values and\n   * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n   * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n   * index [0, 1] or [n - 1, n] are used for the interpolation.\n   */\n\n\n  function interpolate$1(table, skey, sval, tkey) {\n    var range = lookup(table, skey, sval); // Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\n    var prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n    var next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n    var span = next[skey] - prev[skey];\n    var ratio = span ? (sval - prev[skey]) / span : 0;\n    var offset = (next[tkey] - prev[tkey]) * ratio;\n    return prev[tkey] + offset;\n  }\n\n  function toTimestamp(scale, input) {\n    var adapter = scale._adapter;\n    var options = scale.options.time;\n    var parser = options.parser;\n    var format = parser || options.format;\n    var value = input;\n\n    if (typeof parser === 'function') {\n      value = parser(value);\n    } // Only parse if its not a timestamp already\n\n\n    if (!helpers$1.isFinite(value)) {\n      value = typeof format === 'string' ? adapter.parse(value, format) : adapter.parse(value);\n    }\n\n    if (value !== null) {\n      return +value;\n    } // Labels are in an incompatible format and no `parser` has been provided.\n    // The user might still use the deprecated `format` option for parsing.\n\n\n    if (!parser && typeof format === 'function') {\n      value = format(input); // `format` could return something else than a timestamp, if so, parse it\n\n      if (!helpers$1.isFinite(value)) {\n        value = adapter.parse(value);\n      }\n    }\n\n    return value;\n  }\n\n  function parse(scale, input) {\n    if (helpers$1.isNullOrUndef(input)) {\n      return null;\n    }\n\n    var options = scale.options.time;\n    var value = toTimestamp(scale, scale.getRightValue(input));\n\n    if (value === null) {\n      return value;\n    }\n\n    if (options.round) {\n      value = +scale._adapter.startOf(value, options.round);\n    }\n\n    return value;\n  }\n  /**\n   * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n   * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n   */\n\n\n  function determineStepSize(min, max, unit, capacity) {\n    var range = max - min;\n    var interval = INTERVALS[unit];\n    var milliseconds = interval.size;\n    var steps = interval.steps;\n    var i, ilen, factor;\n\n    if (!steps) {\n      return Math.ceil(range / (capacity * milliseconds));\n    }\n\n    for (i = 0, ilen = steps.length; i < ilen; ++i) {\n      factor = steps[i];\n\n      if (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n        break;\n      }\n    }\n\n    return factor;\n  }\n  /**\n   * Figures out what unit results in an appropriate number of auto-generated ticks\n   */\n\n\n  function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    var ilen = UNITS.length;\n    var i, interval, factor;\n\n    for (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n      interval = INTERVALS[UNITS[i]];\n      factor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n      if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n        return UNITS[i];\n      }\n    }\n\n    return UNITS[ilen - 1];\n  }\n  /**\n   * Figures out what unit to format a set of ticks with\n   */\n\n\n  function determineUnitForFormatting(scale, ticks, minUnit, min, max) {\n    var ilen = UNITS.length;\n    var i, unit;\n\n    for (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n      unit = UNITS[i];\n\n      if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= ticks.length) {\n        return unit;\n      }\n    }\n\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n  }\n\n  function determineMajorUnit(unit) {\n    for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n      if (INTERVALS[UNITS[i]].common) {\n        return UNITS[i];\n      }\n    }\n  }\n  /**\n   * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n   * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n   * Important: this method can return ticks outside the min and max range, it's the\n   * responsibility of the calling code to clamp values if needed.\n   */\n\n\n  function generate(scale, min, max, capacity) {\n    var adapter = scale._adapter;\n    var options = scale.options;\n    var timeOpts = options.time;\n    var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n    var major = determineMajorUnit(minor);\n    var stepSize = valueOrDefault$c(timeOpts.stepSize, timeOpts.unitStepSize);\n    var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    var majorTicksEnabled = options.ticks.major.enabled;\n    var interval = INTERVALS[minor];\n    var first = min;\n    var last = max;\n    var ticks = [];\n    var time;\n\n    if (!stepSize) {\n      stepSize = determineStepSize(min, max, minor, capacity);\n    } // For 'week' unit, handle the first day of week option\n\n\n    if (weekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n      last = +adapter.startOf(last, 'isoWeek', weekday);\n    } // Align first/last ticks on unit\n\n\n    first = +adapter.startOf(first, weekday ? 'day' : minor);\n    last = +adapter.startOf(last, weekday ? 'day' : minor); // Make sure that the last tick include max\n\n    if (last < max) {\n      last = +adapter.add(last, 1, minor);\n    }\n\n    time = first;\n\n    if (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n      // Align the first tick on the previous `minor` unit aligned on the `major` unit:\n      // we first aligned time on the previous `major` unit then add the number of full\n      // stepSize there is between first and the previous major time.\n      time = +adapter.startOf(time, major);\n      time = +adapter.add(time, ~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n    }\n\n    for (; time < last; time = +adapter.add(time, stepSize, minor)) {\n      ticks.push(+time);\n    }\n\n    ticks.push(+time);\n    return ticks;\n  }\n  /**\n   * Returns the start and end offsets from edges in the form of {start, end}\n   * where each value is a relative width to the scale and ranges between 0 and 1.\n   * They add extra margins on the both sides by scaling down the original scale.\n   * Offsets are added when the `offset` option is true.\n   */\n\n\n  function computeOffsets(table, ticks, min, max, options) {\n    var start = 0;\n    var end = 0;\n    var first, last;\n\n    if (options.offset && ticks.length) {\n      if (!options.time.min) {\n        first = interpolate$1(table, 'time', ticks[0], 'pos');\n\n        if (ticks.length === 1) {\n          start = 1 - first;\n        } else {\n          start = (interpolate$1(table, 'time', ticks[1], 'pos') - first) / 2;\n        }\n      }\n\n      if (!options.time.max) {\n        last = interpolate$1(table, 'time', ticks[ticks.length - 1], 'pos');\n\n        if (ticks.length === 1) {\n          end = last;\n        } else {\n          end = (last - interpolate$1(table, 'time', ticks[ticks.length - 2], 'pos')) / 2;\n        }\n      }\n    }\n\n    return {\n      start: start,\n      end: end\n    };\n  }\n\n  function ticksFromTimestamps(scale, values, majorUnit) {\n    var ticks = [];\n    var i, ilen, value, major;\n\n    for (i = 0, ilen = values.length; i < ilen; ++i) {\n      value = values[i];\n      major = majorUnit ? value === +scale._adapter.startOf(value, majorUnit) : false;\n      ticks.push({\n        value: value,\n        major: major\n      });\n    }\n\n    return ticks;\n  }\n\n  var defaultConfig$4 = {\n    position: 'bottom',\n\n    /**\n     * Data distribution along the scale:\n     * - 'linear': data are spread according to their time (distances can vary),\n     * - 'series': data are spread at the same distance from each other.\n     * @see https://github.com/chartjs/Chart.js/pull/4507\n     * @since 2.7.0\n     */\n    distribution: 'linear',\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n    adapters: {},\n    time: {\n      parser: false,\n      // false == a pattern string from https://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n      format: false,\n      // DEPRECATED false == date objects, moment object, callback or a pattern string from https://momentjs.com/docs/#/parsing/string-format/\n      unit: false,\n      // false == automatic or override with week, month, year, etc.\n      round: false,\n      // none, or override with week, month, year, etc.\n      displayFormat: false,\n      // DEPRECATED\n      isoWeekday: false,\n      // override week start day - see https://momentjs.com/docs/#/get-set/iso-weekday/\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      autoSkip: false,\n\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n      major: {\n        enabled: false\n      }\n    }\n  };\n  var scale_time = core_scale.extend({\n    initialize: function initialize() {\n      this.mergeTicksOptions();\n      core_scale.prototype.initialize.call(this);\n    },\n    update: function update() {\n      var me = this;\n      var options = me.options;\n      var time = options.time || (options.time = {});\n      var adapter = me._adapter = new core_adapters._date(options.adapters.date); // DEPRECATIONS: output a message only one time per update\n\n      if (time.format) {\n        console.warn('options.time.format is deprecated and replaced by options.time.parser.');\n      } // Backward compatibility: before introducing adapter, `displayFormats` was\n      // supposed to contain *all* unit/string pairs but this can't be resolved\n      // when loading the scale (adapters are loaded afterward), so let's populate\n      // missing formats on update\n\n\n      helpers$1.mergeIf(time.displayFormats, adapter.formats());\n      return core_scale.prototype.update.apply(me, arguments);\n    },\n\n    /**\n     * Allows data to be referenced via 't' attribute\n     */\n    getRightValue: function getRightValue(rawValue) {\n      if (rawValue && rawValue.t !== undefined) {\n        rawValue = rawValue.t;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, rawValue);\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var adapter = me._adapter;\n      var timeOpts = me.options.time;\n      var unit = timeOpts.unit || 'day';\n      var min = MAX_INTEGER;\n      var max = MIN_INTEGER;\n      var timestamps = [];\n      var datasets = [];\n      var labels = [];\n      var i, j, ilen, jlen, data, timestamp;\n      var dataLabels = chart.data.labels || []; // Convert labels to timestamps\n\n      for (i = 0, ilen = dataLabels.length; i < ilen; ++i) {\n        labels.push(parse(me, dataLabels[i]));\n      } // Convert data to timestamps\n\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          data = chart.data.datasets[i].data; // Let's consider that all data have the same format.\n\n          if (helpers$1.isObject(data[0])) {\n            datasets[i] = [];\n\n            for (j = 0, jlen = data.length; j < jlen; ++j) {\n              timestamp = parse(me, data[j]);\n              timestamps.push(timestamp);\n              datasets[i][j] = timestamp;\n            }\n          } else {\n            for (j = 0, jlen = labels.length; j < jlen; ++j) {\n              timestamps.push(labels[j]);\n            }\n\n            datasets[i] = labels.slice(0);\n          }\n        } else {\n          datasets[i] = [];\n        }\n      }\n\n      if (labels.length) {\n        // Sort labels **after** data have been converted\n        labels = arrayUnique(labels).sort(sorter);\n        min = Math.min(min, labels[0]);\n        max = Math.max(max, labels[labels.length - 1]);\n      }\n\n      if (timestamps.length) {\n        timestamps = arrayUnique(timestamps).sort(sorter);\n        min = Math.min(min, timestamps[0]);\n        max = Math.max(max, timestamps[timestamps.length - 1]);\n      }\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // In case there is no valid min/max, set limits based on unit time option\n\n      min = min === MAX_INTEGER ? +adapter.startOf(Date.now(), unit) : min;\n      max = max === MIN_INTEGER ? +adapter.endOf(Date.now(), unit) + 1 : max; // Make sure that max is strictly higher than min (required by the lookup table)\n\n      me.min = Math.min(min, max);\n      me.max = Math.max(min + 1, max); // PRIVATE\n\n      me._horizontal = me.isHorizontal();\n      me._table = [];\n      me._timestamps = {\n        data: timestamps,\n        datasets: datasets,\n        labels: labels\n      };\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      var options = me.options;\n      var timeOpts = options.time;\n      var timestamps = [];\n      var ticks = [];\n      var i, ilen, timestamp;\n\n      switch (options.ticks.source) {\n        case 'data':\n          timestamps = me._timestamps.data;\n          break;\n\n        case 'labels':\n          timestamps = me._timestamps.labels;\n          break;\n\n        case 'auto':\n        default:\n          timestamps = generate(me, min, max, me.getLabelCapacity(min), options);\n      }\n\n      if (options.bounds === 'ticks' && timestamps.length) {\n        min = timestamps[0];\n        max = timestamps[timestamps.length - 1];\n      } // Enforce limits with user min/max options\n\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // Remove ticks outside the min/max range\n\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        timestamp = timestamps[i];\n\n        if (timestamp >= min && timestamp <= max) {\n          ticks.push(timestamp);\n        }\n      }\n\n      me.min = min;\n      me.max = max; // PRIVATE\n\n      me._unit = timeOpts.unit || determineUnitForFormatting(me, ticks, timeOpts.minUnit, me.min, me.max);\n      me._majorUnit = determineMajorUnit(me._unit);\n      me._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n      me._offsets = computeOffsets(me._table, ticks, min, max, options);\n\n      if (options.ticks.reverse) {\n        ticks.reverse();\n      }\n\n      return ticksFromTimestamps(me, ticks, me._majorUnit);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var adapter = me._adapter;\n      var data = me.chart.data;\n      var timeOpts = me.options.time;\n      var label = data.labels && index < data.labels.length ? data.labels[index] : '';\n      var value = data.datasets[datasetIndex].data[index];\n\n      if (helpers$1.isObject(value)) {\n        label = me.getRightValue(value);\n      }\n\n      if (timeOpts.tooltipFormat) {\n        return adapter.format(toTimestamp(me, label), timeOpts.tooltipFormat);\n      }\n\n      if (typeof label === 'string') {\n        return label;\n      }\n\n      return adapter.format(toTimestamp(me, label), timeOpts.displayFormats.datetime);\n    },\n\n    /**\n     * Function to format an individual tick mark\n     * @private\n     */\n    tickFormatFunction: function tickFormatFunction(time, index, ticks, format) {\n      var me = this;\n      var adapter = me._adapter;\n      var options = me.options;\n      var formats = options.time.displayFormats;\n      var minorFormat = formats[me._unit];\n      var majorUnit = me._majorUnit;\n      var majorFormat = formats[majorUnit];\n      var majorTime = +adapter.startOf(time, majorUnit);\n      var majorTickOpts = options.ticks.major;\n      var major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n      var label = adapter.format(time, format ? format : major ? majorFormat : minorFormat);\n      var tickOpts = major ? majorTickOpts : options.ticks.minor;\n      var formatter = valueOrDefault$c(tickOpts.callback, tickOpts.userCallback);\n      return formatter ? formatter(label, index, ticks) : label;\n    },\n    convertTicksToLabels: function convertTicksToLabels(ticks) {\n      var labels = [];\n      var i, ilen;\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        labels.push(this.tickFormatFunction(ticks[i].value, i, ticks));\n      }\n\n      return labels;\n    },\n\n    /**\n     * @private\n     */\n    getPixelForOffset: function getPixelForOffset(time) {\n      var me = this;\n      var isReverse = me.options.ticks.reverse;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? isReverse ? me.right : me.left : isReverse ? me.bottom : me.top;\n      var pos = interpolate$1(me._table, 'time', time, 'pos');\n      var offset = size * (me._offsets.start + pos) / (me._offsets.start + 1 + me._offsets.end);\n      return isReverse ? start - offset : start + offset;\n    },\n    getPixelForValue: function getPixelForValue(value, index, datasetIndex) {\n      var me = this;\n      var time = null;\n\n      if (index !== undefined && datasetIndex !== undefined) {\n        time = me._timestamps.datasets[datasetIndex][index];\n      }\n\n      if (time === null) {\n        time = parse(me, value);\n      }\n\n      if (time !== null) {\n        return me.getPixelForOffset(time);\n      }\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      var ticks = this.getTicks();\n      return index >= 0 && index < ticks.length ? this.getPixelForOffset(ticks[index].value) : null;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? me.left : me.top;\n      var pos = (size ? (pixel - start) / size : 0) * (me._offsets.start + 1 + me._offsets.start) - me._offsets.end;\n      var time = interpolate$1(me._table, 'pos', pos, 'time'); // DEPRECATION, we should return time directly\n\n      return me._adapter._create(time);\n    },\n\n    /**\n     * Crude approximation of what the label width might be\n     * @private\n     */\n    getLabelWidth: function getLabelWidth(label) {\n      var me = this;\n      var ticksOpts = me.options.ticks;\n      var tickLabelWidth = me.ctx.measureText(label).width;\n      var angle = helpers$1.toRadians(ticksOpts.maxRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n      var tickFontSize = valueOrDefault$c(ticksOpts.fontSize, core_defaults.global.defaultFontSize);\n      return tickLabelWidth * cosRotation + tickFontSize * sinRotation;\n    },\n\n    /**\n     * @private\n     */\n    getLabelCapacity: function getLabelCapacity(exampleTime) {\n      var me = this; // pick the longest format (milliseconds) for guestimation\n\n      var format = me.options.time.displayFormats.millisecond;\n      var exampleLabel = me.tickFormatFunction(exampleTime, 0, [], format);\n      var tickLabelWidth = me.getLabelWidth(exampleLabel);\n      var innerWidth = me.isHorizontal() ? me.width : me.height;\n      var capacity = Math.floor(innerWidth / tickLabelWidth);\n      return capacity > 0 ? capacity : 1;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$4 = defaultConfig$4;\n  scale_time._defaults = _defaults$4;\n  var scales = {\n    category: scale_category,\n    linear: scale_linear,\n    logarithmic: scale_logarithmic,\n    radialLinear: scale_radialLinear,\n    time: scale_time\n  };\n  var FORMATS = {\n    datetime: 'MMM D, YYYY, h:mm:ss a',\n    millisecond: 'h:mm:ss.SSS a',\n    second: 'h:mm:ss a',\n    minute: 'h:mm a',\n    hour: 'hA',\n    day: 'MMM D',\n    week: 'll',\n    month: 'MMM YYYY',\n    quarter: '[Q]Q - YYYY',\n    year: 'YYYY'\n  };\n\n  core_adapters._date.override(typeof moment === 'function' ? {\n    _id: 'moment',\n    // DEBUG ONLY\n    formats: function formats() {\n      return FORMATS;\n    },\n    parse: function parse(value, format) {\n      if (typeof value === 'string' && typeof format === 'string') {\n        value = moment(value, format);\n      } else if (!(value instanceof moment)) {\n        value = moment(value);\n      }\n\n      return value.isValid() ? value.valueOf() : null;\n    },\n    format: function format(time, _format) {\n      return moment(time).format(_format);\n    },\n    add: function add(time, amount, unit) {\n      return moment(time).add(amount, unit).valueOf();\n    },\n    diff: function diff(max, min, unit) {\n      return moment.duration(moment(max).diff(moment(min))).as(unit);\n    },\n    startOf: function startOf(time, unit, weekday) {\n      time = moment(time);\n\n      if (unit === 'isoWeek') {\n        return time.isoWeekday(weekday).valueOf();\n      }\n\n      return time.startOf(unit).valueOf();\n    },\n    endOf: function endOf(time, unit) {\n      return moment(time).endOf(unit).valueOf();\n    },\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility with scale.getValueForPixel().\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(time) {\n      return moment(time);\n    }\n  } : {});\n\n  core_defaults._set('global', {\n    plugins: {\n      filler: {\n        propagate: true\n      }\n    }\n  });\n\n  var mappers = {\n    dataset: function dataset(source) {\n      var index = source.fill;\n      var chart = source.chart;\n      var meta = chart.getDatasetMeta(index);\n      var visible = meta && chart.isDatasetVisible(index);\n      var points = visible && meta.dataset._children || [];\n      var length = points.length || 0;\n      return !length ? null : function (point, i) {\n        return i < length && points[i]._view || null;\n      };\n    },\n    boundary: function boundary(source) {\n      var boundary = source.boundary;\n      var x = boundary ? boundary.x : null;\n      var y = boundary ? boundary.y : null;\n      return function (point) {\n        return {\n          x: x === null ? point.x : x,\n          y: y === null ? point.y : y\n        };\n      };\n    }\n  }; // @todo if (fill[0] === '#')\n\n  function decodeFill(el, index, count) {\n    var model = el._model || {};\n    var fill = model.fill;\n    var target;\n\n    if (fill === undefined) {\n      fill = !!model.backgroundColor;\n    }\n\n    if (fill === false || fill === null) {\n      return false;\n    }\n\n    if (fill === true) {\n      return 'origin';\n    }\n\n    target = parseFloat(fill, 10);\n\n    if (isFinite(target) && Math.floor(target) === target) {\n      if (fill[0] === '-' || fill[0] === '+') {\n        target = index + target;\n      }\n\n      if (target === index || target < 0 || target >= count) {\n        return false;\n      }\n\n      return target;\n    }\n\n    switch (fill) {\n      // compatibility\n      case 'bottom':\n        return 'start';\n\n      case 'top':\n        return 'end';\n\n      case 'zero':\n        return 'origin';\n      // supported boundaries\n\n      case 'origin':\n      case 'start':\n      case 'end':\n        return fill;\n      // invalid fill values\n\n      default:\n        return false;\n    }\n  }\n\n  function computeBoundary(source) {\n    var model = source.el._model || {};\n    var scale = source.el._scale || {};\n    var fill = source.fill;\n    var target = null;\n    var horizontal;\n\n    if (isFinite(fill)) {\n      return null;\n    } // Backward compatibility: until v3, we still need to support boundary values set on\n    // the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n    // controllers might still use it (e.g. the Smith chart).\n\n\n    if (fill === 'start') {\n      target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n    } else if (fill === 'end') {\n      target = model.scaleTop === undefined ? scale.top : model.scaleTop;\n    } else if (model.scaleZero !== undefined) {\n      target = model.scaleZero;\n    } else if (scale.getBasePosition) {\n      target = scale.getBasePosition();\n    } else if (scale.getBasePixel) {\n      target = scale.getBasePixel();\n    }\n\n    if (target !== undefined && target !== null) {\n      if (target.x !== undefined && target.y !== undefined) {\n        return target;\n      }\n\n      if (helpers$1.isFinite(target)) {\n        horizontal = scale.isHorizontal();\n        return {\n          x: horizontal ? target : null,\n          y: horizontal ? null : target\n        };\n      }\n    }\n\n    return null;\n  }\n\n  function resolveTarget(sources, index, propagate) {\n    var source = sources[index];\n    var fill = source.fill;\n    var visited = [index];\n    var target;\n\n    if (!propagate) {\n      return fill;\n    }\n\n    while (fill !== false && visited.indexOf(fill) === -1) {\n      if (!isFinite(fill)) {\n        return fill;\n      }\n\n      target = sources[fill];\n\n      if (!target) {\n        return false;\n      }\n\n      if (target.visible) {\n        return fill;\n      }\n\n      visited.push(fill);\n      fill = target.fill;\n    }\n\n    return false;\n  }\n\n  function createMapper(source) {\n    var fill = source.fill;\n    var type = 'dataset';\n\n    if (fill === false) {\n      return null;\n    }\n\n    if (!isFinite(fill)) {\n      type = 'boundary';\n    }\n\n    return mappers[type](source);\n  }\n\n  function isDrawable(point) {\n    return point && !point.skip;\n  }\n\n  function drawArea(ctx, curve0, curve1, len0, len1) {\n    var i;\n\n    if (!len0 || !len1) {\n      return;\n    } // building first area curve (normal)\n\n\n    ctx.moveTo(curve0[0].x, curve0[0].y);\n\n    for (i = 1; i < len0; ++i) {\n      helpers$1.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n    } // joining the two area curves\n\n\n    ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y); // building opposite area curve (reverse)\n\n    for (i = len1 - 1; i > 0; --i) {\n      helpers$1.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n    }\n  }\n\n  function doFill(ctx, points, mapper, view, color, loop) {\n    var count = points.length;\n    var span = view.spanGaps;\n    var curve0 = [];\n    var curve1 = [];\n    var len0 = 0;\n    var len1 = 0;\n    var i, ilen, index, p0, p1, d0, d1;\n    ctx.beginPath();\n\n    for (i = 0, ilen = count + !!loop; i < ilen; ++i) {\n      index = i % count;\n      p0 = points[index]._view;\n      p1 = mapper(p0, index, view);\n      d0 = isDrawable(p0);\n      d1 = isDrawable(p1);\n\n      if (d0 && d1) {\n        len0 = curve0.push(p0);\n        len1 = curve1.push(p1);\n      } else if (len0 && len1) {\n        if (!span) {\n          drawArea(ctx, curve0, curve1, len0, len1);\n          len0 = len1 = 0;\n          curve0 = [];\n          curve1 = [];\n        } else {\n          if (d0) {\n            curve0.push(p0);\n          }\n\n          if (d1) {\n            curve1.push(p1);\n          }\n        }\n      }\n    }\n\n    drawArea(ctx, curve0, curve1, len0, len1);\n    ctx.closePath();\n    ctx.fillStyle = color;\n    ctx.fill();\n  }\n\n  var plugin_filler = {\n    id: 'filler',\n    afterDatasetsUpdate: function afterDatasetsUpdate(chart, options) {\n      var count = (chart.data.datasets || []).length;\n      var propagate = options.propagate;\n      var sources = [];\n      var meta, i, el, source;\n\n      for (i = 0; i < count; ++i) {\n        meta = chart.getDatasetMeta(i);\n        el = meta.dataset;\n        source = null;\n\n        if (el && el._model && el instanceof elements.Line) {\n          source = {\n            visible: chart.isDatasetVisible(i),\n            fill: decodeFill(el, i, count),\n            chart: chart,\n            el: el\n          };\n        }\n\n        meta.$filler = source;\n        sources.push(source);\n      }\n\n      for (i = 0; i < count; ++i) {\n        source = sources[i];\n\n        if (!source) {\n          continue;\n        }\n\n        source.fill = resolveTarget(sources, i, propagate);\n        source.boundary = computeBoundary(source);\n        source.mapper = createMapper(source);\n      }\n    },\n    beforeDatasetDraw: function beforeDatasetDraw(chart, args) {\n      var meta = args.meta.$filler;\n\n      if (!meta) {\n        return;\n      }\n\n      var ctx = chart.ctx;\n      var el = meta.el;\n      var view = el._view;\n      var points = el._children || [];\n      var mapper = meta.mapper;\n      var color = view.backgroundColor || core_defaults.global.defaultColor;\n\n      if (mapper && color && points.length) {\n        helpers$1.canvas.clipArea(ctx, chart.chartArea);\n        doFill(ctx, points, mapper, view, color, el._loop);\n        helpers$1.canvas.unclipArea(ctx);\n      }\n    }\n  };\n  var noop$1 = helpers$1.noop;\n  var valueOrDefault$d = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    legend: {\n      display: true,\n      position: 'top',\n      fullWidth: true,\n      reverse: false,\n      weight: 1000,\n      // a callback that will handle\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.datasetIndex;\n        var ci = this.chart;\n        var meta = ci.getDatasetMeta(index); // See controller.isDatasetVisible comment\n\n        meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null; // We hid a dataset ... rerender the chart\n\n        ci.update();\n      },\n      onHover: null,\n      onLeave: null,\n      labels: {\n        boxWidth: 40,\n        padding: 10,\n        // Generates labels shown in the legend\n        // Valid properties to return:\n        // text : text to display\n        // fillStyle : fill of coloured box\n        // strokeStyle: stroke of coloured box\n        // hidden : if this legend item refers to a hidden item\n        // lineCap : cap style for line\n        // lineDash\n        // lineDashOffset :\n        // lineJoin :\n        // lineWidth :\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n          return helpers$1.isArray(data.datasets) ? data.datasets.map(function (dataset, i) {\n            return {\n              text: dataset.label,\n              fillStyle: !helpers$1.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0],\n              hidden: !chart.isDatasetVisible(i),\n              lineCap: dataset.borderCapStyle,\n              lineDash: dataset.borderDash,\n              lineDashOffset: dataset.borderDashOffset,\n              lineJoin: dataset.borderJoinStyle,\n              lineWidth: dataset.borderWidth,\n              strokeStyle: dataset.borderColor,\n              pointStyle: dataset.pointStyle,\n              // Below is extra data used for toggling the datasets\n              datasetIndex: i\n            };\n          }, this) : [];\n        }\n      }\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n\n      for (var i = 0; i < chart.data.datasets.length; i++) {\n        text.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\n        if (chart.data.datasets[i].label) {\n          text.push(chart.data.datasets[i].label);\n        }\n\n        text.push('</li>');\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    }\n  });\n  /**\n   * Helper function to get the box width based on the usePointStyle option\n   * @param {object} labelopts - the label options on the legend\n   * @param {number} fontSize - the label font size\n   * @return {number} width of the color box area\n   */\n\n\n  function getBoxWidth(labelOpts, fontSize) {\n    return labelOpts.usePointStyle && labelOpts.boxWidth > fontSize ? fontSize : labelOpts.boxWidth;\n  }\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Legend = core_element.extend({\n    initialize: function initialize(config) {\n      helpers$1.extend(this, config); // Contains hit boxes for each dataset (in dataset order)\n\n      this.legendHitBoxes = [];\n      /**\n      \t * @private\n      \t */\n\n      this._hoveredItem = null; // Are we in doughnut mode which has a different data type\n\n      this.doughnutMode = false;\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    // Any function defined here is inherited by all legend types.\n    // Any function can be extended by the legend type\n    beforeUpdate: noop$1,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$1,\n    //\n    beforeSetDimensions: noop$1,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$1,\n    //\n    beforeBuildLabels: noop$1,\n    buildLabels: function buildLabels() {\n      var me = this;\n      var labelOpts = me.options.labels || {};\n      var legendItems = helpers$1.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n      if (labelOpts.filter) {\n        legendItems = legendItems.filter(function (item) {\n          return labelOpts.filter(item, me.chart.data);\n        });\n      }\n\n      if (me.options.reverse) {\n        legendItems.reverse();\n      }\n\n      me.legendItems = legendItems;\n    },\n    afterBuildLabels: noop$1,\n    //\n    beforeFit: noop$1,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var display = opts.display;\n      var ctx = me.ctx;\n\n      var labelFont = helpers$1.options._parseFont(labelOpts);\n\n      var fontSize = labelFont.size; // Reset hit boxes\n\n      var hitboxes = me.legendHitBoxes = [];\n      var minSize = me.minSize;\n      var isHorizontal = me.isHorizontal();\n\n      if (isHorizontal) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = display ? 10 : 0;\n      } else {\n        minSize.width = display ? 10 : 0;\n        minSize.height = me.maxHeight; // fill all the height\n      } // Increase sizes here\n\n\n      if (display) {\n        ctx.font = labelFont.string;\n\n        if (isHorizontal) {\n          // Labels\n          // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n          var lineWidths = me.lineWidths = [0];\n          var totalHeight = 0;\n          ctx.textAlign = 'left';\n          ctx.textBaseline = 'top';\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var width = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n            if (i === 0 || lineWidths[lineWidths.length - 1] + width + labelOpts.padding > minSize.width) {\n              totalHeight += fontSize + labelOpts.padding;\n              lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = labelOpts.padding;\n            } // Store the hitbox width and height here. Final position will be updated in `draw`\n\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: width,\n              height: fontSize\n            };\n            lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n          });\n          minSize.height += totalHeight;\n        } else {\n          var vPadding = labelOpts.padding;\n          var columnWidths = me.columnWidths = [];\n          var totalWidth = labelOpts.padding;\n          var currentColWidth = 0;\n          var currentColHeight = 0;\n          var itemHeight = fontSize + vPadding;\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width; // If too tall, go to new column\n\n            if (i > 0 && currentColHeight + itemHeight > minSize.height - vPadding) {\n              totalWidth += currentColWidth + labelOpts.padding;\n              columnWidths.push(currentColWidth); // previous column width\n\n              currentColWidth = 0;\n              currentColHeight = 0;\n            } // Get max width\n\n\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight; // Store the hitbox width and height here. Final position will be updated in `draw`\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: itemWidth,\n              height: fontSize\n            };\n          });\n          totalWidth += currentColWidth;\n          columnWidths.push(currentColWidth);\n          minSize.width += totalWidth;\n        }\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$1,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    // Actually draw the legend on the canvas\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor;\n      var lineDefault = globalDefaults.elements.line;\n      var legendWidth = me.width;\n      var lineWidths = me.lineWidths;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var fontColor = valueOrDefault$d(labelOpts.fontColor, globalDefaults.defaultFontColor);\n\n        var labelFont = helpers$1.options._parseFont(labelOpts);\n\n        var fontSize = labelFont.size;\n        var cursor; // Canvas setup\n\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.strokeStyle = fontColor; // for strikethrough effect\n\n        ctx.fillStyle = fontColor; // render in correct colour\n\n        ctx.font = labelFont.string;\n        var boxWidth = getBoxWidth(labelOpts, fontSize);\n        var hitboxes = me.legendHitBoxes; // current position\n\n        var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n          if (isNaN(boxWidth) || boxWidth <= 0) {\n            return;\n          } // Set the ctx for the box\n\n\n          ctx.save();\n          var lineWidth = valueOrDefault$d(legendItem.lineWidth, lineDefault.borderWidth);\n          ctx.fillStyle = valueOrDefault$d(legendItem.fillStyle, defaultColor);\n          ctx.lineCap = valueOrDefault$d(legendItem.lineCap, lineDefault.borderCapStyle);\n          ctx.lineDashOffset = valueOrDefault$d(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n          ctx.lineJoin = valueOrDefault$d(legendItem.lineJoin, lineDefault.borderJoinStyle);\n          ctx.lineWidth = lineWidth;\n          ctx.strokeStyle = valueOrDefault$d(legendItem.strokeStyle, defaultColor);\n\n          if (ctx.setLineDash) {\n            // IE 9 and 10 do not support line dash\n            ctx.setLineDash(valueOrDefault$d(legendItem.lineDash, lineDefault.borderDash));\n          }\n\n          if (opts.labels && opts.labels.usePointStyle) {\n            // Recalculate x and y for drawPoint() because its expecting\n            // x and y to be center of figure (instead of top left)\n            var radius = boxWidth * Math.SQRT2 / 2;\n            var centerX = x + boxWidth / 2;\n            var centerY = y + fontSize / 2; // Draw pointStyle as legend symbol\n\n            helpers$1.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n          } else {\n            // Draw box as legend symbol\n            if (lineWidth !== 0) {\n              ctx.strokeRect(x, y, boxWidth, fontSize);\n            }\n\n            ctx.fillRect(x, y, boxWidth, fontSize);\n          }\n\n          ctx.restore();\n        };\n\n        var fillText = function fillText(x, y, legendItem, textWidth) {\n          var halfFontSize = fontSize / 2;\n          var xLeft = boxWidth + halfFontSize + x;\n          var yMiddle = y + halfFontSize;\n          ctx.fillText(legendItem.text, xLeft, yMiddle);\n\n          if (legendItem.hidden) {\n            // Strikethrough the text if hidden\n            ctx.beginPath();\n            ctx.lineWidth = 2;\n            ctx.moveTo(xLeft, yMiddle);\n            ctx.lineTo(xLeft + textWidth, yMiddle);\n            ctx.stroke();\n          }\n        }; // Horizontal\n\n\n        var isHorizontal = me.isHorizontal();\n\n        if (isHorizontal) {\n          cursor = {\n            x: me.left + (legendWidth - lineWidths[0]) / 2 + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        } else {\n          cursor = {\n            x: me.left + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        }\n\n        var itemHeight = fontSize + labelOpts.padding;\n        helpers$1.each(me.legendItems, function (legendItem, i) {\n          var textWidth = ctx.measureText(legendItem.text).width;\n          var width = boxWidth + fontSize / 2 + textWidth;\n          var x = cursor.x;\n          var y = cursor.y; // Use (me.left + me.minSize.width) and (me.top + me.minSize.height)\n          // instead of me.right and me.bottom because me.width and me.height\n          // may have been changed since me.minSize was calculated\n\n          if (isHorizontal) {\n            if (i > 0 && x + width + labelOpts.padding > me.left + me.minSize.width) {\n              y = cursor.y += itemHeight;\n              cursor.line++;\n              x = cursor.x = me.left + (legendWidth - lineWidths[cursor.line]) / 2 + labelOpts.padding;\n            }\n          } else if (i > 0 && y + itemHeight > me.top + me.minSize.height) {\n            x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n            y = cursor.y = me.top + labelOpts.padding;\n            cursor.line++;\n          }\n\n          drawLegendBox(x, y, legendItem);\n          hitboxes[i].left = x;\n          hitboxes[i].top = y; // Fill the actual label\n\n          fillText(x, y, legendItem, textWidth);\n\n          if (isHorizontal) {\n            cursor.x += width + labelOpts.padding;\n          } else {\n            cursor.y += itemHeight;\n          }\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getLegendItemAt: function _getLegendItemAt(x, y) {\n      var me = this;\n      var i, hitBox, lh;\n\n      if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n        // See if we are touching one of the dataset boxes\n        lh = me.legendHitBoxes;\n\n        for (i = 0; i < lh.length; ++i) {\n          hitBox = lh[i];\n\n          if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n            // Touching an element\n            return me.legendItems[i];\n          }\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var opts = me.options;\n      var type = e.type === 'mouseup' ? 'click' : e.type;\n      var hoveredItem;\n\n      if (type === 'mousemove') {\n        if (!opts.onHover && !opts.onLeave) {\n          return;\n        }\n      } else if (type === 'click') {\n        if (!opts.onClick) {\n          return;\n        }\n      } else {\n        return;\n      } // Chart event already has relative position in it\n\n\n      hoveredItem = me._getLegendItemAt(e.x, e.y);\n\n      if (type === 'click') {\n        if (hoveredItem && opts.onClick) {\n          // use e.native for backwards compatibility\n          opts.onClick.call(me, e.native, hoveredItem);\n        }\n      } else {\n        if (opts.onLeave && hoveredItem !== me._hoveredItem) {\n          if (me._hoveredItem) {\n            opts.onLeave.call(me, e.native, me._hoveredItem);\n          }\n\n          me._hoveredItem = hoveredItem;\n        }\n\n        if (opts.onHover && hoveredItem) {\n          // use e.native for backwards compatibility\n          opts.onHover.call(me, e.native, hoveredItem);\n        }\n      }\n    }\n  });\n\n  function createNewLegendAndAttach(chart, legendOpts) {\n    var legend = new Legend({\n      ctx: chart.ctx,\n      options: legendOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, legend, legendOpts);\n    core_layouts.addBox(chart, legend);\n    chart.legend = legend;\n  }\n\n  var plugin_legend = {\n    id: 'legend',\n\n    /**\n     * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n     * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Legend,\n    beforeInit: function beforeInit(chart) {\n      var legendOpts = chart.options.legend;\n\n      if (legendOpts) {\n        createNewLegendAndAttach(chart, legendOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var legendOpts = chart.options.legend;\n      var legend = chart.legend;\n\n      if (legendOpts) {\n        helpers$1.mergeIf(legendOpts, core_defaults.global.legend);\n\n        if (legend) {\n          core_layouts.configure(chart, legend, legendOpts);\n          legend.options = legendOpts;\n        } else {\n          createNewLegendAndAttach(chart, legendOpts);\n        }\n      } else if (legend) {\n        core_layouts.removeBox(chart, legend);\n        delete chart.legend;\n      }\n    },\n    afterEvent: function afterEvent(chart, e) {\n      var legend = chart.legend;\n\n      if (legend) {\n        legend.handleEvent(e);\n      }\n    }\n  };\n  var noop$2 = helpers$1.noop;\n\n  core_defaults._set('global', {\n    title: {\n      display: false,\n      fontStyle: 'bold',\n      fullWidth: true,\n      padding: 10,\n      position: 'top',\n      text: '',\n      weight: 2000 // by default greater than legend (1000) to be above\n\n    }\n  });\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Title = core_element.extend({\n    initialize: function initialize(config) {\n      var me = this;\n      helpers$1.extend(me, config); // Contains hit boxes for each dataset (in dataset order)\n\n      me.legendHitBoxes = [];\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    beforeUpdate: noop$2,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$2,\n    //\n    beforeSetDimensions: noop$2,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$2,\n    //\n    beforeBuildLabels: noop$2,\n    buildLabels: noop$2,\n    afterBuildLabels: noop$2,\n    //\n    beforeFit: noop$2,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var display = opts.display;\n      var minSize = me.minSize;\n      var lineCount = helpers$1.isArray(opts.text) ? opts.text.length : 1;\n\n      var fontOpts = helpers$1.options._parseFont(opts);\n\n      var textSize = display ? lineCount * fontOpts.lineHeight + opts.padding * 2 : 0;\n\n      if (me.isHorizontal()) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = textSize;\n      } else {\n        minSize.width = textSize;\n        minSize.height = me.maxHeight; // fill all the height\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$2,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      var pos = this.options.position;\n      return pos === 'top' || pos === 'bottom';\n    },\n    // Actually draw the title block on the canvas\n    draw: function draw() {\n      var me = this;\n      var ctx = me.ctx;\n      var opts = me.options;\n\n      if (opts.display) {\n        var fontOpts = helpers$1.options._parseFont(opts);\n\n        var lineHeight = fontOpts.lineHeight;\n        var offset = lineHeight / 2 + opts.padding;\n        var rotation = 0;\n        var top = me.top;\n        var left = me.left;\n        var bottom = me.bottom;\n        var right = me.right;\n        var maxWidth, titleX, titleY;\n        ctx.fillStyle = helpers$1.valueOrDefault(opts.fontColor, core_defaults.global.defaultFontColor); // render in correct colour\n\n        ctx.font = fontOpts.string; // Horizontal\n\n        if (me.isHorizontal()) {\n          titleX = left + (right - left) / 2; // midpoint of the width\n\n          titleY = top + offset;\n          maxWidth = right - left;\n        } else {\n          titleX = opts.position === 'left' ? left + offset : right - offset;\n          titleY = top + (bottom - top) / 2;\n          maxWidth = bottom - top;\n          rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n        }\n\n        ctx.save();\n        ctx.translate(titleX, titleY);\n        ctx.rotate(rotation);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        var text = opts.text;\n\n        if (helpers$1.isArray(text)) {\n          var y = 0;\n\n          for (var i = 0; i < text.length; ++i) {\n            ctx.fillText(text[i], 0, y, maxWidth);\n            y += lineHeight;\n          }\n        } else {\n          ctx.fillText(text, 0, 0, maxWidth);\n        }\n\n        ctx.restore();\n      }\n    }\n  });\n\n  function createNewTitleBlockAndAttach(chart, titleOpts) {\n    var title = new Title({\n      ctx: chart.ctx,\n      options: titleOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, title, titleOpts);\n    core_layouts.addBox(chart, title);\n    chart.titleBlock = title;\n  }\n\n  var plugin_title = {\n    id: 'title',\n\n    /**\n     * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n     * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Title,\n    beforeInit: function beforeInit(chart) {\n      var titleOpts = chart.options.title;\n\n      if (titleOpts) {\n        createNewTitleBlockAndAttach(chart, titleOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var titleOpts = chart.options.title;\n      var titleBlock = chart.titleBlock;\n\n      if (titleOpts) {\n        helpers$1.mergeIf(titleOpts, core_defaults.global.title);\n\n        if (titleBlock) {\n          core_layouts.configure(chart, titleBlock, titleOpts);\n          titleBlock.options = titleOpts;\n        } else {\n          createNewTitleBlockAndAttach(chart, titleOpts);\n        }\n      } else if (titleBlock) {\n        core_layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n      }\n    }\n  };\n  var plugins = {};\n  var filler = plugin_filler;\n  var legend = plugin_legend;\n  var title = plugin_title;\n  plugins.filler = filler;\n  plugins.legend = legend;\n  plugins.title = title;\n  /**\n   * @namespace Chart\n   */\n\n  core_controller.helpers = helpers$1; // @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\n\n  core_helpers(core_controller);\n  core_controller._adapters = core_adapters;\n  core_controller.Animation = core_animation;\n  core_controller.animationService = core_animations;\n  core_controller.controllers = controllers;\n  core_controller.DatasetController = core_datasetController;\n  core_controller.defaults = core_defaults;\n  core_controller.Element = core_element;\n  core_controller.elements = elements;\n  core_controller.Interaction = core_interaction;\n  core_controller.layouts = core_layouts;\n  core_controller.platform = platform;\n  core_controller.plugins = core_plugins;\n  core_controller.Scale = core_scale;\n  core_controller.scaleService = core_scaleService;\n  core_controller.Ticks = core_ticks;\n  core_controller.Tooltip = core_tooltip; // Register built-in scales\n\n  core_controller.helpers.each(scales, function (scale, type) {\n    core_controller.scaleService.registerScaleType(type, scale, scale._defaults);\n  }); // Load to register built-in adapters (as side effects)\n  // Loading built-in plugins\n\n  for (var k in plugins) {\n    if (plugins.hasOwnProperty(k)) {\n      core_controller.plugins.register(plugins[k]);\n    }\n  }\n\n  core_controller.platform.initialize();\n  var src = core_controller;\n\n  if (typeof window !== 'undefined') {\n    window.Chart = core_controller;\n  } // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Chart\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  core_controller.Chart = core_controller;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Legend\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Legend = plugins.legend._element;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Title\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Title = plugins.title._element;\n  /**\n   * Provided for backward compatibility, use Chart.plugins instead\n   * @namespace Chart.pluginService\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.pluginService = core_controller.plugins;\n  /**\n   * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n   * effect, instead simply create/register plugins via plain JavaScript objects.\n   * @interface Chart.PluginBase\n   * @deprecated since version 2.5.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.PluginBase = core_controller.Element.extend({});\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas instead.\n   * @namespace Chart.canvasHelpers\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.canvasHelpers = core_controller.helpers.canvas;\n  /**\n   * Provided for backward compatibility, use Chart.layouts instead.\n   * @namespace Chart.layoutService\n   * @deprecated since version 2.7.3\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.layoutService = core_controller.layouts;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.LinearScaleBase\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.LinearScaleBase = scale_linearbase;\n  /**\n   * Provided for backward compatibility, instead we should create a new Chart\n   * by setting the type in the config (`new Chart(id, {type: '{chart-type}'}`).\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   */\n\n  core_controller.helpers.each(['Bar', 'Bubble', 'Doughnut', 'Line', 'PolarArea', 'Radar', 'Scatter'], function (klass) {\n    core_controller[klass] = function (ctx, cfg) {\n      return new core_controller(ctx, core_controller.helpers.merge(cfg || {}, {\n        type: klass.charAt(0).toLowerCase() + klass.slice(1)\n      }));\n    };\n  });\n  return src;\n});","var ListCache = require('./_ListCache'),\n    stackClear = require('./_stackClear'),\n    stackDelete = require('./_stackDelete'),\n    stackGet = require('./_stackGet'),\n    stackHas = require('./_stackHas'),\n    stackSet = require('./_stackSet');\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n} // Add methods to `Stack`.\n\n\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\nmodule.exports = Stack;","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || value !== value && other !== other;\n}\n\nmodule.exports = eq;","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n/** `Object#toString` result references. */\n\n\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\n\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  } // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n\n\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\nmodule.exports = freeGlobal;","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n/** Used to resolve the decompiled source of functions. */\n\nvar funcToString = funcProto.toString;\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\n\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n\n    try {\n      return func + '';\n    } catch (e) {}\n  }\n\n  return '';\n}\n\nmodule.exports = toSource;","var SetCache = require('./_SetCache'),\n    arraySome = require('./_arraySome'),\n    cacheHas = require('./_cacheHas');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\n\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  } // Assume cyclic values are equal.\n\n\n  var stacked = stack.get(array);\n\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n\n  var index = -1,\n      result = true,\n      seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : undefined;\n  stack.set(array, other);\n  stack.set(other, array); // Ignore non-index properties.\n\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);\n    }\n\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n\n      result = false;\n      break;\n    } // Recursively compare arrays (susceptible to call stack limits).\n\n\n    if (seen) {\n      if (!arraySome(other, function (othValue, othIndex) {\n        if (!cacheHas(seen, othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n          return seen.push(othIndex);\n        }\n      })) {\n        result = false;\n        break;\n      }\n    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n      result = false;\n      break;\n    }\n  }\n\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalArrays;","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/** Built-in value references. */\n\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\n\nvar isArguments = baseIsArguments(function () {\n  return arguments;\n}()) ? baseIsArguments : function (value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n};\nmodule.exports = isArguments;","var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n/** Detect free variable `exports`. */\n\n\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */\n\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\n\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/** Built-in value references. */\n\nvar Buffer = moduleExports ? root.Buffer : undefined;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\n\nvar isBuffer = nativeIsBuffer || stubFalse;\nmodule.exports = isBuffer;","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/** Used to detect unsigned integer values. */\n\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\n\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length && (type == 'number' || type != 'symbol' && reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;\n}\n\nmodule.exports = isIndex;","var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n/* Node.js helper references. */\n\n\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\n\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\nmodule.exports = isTypedArray;","var isObject = require('./isObject');\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\n\n\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;","/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function (object) {\n    if (object == null) {\n      return false;\n    }\n\n    return object[key] === srcValue && (srcValue !== undefined || key in Object(object));\n  };\n}\n\nmodule.exports = matchesStrictComparable;","var castPath = require('./_castPath'),\n    toKey = require('./_toKey');\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\n\n\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n\n  return index && index == length ? object : undefined;\n}\n\nmodule.exports = baseGet;","var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\n\n\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;","var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Chart from 'chart.js';\nimport isEqual from 'lodash/isEqual';\nimport find from 'lodash/find';\nimport keyBy from 'lodash/keyBy';\nvar NODE_ENV = typeof process !== 'undefined' && process.env && process.env.NODE_ENV;\n\nvar ChartComponent = function (_React$Component) {\n  _inherits(ChartComponent, _React$Component);\n\n  function ChartComponent() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ChartComponent);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleOnClick = function (event) {\n      var instance = _this.chartInstance;\n      var _this$props = _this.props,\n          getDatasetAtEvent = _this$props.getDatasetAtEvent,\n          getElementAtEvent = _this$props.getElementAtEvent,\n          getElementsAtEvent = _this$props.getElementsAtEvent,\n          onElementsClick = _this$props.onElementsClick;\n      getDatasetAtEvent && getDatasetAtEvent(instance.getDatasetAtEvent(event), event);\n      getElementAtEvent && getElementAtEvent(instance.getElementAtEvent(event), event);\n      getElementsAtEvent && getElementsAtEvent(instance.getElementsAtEvent(event), event);\n      onElementsClick && onElementsClick(instance.getElementsAtEvent(event), event); // Backward compatibility\n    }, _this.ref = function (element) {\n      _this.element = element;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  ChartComponent.prototype.componentWillMount = function componentWillMount() {\n    this.chartInstance = undefined;\n  };\n\n  ChartComponent.prototype.componentDidMount = function componentDidMount() {\n    this.renderChart();\n  };\n\n  ChartComponent.prototype.componentDidUpdate = function componentDidUpdate() {\n    if (this.props.redraw) {\n      this.chartInstance.destroy();\n      this.renderChart();\n      return;\n    }\n\n    this.updateChart();\n  };\n\n  ChartComponent.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    var _props = this.props,\n        redraw = _props.redraw,\n        type = _props.type,\n        options = _props.options,\n        plugins = _props.plugins,\n        legend = _props.legend,\n        height = _props.height,\n        width = _props.width;\n\n    if (nextProps.redraw === true) {\n      return true;\n    }\n\n    if (height !== nextProps.height || width !== nextProps.width) {\n      return true;\n    }\n\n    if (type !== nextProps.type) {\n      return true;\n    }\n\n    if (!isEqual(legend, nextProps.legend)) {\n      return true;\n    }\n\n    if (!isEqual(options, nextProps.options)) {\n      return true;\n    }\n\n    var nextData = this.transformDataProp(nextProps);\n\n    if (!isEqual(this.shadowDataProp, nextData)) {\n      return true;\n    }\n\n    return !isEqual(plugins, nextProps.plugins);\n  };\n\n  ChartComponent.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.chartInstance.destroy();\n  };\n\n  ChartComponent.prototype.transformDataProp = function transformDataProp(props) {\n    var data = props.data;\n\n    if (typeof data == 'function') {\n      var node = this.element;\n      return data(node);\n    } else {\n      return data;\n    }\n  }; // Chart.js directly mutates the data.dataset objects by adding _meta proprerty\n  // this makes impossible to compare the current and next data changes\n  // therefore we memoize the data prop while sending a fake to Chart.js for mutation.\n  // see https://github.com/chartjs/Chart.js/blob/master/src/core/core.controller.js#L615-L617\n\n\n  ChartComponent.prototype.memoizeDataProps = function memoizeDataProps() {\n    if (!this.props.data) {\n      return;\n    }\n\n    var data = this.transformDataProp(this.props);\n    this.shadowDataProp = _extends({}, data, {\n      datasets: data.datasets && data.datasets.map(function (set) {\n        return _extends({}, set);\n      })\n    });\n    return data;\n  };\n\n  ChartComponent.prototype.checkDatasets = function checkDatasets(datasets) {\n    var isDev = NODE_ENV !== 'production' && NODE_ENV !== 'prod';\n    var usingCustomKeyProvider = this.props.datasetKeyProvider !== ChartComponent.getLabelAsKey;\n    var multipleDatasets = datasets.length > 1;\n\n    if (isDev && multipleDatasets && !usingCustomKeyProvider) {\n      var shouldWarn = false;\n      datasets.forEach(function (dataset) {\n        if (!dataset.label) {\n          shouldWarn = true;\n        }\n      });\n\n      if (shouldWarn) {\n        console.error('[react-chartjs-2] Warning: Each dataset needs a unique key. By default, the \"label\" property on each dataset is used. Alternatively, you may provide a \"datasetKeyProvider\" as a prop that returns a unique key.');\n      }\n    }\n  };\n\n  ChartComponent.prototype.updateChart = function updateChart() {\n    var _this2 = this;\n\n    var options = this.props.options;\n    var data = this.memoizeDataProps(this.props);\n    if (!this.chartInstance) return;\n\n    if (options) {\n      this.chartInstance.options = Chart.helpers.configMerge(this.chartInstance.options, options);\n    } // Pipe datasets to chart instance datasets enabling\n    // seamless transitions\n\n\n    var currentDatasets = this.chartInstance.config.data && this.chartInstance.config.data.datasets || [];\n    var nextDatasets = data.datasets || [];\n    this.checkDatasets(currentDatasets);\n    var currentDatasetsIndexed = keyBy(currentDatasets, this.props.datasetKeyProvider); // We can safely replace the dataset array, as long as we retain the _meta property\n    // on each dataset.\n\n    this.chartInstance.config.data.datasets = nextDatasets.map(function (next) {\n      var current = currentDatasetsIndexed[_this2.props.datasetKeyProvider(next)];\n\n      if (current && current.type === next.type) {\n        // The data array must be edited in place. As chart.js adds listeners to it.\n        current.data.splice(next.data.length);\n        next.data.forEach(function (point, pid) {\n          current.data[pid] = next.data[pid];\n        });\n\n        var _data = next.data,\n            otherProps = _objectWithoutProperties(next, ['data']); // Merge properties. Notice a weakness here. If a property is removed\n        // from next, it will be retained by current and never disappears.\n        // Workaround is to set value to null or undefined in next.\n\n\n        return _extends({}, current, otherProps);\n      } else {\n        return next;\n      }\n    });\n\n    var datasets = data.datasets,\n        rest = _objectWithoutProperties(data, ['datasets']);\n\n    this.chartInstance.config.data = _extends({}, this.chartInstance.config.data, rest);\n    this.chartInstance.update();\n  };\n\n  ChartComponent.prototype.renderChart = function renderChart() {\n    var _props2 = this.props,\n        options = _props2.options,\n        legend = _props2.legend,\n        type = _props2.type,\n        redraw = _props2.redraw,\n        plugins = _props2.plugins;\n    var node = this.element;\n    var data = this.memoizeDataProps();\n\n    if (typeof legend !== 'undefined' && !isEqual(ChartComponent.defaultProps.legend, legend)) {\n      options.legend = legend;\n    }\n\n    this.chartInstance = new Chart(node, {\n      type: type,\n      data: data,\n      options: options,\n      plugins: plugins\n    });\n  };\n\n  ChartComponent.prototype.render = function render() {\n    var _props3 = this.props,\n        height = _props3.height,\n        width = _props3.width,\n        onElementsClick = _props3.onElementsClick,\n        id = _props3.id;\n    return React.createElement('canvas', {\n      ref: this.ref,\n      height: height,\n      width: width,\n      id: id,\n      onClick: this.handleOnClick\n    });\n  };\n\n  return ChartComponent;\n}(React.Component);\n\nChartComponent.getLabelAsKey = function (d) {\n  return d.label;\n};\n\nChartComponent.propTypes = {\n  data: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n  getDatasetAtEvent: PropTypes.func,\n  getElementAtEvent: PropTypes.func,\n  getElementsAtEvent: PropTypes.func,\n  height: PropTypes.number,\n  legend: PropTypes.object,\n  onElementsClick: PropTypes.func,\n  options: PropTypes.object,\n  plugins: PropTypes.arrayOf(PropTypes.object),\n  redraw: PropTypes.bool,\n  type: function type(props, propName, componentName) {\n    if (!Chart.controllers[props[propName]]) {\n      return new Error('Invalid chart type `' + props[propName] + '` supplied to' + ' `' + componentName + '`.');\n    }\n  },\n  width: PropTypes.number,\n  datasetKeyProvider: PropTypes.func\n};\nChartComponent.defaultProps = {\n  legend: {\n    display: true,\n    position: 'bottom'\n  },\n  type: 'doughnut',\n  height: 150,\n  width: 300,\n  redraw: false,\n  options: {},\n  datasetKeyProvider: ChartComponent.getLabelAsKey\n};\nexport default ChartComponent;\nexport var Doughnut = function (_React$Component2) {\n  _inherits(Doughnut, _React$Component2);\n\n  function Doughnut() {\n    _classCallCheck(this, Doughnut);\n\n    return _possibleConstructorReturn(this, _React$Component2.apply(this, arguments));\n  }\n\n  Doughnut.prototype.render = function render() {\n    var _this4 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref) {\n        return _this4.chartInstance = _ref && _ref.chartInstance;\n      },\n      type: 'doughnut'\n    }));\n  };\n\n  return Doughnut;\n}(React.Component);\nexport var Pie = function (_React$Component3) {\n  _inherits(Pie, _React$Component3);\n\n  function Pie() {\n    _classCallCheck(this, Pie);\n\n    return _possibleConstructorReturn(this, _React$Component3.apply(this, arguments));\n  }\n\n  Pie.prototype.render = function render() {\n    var _this6 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref2) {\n        return _this6.chartInstance = _ref2 && _ref2.chartInstance;\n      },\n      type: 'pie'\n    }));\n  };\n\n  return Pie;\n}(React.Component);\nexport var Line = function (_React$Component4) {\n  _inherits(Line, _React$Component4);\n\n  function Line() {\n    _classCallCheck(this, Line);\n\n    return _possibleConstructorReturn(this, _React$Component4.apply(this, arguments));\n  }\n\n  Line.prototype.render = function render() {\n    var _this8 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref3) {\n        return _this8.chartInstance = _ref3 && _ref3.chartInstance;\n      },\n      type: 'line'\n    }));\n  };\n\n  return Line;\n}(React.Component);\nexport var Bar = function (_React$Component5) {\n  _inherits(Bar, _React$Component5);\n\n  function Bar() {\n    _classCallCheck(this, Bar);\n\n    return _possibleConstructorReturn(this, _React$Component5.apply(this, arguments));\n  }\n\n  Bar.prototype.render = function render() {\n    var _this10 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref4) {\n        return _this10.chartInstance = _ref4 && _ref4.chartInstance;\n      },\n      type: 'bar'\n    }));\n  };\n\n  return Bar;\n}(React.Component);\nexport var HorizontalBar = function (_React$Component6) {\n  _inherits(HorizontalBar, _React$Component6);\n\n  function HorizontalBar() {\n    _classCallCheck(this, HorizontalBar);\n\n    return _possibleConstructorReturn(this, _React$Component6.apply(this, arguments));\n  }\n\n  HorizontalBar.prototype.render = function render() {\n    var _this12 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref5) {\n        return _this12.chartInstance = _ref5 && _ref5.chartInstance;\n      },\n      type: 'horizontalBar'\n    }));\n  };\n\n  return HorizontalBar;\n}(React.Component);\nexport var Radar = function (_React$Component7) {\n  _inherits(Radar, _React$Component7);\n\n  function Radar() {\n    _classCallCheck(this, Radar);\n\n    return _possibleConstructorReturn(this, _React$Component7.apply(this, arguments));\n  }\n\n  Radar.prototype.render = function render() {\n    var _this14 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref6) {\n        return _this14.chartInstance = _ref6 && _ref6.chartInstance;\n      },\n      type: 'radar'\n    }));\n  };\n\n  return Radar;\n}(React.Component);\nexport var Polar = function (_React$Component8) {\n  _inherits(Polar, _React$Component8);\n\n  function Polar() {\n    _classCallCheck(this, Polar);\n\n    return _possibleConstructorReturn(this, _React$Component8.apply(this, arguments));\n  }\n\n  Polar.prototype.render = function render() {\n    var _this16 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref7) {\n        return _this16.chartInstance = _ref7 && _ref7.chartInstance;\n      },\n      type: 'polarArea'\n    }));\n  };\n\n  return Polar;\n}(React.Component);\nexport var Bubble = function (_React$Component9) {\n  _inherits(Bubble, _React$Component9);\n\n  function Bubble() {\n    _classCallCheck(this, Bubble);\n\n    return _possibleConstructorReturn(this, _React$Component9.apply(this, arguments));\n  }\n\n  Bubble.prototype.render = function render() {\n    var _this18 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref8) {\n        return _this18.chartInstance = _ref8 && _ref8.chartInstance;\n      },\n      type: 'bubble'\n    }));\n  };\n\n  return Bubble;\n}(React.Component);\nexport var Scatter = function (_React$Component10) {\n  _inherits(Scatter, _React$Component10);\n\n  function Scatter() {\n    _classCallCheck(this, Scatter);\n\n    return _possibleConstructorReturn(this, _React$Component10.apply(this, arguments));\n  }\n\n  Scatter.prototype.render = function render() {\n    var _this20 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref9) {\n        return _this20.chartInstance = _ref9 && _ref9.chartInstance;\n      },\n      type: 'scatter'\n    }));\n  };\n\n  return Scatter;\n}(React.Component);\nexport var defaults = Chart.defaults;\nexport { Chart };","var baseIsEqual = require('./_baseIsEqual');\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\n\n\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;","var Stack = require('./_Stack'),\n    equalArrays = require('./_equalArrays'),\n    equalByTag = require('./_equalByTag'),\n    equalObjects = require('./_equalObjects'),\n    getTag = require('./_getTag'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isTypedArray = require('./isTypedArray');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** `Object#toString` result references. */\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n\n    objIsArr = true;\n    objIsObj = false;\n  }\n\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack());\n    return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n      stack || (stack = new Stack());\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n\n  if (!isSameTag) {\n    return false;\n  }\n\n  stack || (stack = new Stack());\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nmodule.exports = baseIsEqualDeep;","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;","var assocIndexOf = require('./_assocIndexOf');\n/** Used for built-in method references. */\n\n\nvar arrayProto = Array.prototype;\n/** Built-in value references. */\n\nvar splice = arrayProto.splice;\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n\n  var lastIndex = data.length - 1;\n\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\n\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\n\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\n\n\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n\n  return this;\n}\n\nmodule.exports = listCacheSet;","var ListCache = require('./_ListCache');\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\n\n\nfunction stackClear() {\n  this.__data__ = new ListCache();\n  this.size = 0;\n}\n\nmodule.exports = stackClear;","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n  this.size = data.size;\n  return result;\n}\n\nmodule.exports = stackDelete;","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nmodule.exports = stackGet;","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nmodule.exports = stackHas;","var ListCache = require('./_ListCache'),\n    Map = require('./_Map'),\n    MapCache = require('./_MapCache');\n/** Used as the size to enable large array optimizations. */\n\n\nvar LARGE_ARRAY_SIZE = 200;\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\n\nfunction stackSet(key, value) {\n  var data = this.__data__;\n\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n\n    if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n\n    data = this.__data__ = new MapCache(pairs);\n  }\n\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nmodule.exports = stackSet;","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\n\n\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n/** Used to detect host constructors (Safari). */\n\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n/** Used for built-in method references. */\n\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n/** Used to resolve the decompiled source of functions. */\n\nvar funcToString = funcProto.toString;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/** Used to detect if a method is native. */\n\nvar reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&').replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$');\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\n\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;","var Symbol = require('./_Symbol');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\n\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = getRawTag;","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\n\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;","var coreJsData = require('./_coreJsData');\n/** Used to detect methods masquerading as native. */\n\n\nvar maskSrcKey = function () {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? 'Symbol(src)_1.' + uid : '';\n}();\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\n\n\nfunction isMasked(func) {\n  return !!maskSrcKey && maskSrcKey in func;\n}\n\nmodule.exports = isMasked;","var root = require('./_root');\n/** Used to detect overreaching core-js shims. */\n\n\nvar coreJsData = root['__core-js_shared__'];\nmodule.exports = coreJsData;","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;","var Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\n\n\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash(),\n    'map': new (Map || ListCache)(),\n    'string': new Hash()\n  };\n}\n\nmodule.exports = mapCacheClear;","var hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `Hash`.\n\n\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\nmodule.exports = Hash;","var nativeCreate = require('./_nativeCreate');\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\n\n\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;","var nativeCreate = require('./_nativeCreate');\n/** Used to stand-in for `undefined` hash values. */\n\n\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\nfunction hashGet(key) {\n  var data = this.__data__;\n\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;","var nativeCreate = require('./_nativeCreate');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;","var nativeCreate = require('./_nativeCreate');\n/** Used to stand-in for `undefined` hash values. */\n\n\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\n\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;","var getMapData = require('./_getMapData');\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\n\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean' ? value !== '__proto__' : value === null;\n}\n\nmodule.exports = isKeyable;","var getMapData = require('./_getMapData');\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\n\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;","var getMapData = require('./_getMapData');\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\n\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;","var getMapData = require('./_getMapData');\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\n\n\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;","var MapCache = require('./_MapCache'),\n    setCacheAdd = require('./_setCacheAdd'),\n    setCacheHas = require('./_setCacheHas');\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\n\n\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n  this.__data__ = new MapCache();\n\n  while (++index < length) {\n    this.add(values[index]);\n  }\n} // Add methods to `SetCache`.\n\n\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\nmodule.exports = SetCache;","/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\n\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n\n  return this;\n}\n\nmodule.exports = setCacheAdd;","/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nmodule.exports = setCacheHas;","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nmodule.exports = arraySome;","/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nmodule.exports = cacheHas;","var Symbol = require('./_Symbol'),\n    Uint8Array = require('./_Uint8Array'),\n    eq = require('./eq'),\n    equalArrays = require('./_equalArrays'),\n    mapToArray = require('./_mapToArray'),\n    setToArray = require('./_setToArray');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/** `Object#toString` result references. */\n\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {\n        return false;\n      }\n\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == other + '';\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      } // Assume cyclic values are equal.\n\n\n      var stacked = stack.get(object);\n\n      if (stacked) {\n        return stacked == other;\n      }\n\n      bitmask |= COMPARE_UNORDERED_FLAG; // Recursively compare objects (susceptible to call stack limits).\n\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n\n  }\n\n  return false;\n}\n\nmodule.exports = equalByTag;","var root = require('./_root');\n/** Built-in value references. */\n\n\nvar Uint8Array = root.Uint8Array;\nmodule.exports = Uint8Array;","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n  map.forEach(function (value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n  set.forEach(function (value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;","var getAllKeys = require('./_getAllKeys');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n\n  var index = objLength;\n\n  while (index--) {\n    var key = objProps[index];\n\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  } // Assume cyclic values are equal.\n\n\n  var stacked = stack.get(object);\n\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n  var skipCtor = isPartial;\n\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);\n    } // Recursively compare objects (susceptible to call stack limits).\n\n\n    if (!(compared === undefined ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {\n      result = false;\n      break;\n    }\n\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor; // Non `Object` object instances with different constructors are not equal.\n\n    if (objCtor != othCtor && 'constructor' in object && 'constructor' in other && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalObjects;","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbols = require('./_getSymbols'),\n    keys = require('./keys');\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\n\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nmodule.exports = getAllKeys;","var arrayPush = require('./_arrayPush'),\n    isArray = require('./isArray');\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\n\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nmodule.exports = baseGetAllKeys;","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n\n  return array;\n}\n\nmodule.exports = arrayPush;","var arrayFilter = require('./_arrayFilter'),\n    stubArray = require('./stubArray');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Built-in value references. */\n\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\n\nvar getSymbols = !nativeGetSymbols ? stubArray : function (object) {\n  if (object == null) {\n    return [];\n  }\n\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function (symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\nmodule.exports = getSymbols;","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = arrayFilter;","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = stubArray;","var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && ( // Safari 9 has enumerable `arguments.length` in strict mode.\n    key == 'length' || // Node.js 0.10 has enumerable non-index properties on buffers.\n    isBuff && (key == 'offset' || key == 'parent') || // PhantomJS 2 has enumerable non-index properties on typed arrays.\n    isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset') || // Skip index properties.\n    isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n\n  return result;\n}\n\nmodule.exports = baseTimes;","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar argsTag = '[object Arguments]';\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\n\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;","var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n/** Used to identify `toStringTag` values of typed arrays. */\n\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\n\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function (value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;","var freeGlobal = require('./_freeGlobal');\n/** Detect free variable `exports`. */\n\n\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */\n\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\n\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/** Detect free variable `process` from Node.js. */\n\nvar freeProcess = moduleExports && freeGlobal.process;\n/** Used to access faster Node.js helpers. */\n\nvar nodeUtil = function () {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    } // Legacy `process.binding('util')` for Node.js < 10.\n\n\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}();\n\nmodule.exports = nodeUtil;","var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n\n  var result = [];\n\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = baseKeys;","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\n\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = typeof Ctor == 'function' && Ctor.prototype || objectProto;\n  return value === proto;\n}\n\nmodule.exports = isPrototype;","var overArg = require('./_overArg');\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\n\nvar nativeKeys = overArg(Object.keys, Object);\nmodule.exports = nativeKeys;","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function (arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;","var DataView = require('./_DataView'),\n    Map = require('./_Map'),\n    Promise = require('./_Promise'),\n    Set = require('./_Set'),\n    WeakMap = require('./_WeakMap'),\n    baseGetTag = require('./_baseGetTag'),\n    toSource = require('./_toSource');\n/** `Object#toString` result references. */\n\n\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\nvar dataViewTag = '[object DataView]';\n/** Used to detect maps, sets, and weakmaps. */\n\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nvar getTag = baseGetTag; // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n\nif (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map()) != mapTag || Promise && getTag(Promise.resolve()) != promiseTag || Set && getTag(new Set()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) {\n  getTag = function getTag(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString:\n          return dataViewTag;\n\n        case mapCtorString:\n          return mapTag;\n\n        case promiseCtorString:\n          return promiseTag;\n\n        case setCtorString:\n          return setTag;\n\n        case weakMapCtorString:\n          return weakMapTag;\n      }\n    }\n\n    return result;\n  };\n}\n\nmodule.exports = getTag;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar DataView = getNative(root, 'DataView');\nmodule.exports = DataView;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Promise = getNative(root, 'Promise');\nmodule.exports = Promise;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Set = getNative(root, 'Set');\nmodule.exports = Set;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar WeakMap = getNative(root, 'WeakMap');\nmodule.exports = WeakMap;","var createFind = require('./_createFind'),\n    findIndex = require('./findIndex');\n/**\n * Iterates over elements of `collection`, returning the first element\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {*} Returns the matched element, else `undefined`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': true },\n *   { 'user': 'fred',    'age': 40, 'active': false },\n *   { 'user': 'pebbles', 'age': 1,  'active': true }\n * ];\n *\n * _.find(users, function(o) { return o.age < 40; });\n * // => object for 'barney'\n *\n * // The `_.matches` iteratee shorthand.\n * _.find(users, { 'age': 1, 'active': true });\n * // => object for 'pebbles'\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.find(users, ['active', false]);\n * // => object for 'fred'\n *\n * // The `_.property` iteratee shorthand.\n * _.find(users, 'active');\n * // => object for 'barney'\n */\n\n\nvar find = createFind(findIndex);\nmodule.exports = find;","var baseIteratee = require('./_baseIteratee'),\n    isArrayLike = require('./isArrayLike'),\n    keys = require('./keys');\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} findIndexFunc The function to find the collection index.\n * @returns {Function} Returns the new find function.\n */\n\n\nfunction createFind(findIndexFunc) {\n  return function (collection, predicate, fromIndex) {\n    var iterable = Object(collection);\n\n    if (!isArrayLike(collection)) {\n      var iteratee = baseIteratee(predicate, 3);\n      collection = keys(collection);\n\n      predicate = function predicate(key) {\n        return iteratee(iterable[key], key, iterable);\n      };\n    }\n\n    var index = findIndexFunc(collection, predicate, fromIndex);\n    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n  };\n}\n\nmodule.exports = createFind;","var baseIsMatch = require('./_baseIsMatch'),\n    getMatchData = require('./_getMatchData'),\n    matchesStrictComparable = require('./_matchesStrictComparable');\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\n\n\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n\n  return function (object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;","var Stack = require('./_Stack'),\n    baseIsEqual = require('./_baseIsEqual');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\n\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n\n  object = Object(object);\n\n  while (index--) {\n    var data = matchData[index];\n\n    if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {\n      return false;\n    }\n  }\n\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack();\n\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n\n      if (!(result === undefined ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result)) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = baseIsMatch;","var isStrictComparable = require('./_isStrictComparable'),\n    keys = require('./keys');\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\n\n\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n\n  return result;\n}\n\nmodule.exports = getMatchData;","var baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn'),\n    isKey = require('./_isKey'),\n    isStrictComparable = require('./_isStrictComparable'),\n    matchesStrictComparable = require('./_matchesStrictComparable'),\n    toKey = require('./_toKey');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\n\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n\n  return function (object) {\n    var objValue = get(object, path);\n    return objValue === undefined && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;","var baseGet = require('./_baseGet');\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\n\n\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;","var memoizeCapped = require('./_memoizeCapped');\n/** Used to match property names within property paths. */\n\n\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n/** Used to match backslashes in property paths. */\n\nvar reEscapeChar = /\\\\(\\\\)?/g;\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\n\nvar stringToPath = memoizeCapped(function (string) {\n  var result = [];\n\n  if (string.charCodeAt(0) === 46\n  /* . */\n  ) {\n      result.push('');\n    }\n\n  string.replace(rePropName, function (match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : number || match);\n  });\n  return result;\n});\nmodule.exports = stringToPath;","var memoize = require('./memoize');\n/** Used as the maximum memoize cache size. */\n\n\nvar MAX_MEMOIZE_SIZE = 500;\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\n\nfunction memoizeCapped(func) {\n  var result = memoize(func, function (key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n\n    return key;\n  });\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;","var MapCache = require('./_MapCache');\n/** Error message constants. */\n\n\nvar FUNC_ERROR_TEXT = 'Expected a function';\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\n\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || resolver != null && typeof resolver != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n\n  var memoized = function memoized() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n\n  memoized.cache = new (memoize.Cache || MapCache)();\n  return memoized;\n} // Expose `MapCache`.\n\n\nmemoize.Cache = MapCache;\nmodule.exports = memoize;","var baseToString = require('./_baseToString');\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\n\n\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0;\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\n\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n\nmodule.exports = baseToString;","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n\n  return result;\n}\n\nmodule.exports = arrayMap;","var baseHasIn = require('./_baseHasIn'),\n    hasPath = require('./_hasPath');\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\n\n\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;","var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\n\n\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n\n    object = object[key];\n  }\n\n  if (result || ++index != length) {\n    return result;\n  }\n\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;","var baseProperty = require('./_baseProperty'),\n    basePropertyDeep = require('./_basePropertyDeep'),\n    isKey = require('./_isKey'),\n    toKey = require('./_toKey');\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\n\n\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = property;","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function (object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;","var baseGet = require('./_baseGet');\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\n\n\nfunction basePropertyDeep(path) {\n  return function (object) {\n    return baseGet(object, path);\n  };\n}\n\nmodule.exports = basePropertyDeep;","var baseFindIndex = require('./_baseFindIndex'),\n    baseIteratee = require('./_baseIteratee'),\n    toInteger = require('./toInteger');\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\n\nvar nativeMax = Math.max;\n/**\n * This method is like `_.find` except that it returns the index of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.findIndex(users, function(o) { return o.user == 'barney'; });\n * // => 0\n *\n * // The `_.matches` iteratee shorthand.\n * _.findIndex(users, { 'user': 'fred', 'active': false });\n * // => 1\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findIndex(users, ['active', false]);\n * // => 0\n *\n * // The `_.property` iteratee shorthand.\n * _.findIndex(users, 'active');\n * // => 2\n */\n\nfunction findIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n\n  if (!length) {\n    return -1;\n  }\n\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n\n  return baseFindIndex(array, baseIteratee(predicate, 3), index);\n}\n\nmodule.exports = findIndex;","/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while (fromRight ? index-- : ++index < length) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n\n  return -1;\n}\n\nmodule.exports = baseFindIndex;","var toFinite = require('./toFinite');\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\n\n\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n  return result === result ? remainder ? result - remainder : result : 0;\n}\n\nmodule.exports = toInteger;","var toNumber = require('./toNumber');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\n\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n\n  value = toNumber(value);\n\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = value < 0 ? -1 : 1;\n    return sign * MAX_INTEGER;\n  }\n\n  return value === value ? value : 0;\n}\n\nmodule.exports = toFinite;","var isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar NAN = 0 / 0;\n/** Used to match leading and trailing whitespace. */\n\nvar reTrim = /^\\s+|\\s+$/g;\n/** Used to detect bad signed hexadecimal string values. */\n\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n/** Used to detect binary string values. */\n\nvar reIsBinary = /^0b[01]+$/i;\n/** Used to detect octal string values. */\n\nvar reIsOctal = /^0o[0-7]+$/i;\n/** Built-in method references without a dependency on `root`. */\n\nvar freeParseInt = parseInt;\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\n\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n\n  if (isSymbol(value)) {\n    return NAN;\n  }\n\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? other + '' : other;\n  }\n\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;\n}\n\nmodule.exports = toNumber;","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\n\n\nvar keyBy = createAggregator(function (result, value, key) {\n  baseAssignValue(result, key, value);\n});\nmodule.exports = keyBy;","var defineProperty = require('./_defineProperty');\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\n\n\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;","var getNative = require('./_getNative');\n\nvar defineProperty = function () {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}();\n\nmodule.exports = defineProperty;","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\n\n\nfunction createAggregator(setter, initializer) {\n  return function (collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;","var baseEach = require('./_baseEach');\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\n\n\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function (value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;","var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\n\n\nvar baseEach = createBaseEach(baseForOwn);\nmodule.exports = baseEach;","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\n\n\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;","var createBaseFor = require('./_createBaseFor');\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\n\n\nvar baseFor = createBaseFor();\nmodule.exports = baseFor;","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function (object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;","var isArrayLike = require('./isArrayLike');\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\n\n\nfunction createBaseEach(eachFunc, fromRight) {\n  return function (collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while (fromRight ? index-- : ++index < length) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : factory(global['custom-tooltips'] = {});\n})(this, function (exports) {\n  'use strict';\n  /**\n   * --------------------------------------------------------------------------\n   * CoreUI Plugins - Custom Tooltips for Chart.js (v1.2.0): custom-tooltips.js\n   * Licensed under MIT (https://coreui.io/license)\n   * --------------------------------------------------------------------------\n   */\n\n  function CustomTooltips(tooltipModel) {\n    var _this = this; // Add unique id if not exist\n\n\n    var _setCanvasId = function _setCanvasId() {\n      var _idMaker = function _idMaker() {\n        var _hex = 16;\n        var _multiplier = 0x10000;\n        return ((1 + Math.random()) * _multiplier | 0).toString(_hex);\n      };\n\n      var _canvasId = \"_canvas-\" + (_idMaker() + _idMaker());\n\n      _this._chart.canvas.id = _canvasId;\n      return _canvasId;\n    };\n\n    var ClassName = {\n      ABOVE: 'above',\n      BELOW: 'below',\n      CHARTJS_TOOLTIP: 'chartjs-tooltip',\n      NO_TRANSFORM: 'no-transform',\n      TOOLTIP_BODY: 'tooltip-body',\n      TOOLTIP_BODY_ITEM: 'tooltip-body-item',\n      TOOLTIP_BODY_ITEM_COLOR: 'tooltip-body-item-color',\n      TOOLTIP_BODY_ITEM_LABEL: 'tooltip-body-item-label',\n      TOOLTIP_BODY_ITEM_VALUE: 'tooltip-body-item-value',\n      TOOLTIP_HEADER: 'tooltip-header',\n      TOOLTIP_HEADER_ITEM: 'tooltip-header-item'\n    };\n    var Selector = {\n      DIV: 'div',\n      SPAN: 'span',\n      TOOLTIP: (this._chart.canvas.id || _setCanvasId()) + \"-tooltip\"\n    };\n    var tooltip = document.getElementById(Selector.TOOLTIP);\n\n    if (!tooltip) {\n      tooltip = document.createElement('div');\n      tooltip.id = Selector.TOOLTIP;\n      tooltip.className = ClassName.CHARTJS_TOOLTIP;\n\n      this._chart.canvas.parentNode.appendChild(tooltip);\n    } // Hide if no tooltip\n\n\n    if (tooltipModel.opacity === 0) {\n      tooltip.style.opacity = 0;\n      return;\n    } // Set caret Position\n\n\n    tooltip.classList.remove(ClassName.ABOVE, ClassName.BELOW, ClassName.NO_TRANSFORM);\n\n    if (tooltipModel.yAlign) {\n      tooltip.classList.add(tooltipModel.yAlign);\n    } else {\n      tooltip.classList.add(ClassName.NO_TRANSFORM);\n    } // Set Text\n\n\n    if (tooltipModel.body) {\n      var titleLines = tooltipModel.title || [];\n      var tooltipHeader = document.createElement(Selector.DIV);\n      tooltipHeader.className = ClassName.TOOLTIP_HEADER;\n      titleLines.forEach(function (title) {\n        var tooltipHeaderTitle = document.createElement(Selector.DIV);\n        tooltipHeaderTitle.className = ClassName.TOOLTIP_HEADER_ITEM;\n        tooltipHeaderTitle.innerHTML = title;\n        tooltipHeader.appendChild(tooltipHeaderTitle);\n      });\n      var tooltipBody = document.createElement(Selector.DIV);\n      tooltipBody.className = ClassName.TOOLTIP_BODY;\n      var tooltipBodyItems = tooltipModel.body.map(function (item) {\n        return item.lines;\n      });\n      tooltipBodyItems.forEach(function (item, i) {\n        var tooltipBodyItem = document.createElement(Selector.DIV);\n        tooltipBodyItem.className = ClassName.TOOLTIP_BODY_ITEM;\n        var colors = tooltipModel.labelColors[i];\n        var tooltipBodyItemColor = document.createElement(Selector.SPAN);\n        tooltipBodyItemColor.className = ClassName.TOOLTIP_BODY_ITEM_COLOR;\n        tooltipBodyItemColor.style.backgroundColor = colors.backgroundColor;\n        tooltipBodyItem.appendChild(tooltipBodyItemColor);\n\n        if (item[0].split(':').length > 1) {\n          var tooltipBodyItemLabel = document.createElement(Selector.SPAN);\n          tooltipBodyItemLabel.className = ClassName.TOOLTIP_BODY_ITEM_LABEL;\n          tooltipBodyItemLabel.innerHTML = item[0].split(': ')[0];\n          tooltipBodyItem.appendChild(tooltipBodyItemLabel);\n          var tooltipBodyItemValue = document.createElement(Selector.SPAN);\n          tooltipBodyItemValue.className = ClassName.TOOLTIP_BODY_ITEM_VALUE;\n          tooltipBodyItemValue.innerHTML = item[0].split(': ').pop();\n          tooltipBodyItem.appendChild(tooltipBodyItemValue);\n        } else {\n          var _tooltipBodyItemValue = document.createElement(Selector.SPAN);\n\n          _tooltipBodyItemValue.className = ClassName.TOOLTIP_BODY_ITEM_VALUE;\n          _tooltipBodyItemValue.innerHTML = item[0];\n          tooltipBodyItem.appendChild(_tooltipBodyItemValue);\n        }\n\n        tooltipBody.appendChild(tooltipBodyItem);\n      });\n      tooltip.innerHTML = '';\n      tooltip.appendChild(tooltipHeader);\n      tooltip.appendChild(tooltipBody);\n    }\n\n    var positionY = this._chart.canvas.offsetTop;\n    var positionX = this._chart.canvas.offsetLeft; // Display, position, and set styles for font\n\n    tooltip.style.opacity = 1;\n    tooltip.style.left = positionX + tooltipModel.caretX + \"px\";\n    tooltip.style.top = positionY + tooltipModel.caretY + \"px\";\n  }\n\n  exports.CustomTooltips = CustomTooltips;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","/*!\n  * CoreUI v2.1.9 (https://coreui.io)\n  * Copyright 2019 Łukasz Holeczek\n  * Licensed under MIT (https://coreui.io)\n  */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : (global = global || self, factory(global.utilities = {}));\n})(this, function (exports) {\n  'use strict';\n  /**\r\n   * --------------------------------------------------------------------------\r\n   * CoreUI Utilities (v2.1.9): classes.js\r\n   * Licensed under MIT (https://coreui.io/license)\r\n   * --------------------------------------------------------------------------\r\n   */\n\n  var sidebarCssClasses = ['sidebar-show', 'sidebar-sm-show', 'sidebar-md-show', 'sidebar-lg-show', 'sidebar-xl-show'];\n  var asideMenuCssClasses = ['aside-menu-show', 'aside-menu-sm-show', 'aside-menu-md-show', 'aside-menu-lg-show', 'aside-menu-xl-show'];\n  var validBreakpoints = ['sm', 'md', 'lg', 'xl'];\n\n  function checkBreakpoint(breakpoint, list) {\n    return list.indexOf(breakpoint) > -1;\n  }\n\n  function createCommonjsModule(fn, module) {\n    return module = {\n      exports: {}\n    }, fn(module, module.exports), module.exports;\n  }\n\n  var _core = createCommonjsModule(function (module) {\n    var core = module.exports = {\n      version: '2.6.5'\n    };\n    if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n  });\n\n  var _core_1 = _core.version;\n\n  var _global = createCommonjsModule(function (module) {\n    // https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\n    var global = module.exports = typeof window != 'undefined' && window.Math == Math ? window : typeof self != 'undefined' && self.Math == Math ? self // eslint-disable-next-line no-new-func\n    : Function('return this')();\n    if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n  });\n\n  var _shared = createCommonjsModule(function (module) {\n    var SHARED = '__core-js_shared__';\n    var store = _global[SHARED] || (_global[SHARED] = {});\n    (module.exports = function (key, value) {\n      return store[key] || (store[key] = value !== undefined ? value : {});\n    })('versions', []).push({\n      version: _core.version,\n      mode: 'global',\n      copyright: '© 2019 Denis Pushkarev (zloirock.ru)'\n    });\n  });\n\n  var id = 0;\n  var px = Math.random();\n\n  var _uid = function _uid(key) {\n    return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n  };\n\n  var _wks = createCommonjsModule(function (module) {\n    var store = _shared('wks');\n\n    var Symbol = _global.Symbol;\n    var USE_SYMBOL = typeof Symbol == 'function';\n\n    var $exports = module.exports = function (name) {\n      return store[name] || (store[name] = USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : _uid)('Symbol.' + name));\n    };\n\n    $exports.store = store;\n  });\n\n  var _isObject = function _isObject(it) {\n    return typeof it === 'object' ? it !== null : typeof it === 'function';\n  };\n\n  var _anObject = function _anObject(it) {\n    if (!_isObject(it)) throw TypeError(it + ' is not an object!');\n    return it;\n  };\n\n  var _fails = function _fails(exec) {\n    try {\n      return !!exec();\n    } catch (e) {\n      return true;\n    }\n  }; // Thank's IE8 for his funny defineProperty\n\n\n  var _descriptors = !_fails(function () {\n    return Object.defineProperty({}, 'a', {\n      get: function get() {\n        return 7;\n      }\n    }).a != 7;\n  });\n\n  var document$1 = _global.document; // typeof document.createElement is 'object' in old IE\n\n  var is = _isObject(document$1) && _isObject(document$1.createElement);\n\n  var _domCreate = function _domCreate(it) {\n    return is ? document$1.createElement(it) : {};\n  };\n\n  var _ie8DomDefine = !_descriptors && !_fails(function () {\n    return Object.defineProperty(_domCreate('div'), 'a', {\n      get: function get() {\n        return 7;\n      }\n    }).a != 7;\n  }); // 7.1.1 ToPrimitive(input [, PreferredType])\n  // instead of the ES6 spec version, we didn't implement @@toPrimitive case\n  // and the second argument - flag - preferred type is a string\n\n\n  var _toPrimitive = function _toPrimitive(it, S) {\n    if (!_isObject(it)) return it;\n    var fn, val;\n    if (S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it))) return val;\n    if (typeof (fn = it.valueOf) == 'function' && !_isObject(val = fn.call(it))) return val;\n    if (!S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it))) return val;\n    throw TypeError(\"Can't convert object to primitive value\");\n  };\n\n  var dP = Object.defineProperty;\n  var f = _descriptors ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n    _anObject(O);\n\n    P = _toPrimitive(P, true);\n\n    _anObject(Attributes);\n\n    if (_ie8DomDefine) try {\n      return dP(O, P, Attributes);\n    } catch (e) {\n      /* empty */\n    }\n    if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n    if ('value' in Attributes) O[P] = Attributes.value;\n    return O;\n  };\n  var _objectDp = {\n    f: f\n  };\n\n  var _propertyDesc = function _propertyDesc(bitmap, value) {\n    return {\n      enumerable: !(bitmap & 1),\n      configurable: !(bitmap & 2),\n      writable: !(bitmap & 4),\n      value: value\n    };\n  };\n\n  var _hide = _descriptors ? function (object, key, value) {\n    return _objectDp.f(object, key, _propertyDesc(1, value));\n  } : function (object, key, value) {\n    object[key] = value;\n    return object;\n  }; // 22.1.3.31 Array.prototype[@@unscopables]\n\n\n  var UNSCOPABLES = _wks('unscopables');\n\n  var ArrayProto = Array.prototype;\n  if (ArrayProto[UNSCOPABLES] == undefined) _hide(ArrayProto, UNSCOPABLES, {});\n\n  var _addToUnscopables = function _addToUnscopables(key) {\n    ArrayProto[UNSCOPABLES][key] = true;\n  };\n\n  var _iterStep = function _iterStep(done, value) {\n    return {\n      value: value,\n      done: !!done\n    };\n  };\n\n  var _iterators = {};\n  var toString = {}.toString;\n\n  var _cof = function _cof(it) {\n    return toString.call(it).slice(8, -1);\n  }; // fallback for non-array-like ES3 and non-enumerable old V8 strings\n  // eslint-disable-next-line no-prototype-builtins\n\n\n  var _iobject = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n    return _cof(it) == 'String' ? it.split('') : Object(it);\n  }; // 7.2.1 RequireObjectCoercible(argument)\n\n\n  var _defined = function _defined(it) {\n    if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n    return it;\n  }; // to indexed object, toObject with fallback for non-array-like ES3 strings\n\n\n  var _toIobject = function _toIobject(it) {\n    return _iobject(_defined(it));\n  };\n\n  var hasOwnProperty = {}.hasOwnProperty;\n\n  var _has = function _has(it, key) {\n    return hasOwnProperty.call(it, key);\n  };\n\n  var _functionToString = _shared('native-function-to-string', Function.toString);\n\n  var _redefine = createCommonjsModule(function (module) {\n    var SRC = _uid('src');\n\n    var TO_STRING = 'toString';\n\n    var TPL = ('' + _functionToString).split(TO_STRING);\n\n    _core.inspectSource = function (it) {\n      return _functionToString.call(it);\n    };\n\n    (module.exports = function (O, key, val, safe) {\n      var isFunction = typeof val == 'function';\n      if (isFunction) _has(val, 'name') || _hide(val, 'name', key);\n      if (O[key] === val) return;\n      if (isFunction) _has(val, SRC) || _hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n\n      if (O === _global) {\n        O[key] = val;\n      } else if (!safe) {\n        delete O[key];\n\n        _hide(O, key, val);\n      } else if (O[key]) {\n        O[key] = val;\n      } else {\n        _hide(O, key, val);\n      } // add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n\n    })(Function.prototype, TO_STRING, function toString() {\n      return typeof this == 'function' && this[SRC] || _functionToString.call(this);\n    });\n  });\n\n  var _aFunction = function _aFunction(it) {\n    if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n    return it;\n  }; // optional / simple context binding\n\n\n  var _ctx = function _ctx(fn, that, length) {\n    _aFunction(fn);\n\n    if (that === undefined) return fn;\n\n    switch (length) {\n      case 1:\n        return function (a) {\n          return fn.call(that, a);\n        };\n\n      case 2:\n        return function (a, b) {\n          return fn.call(that, a, b);\n        };\n\n      case 3:\n        return function (a, b, c) {\n          return fn.call(that, a, b, c);\n        };\n    }\n\n    return function ()\n    /* ...args */\n    {\n      return fn.apply(that, arguments);\n    };\n  };\n\n  var PROTOTYPE = 'prototype';\n\n  var $export = function $export(type, name, source) {\n    var IS_FORCED = type & $export.F;\n    var IS_GLOBAL = type & $export.G;\n    var IS_STATIC = type & $export.S;\n    var IS_PROTO = type & $export.P;\n    var IS_BIND = type & $export.B;\n    var target = IS_GLOBAL ? _global : IS_STATIC ? _global[name] || (_global[name] = {}) : (_global[name] || {})[PROTOTYPE];\n    var exports = IS_GLOBAL ? _core : _core[name] || (_core[name] = {});\n    var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});\n    var key, own, out, exp;\n    if (IS_GLOBAL) source = name;\n\n    for (key in source) {\n      // contains in native\n      own = !IS_FORCED && target && target[key] !== undefined; // export native or passed\n\n      out = (own ? target : source)[key]; // bind timers to global for call from export context\n\n      exp = IS_BIND && own ? _ctx(out, _global) : IS_PROTO && typeof out == 'function' ? _ctx(Function.call, out) : out; // extend global\n\n      if (target) _redefine(target, key, out, type & $export.U); // export\n\n      if (exports[key] != out) _hide(exports, key, exp);\n      if (IS_PROTO && expProto[key] != out) expProto[key] = out;\n    }\n  };\n\n  _global.core = _core; // type bitmap\n\n  $export.F = 1; // forced\n\n  $export.G = 2; // global\n\n  $export.S = 4; // static\n\n  $export.P = 8; // proto\n\n  $export.B = 16; // bind\n\n  $export.W = 32; // wrap\n\n  $export.U = 64; // safe\n\n  $export.R = 128; // real proto method for `library`\n\n  var _export = $export; // 7.1.4 ToInteger\n\n  var ceil = Math.ceil;\n  var floor = Math.floor;\n\n  var _toInteger = function _toInteger(it) {\n    return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n  }; // 7.1.15 ToLength\n\n\n  var min = Math.min;\n\n  var _toLength = function _toLength(it) {\n    return it > 0 ? min(_toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n  };\n\n  var max = Math.max;\n  var min$1 = Math.min;\n\n  var _toAbsoluteIndex = function _toAbsoluteIndex(index, length) {\n    index = _toInteger(index);\n    return index < 0 ? max(index + length, 0) : min$1(index, length);\n  }; // false -> Array#indexOf\n  // true  -> Array#includes\n\n\n  var _arrayIncludes = function _arrayIncludes(IS_INCLUDES) {\n    return function ($this, el, fromIndex) {\n      var O = _toIobject($this);\n\n      var length = _toLength(O.length);\n\n      var index = _toAbsoluteIndex(fromIndex, length);\n\n      var value; // Array#includes uses SameValueZero equality algorithm\n      // eslint-disable-next-line no-self-compare\n\n      if (IS_INCLUDES && el != el) while (length > index) {\n        value = O[index++]; // eslint-disable-next-line no-self-compare\n\n        if (value != value) return true; // Array#indexOf ignores holes, Array#includes - not\n      } else for (; length > index; index++) {\n        if (IS_INCLUDES || index in O) {\n          if (O[index] === el) return IS_INCLUDES || index || 0;\n        }\n      }\n      return !IS_INCLUDES && -1;\n    };\n  };\n\n  var shared = _shared('keys');\n\n  var _sharedKey = function _sharedKey(key) {\n    return shared[key] || (shared[key] = _uid(key));\n  };\n\n  var arrayIndexOf = _arrayIncludes(false);\n\n  var IE_PROTO = _sharedKey('IE_PROTO');\n\n  var _objectKeysInternal = function _objectKeysInternal(object, names) {\n    var O = _toIobject(object);\n\n    var i = 0;\n    var result = [];\n    var key;\n\n    for (key in O) {\n      if (key != IE_PROTO) _has(O, key) && result.push(key);\n    } // Don't enum bug & hidden keys\n\n\n    while (names.length > i) {\n      if (_has(O, key = names[i++])) {\n        ~arrayIndexOf(result, key) || result.push(key);\n      }\n    }\n\n    return result;\n  }; // IE 8- don't enum bug keys\n\n\n  var _enumBugKeys = 'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'.split(','); // 19.1.2.14 / 15.2.3.14 Object.keys(O)\n\n\n  var _objectKeys = Object.keys || function keys(O) {\n    return _objectKeysInternal(O, _enumBugKeys);\n  };\n\n  var _objectDps = _descriptors ? Object.defineProperties : function defineProperties(O, Properties) {\n    _anObject(O);\n\n    var keys = _objectKeys(Properties);\n\n    var length = keys.length;\n    var i = 0;\n    var P;\n\n    while (length > i) {\n      _objectDp.f(O, P = keys[i++], Properties[P]);\n    }\n\n    return O;\n  };\n\n  var document$2 = _global.document;\n\n  var _html = document$2 && document$2.documentElement; // 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\n\n\n  var IE_PROTO$1 = _sharedKey('IE_PROTO');\n\n  var Empty = function Empty() {\n    /* empty */\n  };\n\n  var PROTOTYPE$1 = 'prototype'; // Create object with fake `null` prototype: use iframe Object with cleared prototype\n\n  var _createDict = function createDict() {\n    // Thrash, waste and sodomy: IE GC bug\n    var iframe = _domCreate('iframe');\n\n    var i = _enumBugKeys.length;\n    var lt = '<';\n    var gt = '>';\n    var iframeDocument;\n    iframe.style.display = 'none';\n\n    _html.appendChild(iframe);\n\n    iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n    // createDict = iframe.contentWindow.Object;\n    // html.removeChild(iframe);\n\n    iframeDocument = iframe.contentWindow.document;\n    iframeDocument.open();\n    iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n    iframeDocument.close();\n    _createDict = iframeDocument.F;\n\n    while (i--) {\n      delete _createDict[PROTOTYPE$1][_enumBugKeys[i]];\n    }\n\n    return _createDict();\n  };\n\n  var _objectCreate = Object.create || function create(O, Properties) {\n    var result;\n\n    if (O !== null) {\n      Empty[PROTOTYPE$1] = _anObject(O);\n      result = new Empty();\n      Empty[PROTOTYPE$1] = null; // add \"__proto__\" for Object.getPrototypeOf polyfill\n\n      result[IE_PROTO$1] = O;\n    } else result = _createDict();\n\n    return Properties === undefined ? result : _objectDps(result, Properties);\n  };\n\n  var def = _objectDp.f;\n\n  var TAG = _wks('toStringTag');\n\n  var _setToStringTag = function _setToStringTag(it, tag, stat) {\n    if (it && !_has(it = stat ? it : it.prototype, TAG)) def(it, TAG, {\n      configurable: true,\n      value: tag\n    });\n  };\n\n  var IteratorPrototype = {}; // 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\n\n  _hide(IteratorPrototype, _wks('iterator'), function () {\n    return this;\n  });\n\n  var _iterCreate = function _iterCreate(Constructor, NAME, next) {\n    Constructor.prototype = _objectCreate(IteratorPrototype, {\n      next: _propertyDesc(1, next)\n    });\n\n    _setToStringTag(Constructor, NAME + ' Iterator');\n  }; // 7.1.13 ToObject(argument)\n\n\n  var _toObject = function _toObject(it) {\n    return Object(_defined(it));\n  }; // 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\n\n\n  var IE_PROTO$2 = _sharedKey('IE_PROTO');\n\n  var ObjectProto = Object.prototype;\n\n  var _objectGpo = Object.getPrototypeOf || function (O) {\n    O = _toObject(O);\n    if (_has(O, IE_PROTO$2)) return O[IE_PROTO$2];\n\n    if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n      return O.constructor.prototype;\n    }\n\n    return O instanceof Object ? ObjectProto : null;\n  };\n\n  var ITERATOR = _wks('iterator');\n\n  var BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\n\n  var FF_ITERATOR = '@@iterator';\n  var KEYS = 'keys';\n  var VALUES = 'values';\n\n  var returnThis = function returnThis() {\n    return this;\n  };\n\n  var _iterDefine = function _iterDefine(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n    _iterCreate(Constructor, NAME, next);\n\n    var getMethod = function getMethod(kind) {\n      if (!BUGGY && kind in proto) return proto[kind];\n\n      switch (kind) {\n        case KEYS:\n          return function keys() {\n            return new Constructor(this, kind);\n          };\n\n        case VALUES:\n          return function values() {\n            return new Constructor(this, kind);\n          };\n      }\n\n      return function entries() {\n        return new Constructor(this, kind);\n      };\n    };\n\n    var TAG = NAME + ' Iterator';\n    var DEF_VALUES = DEFAULT == VALUES;\n    var VALUES_BUG = false;\n    var proto = Base.prototype;\n    var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n    var $default = $native || getMethod(DEFAULT);\n    var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n    var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n    var methods, key, IteratorPrototype; // Fix native\n\n    if ($anyNative) {\n      IteratorPrototype = _objectGpo($anyNative.call(new Base()));\n\n      if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n        // Set @@toStringTag to native iterators\n        _setToStringTag(IteratorPrototype, TAG, true); // fix for some old engines\n\n\n        if (typeof IteratorPrototype[ITERATOR] != 'function') _hide(IteratorPrototype, ITERATOR, returnThis);\n      }\n    } // fix Array#{values, @@iterator}.name in V8 / FF\n\n\n    if (DEF_VALUES && $native && $native.name !== VALUES) {\n      VALUES_BUG = true;\n\n      $default = function values() {\n        return $native.call(this);\n      };\n    } // Define iterator\n\n\n    if (BUGGY || VALUES_BUG || !proto[ITERATOR]) {\n      _hide(proto, ITERATOR, $default);\n    } // Plug for library\n\n\n    _iterators[NAME] = $default;\n    _iterators[TAG] = returnThis;\n\n    if (DEFAULT) {\n      methods = {\n        values: DEF_VALUES ? $default : getMethod(VALUES),\n        keys: IS_SET ? $default : getMethod(KEYS),\n        entries: $entries\n      };\n      if (FORCED) for (key in methods) {\n        if (!(key in proto)) _redefine(proto, key, methods[key]);\n      } else _export(_export.P + _export.F * (BUGGY || VALUES_BUG), NAME, methods);\n    }\n\n    return methods;\n  }; // 22.1.3.4 Array.prototype.entries()\n  // 22.1.3.13 Array.prototype.keys()\n  // 22.1.3.29 Array.prototype.values()\n  // 22.1.3.30 Array.prototype[@@iterator]()\n\n\n  var es6_array_iterator = _iterDefine(Array, 'Array', function (iterated, kind) {\n    this._t = _toIobject(iterated); // target\n\n    this._i = 0; // next index\n\n    this._k = kind; // kind\n    // 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n  }, function () {\n    var O = this._t;\n    var kind = this._k;\n    var index = this._i++;\n\n    if (!O || index >= O.length) {\n      this._t = undefined;\n      return _iterStep(1);\n    }\n\n    if (kind == 'keys') return _iterStep(0, index);\n    if (kind == 'values') return _iterStep(0, O[index]);\n    return _iterStep(0, [index, O[index]]);\n  }, 'values'); // argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\n\n\n  _iterators.Arguments = _iterators.Array;\n\n  _addToUnscopables('keys');\n\n  _addToUnscopables('values');\n\n  _addToUnscopables('entries');\n\n  var ITERATOR$1 = _wks('iterator');\n\n  var TO_STRING_TAG = _wks('toStringTag');\n\n  var ArrayValues = _iterators.Array;\n  var DOMIterables = {\n    CSSRuleList: true,\n    // TODO: Not spec compliant, should be false.\n    CSSStyleDeclaration: false,\n    CSSValueList: false,\n    ClientRectList: false,\n    DOMRectList: false,\n    DOMStringList: false,\n    DOMTokenList: true,\n    DataTransferItemList: false,\n    FileList: false,\n    HTMLAllCollection: false,\n    HTMLCollection: false,\n    HTMLFormElement: false,\n    HTMLSelectElement: false,\n    MediaList: true,\n    // TODO: Not spec compliant, should be false.\n    MimeTypeArray: false,\n    NamedNodeMap: false,\n    NodeList: true,\n    PaintRequestList: false,\n    Plugin: false,\n    PluginArray: false,\n    SVGLengthList: false,\n    SVGNumberList: false,\n    SVGPathSegList: false,\n    SVGPointList: false,\n    SVGStringList: false,\n    SVGTransformList: false,\n    SourceBufferList: false,\n    StyleSheetList: true,\n    // TODO: Not spec compliant, should be false.\n    TextTrackCueList: false,\n    TextTrackList: false,\n    TouchList: false\n  };\n\n  for (var collections = _objectKeys(DOMIterables), i = 0; i < collections.length; i++) {\n    var NAME = collections[i];\n    var explicit = DOMIterables[NAME];\n    var Collection = _global[NAME];\n    var proto = Collection && Collection.prototype;\n    var key;\n\n    if (proto) {\n      if (!proto[ITERATOR$1]) _hide(proto, ITERATOR$1, ArrayValues);\n      if (!proto[TO_STRING_TAG]) _hide(proto, TO_STRING_TAG, NAME);\n      _iterators[NAME] = ArrayValues;\n      if (explicit) for (key in es6_array_iterator) {\n        if (!proto[key]) _redefine(proto, key, es6_array_iterator[key], true);\n      }\n    }\n  } // getting tag from 19.1.3.6 Object.prototype.toString()\n\n\n  var TAG$1 = _wks('toStringTag'); // ES3 wrong here\n\n\n  var ARG = _cof(function () {\n    return arguments;\n  }()) == 'Arguments'; // fallback for IE11 Script Access Denied error\n\n  var tryGet = function tryGet(it, key) {\n    try {\n      return it[key];\n    } catch (e) {\n      /* empty */\n    }\n  };\n\n  var _classof = function _classof(it) {\n    var O, T, B;\n    return it === undefined ? 'Undefined' : it === null ? 'Null' // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG$1)) == 'string' ? T // builtinTag case\n    : ARG ? _cof(O) // ES3 arguments fallback\n    : (B = _cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n  }; // 19.1.3.6 Object.prototype.toString()\n\n\n  var test = {};\n  test[_wks('toStringTag')] = 'z';\n\n  if (test + '' != '[object z]') {\n    _redefine(Object.prototype, 'toString', function toString() {\n      return '[object ' + _classof(this) + ']';\n    }, true);\n  } // most Object methods by ES6 should accept primitives\n\n\n  var _objectSap = function _objectSap(KEY, exec) {\n    var fn = (_core.Object || {})[KEY] || Object[KEY];\n    var exp = {};\n    exp[KEY] = exec(fn);\n\n    _export(_export.S + _export.F * _fails(function () {\n      fn(1);\n    }), 'Object', exp);\n  }; // 19.1.2.14 Object.keys(O)\n\n\n  _objectSap('keys', function () {\n    return function keys(it) {\n      return _objectKeys(_toObject(it));\n    };\n  });\n\n  var f$1 = Object.getOwnPropertySymbols;\n  var _objectGops = {\n    f: f$1\n  };\n  var f$2 = {}.propertyIsEnumerable;\n  var _objectPie = {\n    f: f$2\n  }; // 19.1.2.1 Object.assign(target, source, ...)\n\n  var $assign = Object.assign; // should work with symbols and should have deterministic property order (V8 bug)\n\n  var _objectAssign = !$assign || _fails(function () {\n    var A = {};\n    var B = {}; // eslint-disable-next-line no-undef\n\n    var S = Symbol();\n    var K = 'abcdefghijklmnopqrst';\n    A[S] = 7;\n    K.split('').forEach(function (k) {\n      B[k] = k;\n    });\n    return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n  }) ? function assign(target, source) {\n    // eslint-disable-line no-unused-vars\n    var T = _toObject(target);\n\n    var aLen = arguments.length;\n    var index = 1;\n    var getSymbols = _objectGops.f;\n    var isEnum = _objectPie.f;\n\n    while (aLen > index) {\n      var S = _iobject(arguments[index++]);\n\n      var keys = getSymbols ? _objectKeys(S).concat(getSymbols(S)) : _objectKeys(S);\n      var length = keys.length;\n      var j = 0;\n      var key;\n\n      while (length > j) {\n        if (isEnum.call(S, key = keys[j++])) T[key] = S[key];\n      }\n    }\n\n    return T;\n  } : $assign; // 19.1.3.1 Object.assign(target, source)\n\n\n  _export(_export.S + _export.F, 'Object', {\n    assign: _objectAssign\n  });\n\n  var deepObjectsMerge = function deepObjectsMerge(target, source) {\n    // Iterate through `source` properties and if an `Object` set property to merge of `target` and `source` properties\n    var _arr = Object.keys(source);\n\n    for (var _i = 0; _i < _arr.length; _i++) {\n      var key = _arr[_i];\n\n      if (source[key] instanceof Object) {\n        Object.assign(source[key], deepObjectsMerge(target[key], source[key]));\n      }\n    } // Join `target` and modified `source`\n\n\n    Object.assign(target || {}, source);\n    return target;\n  }; // true  -> String#at\n  // false -> String#codePointAt\n\n\n  var _stringAt = function _stringAt(TO_STRING) {\n    return function (that, pos) {\n      var s = String(_defined(that));\n\n      var i = _toInteger(pos);\n\n      var l = s.length;\n      var a, b;\n      if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n      a = s.charCodeAt(i);\n      return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff ? TO_STRING ? s.charAt(i) : a : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n    };\n  };\n\n  var at = _stringAt(true); // `AdvanceStringIndex` abstract operation\n  // https://tc39.github.io/ecma262/#sec-advancestringindex\n\n\n  var _advanceStringIndex = function _advanceStringIndex(S, index, unicode) {\n    return index + (unicode ? at(S, index).length : 1);\n  };\n\n  var builtinExec = RegExp.prototype.exec; // `RegExpExec` abstract operation\n  // https://tc39.github.io/ecma262/#sec-regexpexec\n\n  var _regexpExecAbstract = function _regexpExecAbstract(R, S) {\n    var exec = R.exec;\n\n    if (typeof exec === 'function') {\n      var result = exec.call(R, S);\n\n      if (typeof result !== 'object') {\n        throw new TypeError('RegExp exec method returned something other than an Object or null');\n      }\n\n      return result;\n    }\n\n    if (_classof(R) !== 'RegExp') {\n      throw new TypeError('RegExp#exec called on incompatible receiver');\n    }\n\n    return builtinExec.call(R, S);\n  }; // 21.2.5.3 get RegExp.prototype.flags\n\n\n  var _flags = function _flags() {\n    var that = _anObject(this);\n\n    var result = '';\n    if (that.global) result += 'g';\n    if (that.ignoreCase) result += 'i';\n    if (that.multiline) result += 'm';\n    if (that.unicode) result += 'u';\n    if (that.sticky) result += 'y';\n    return result;\n  };\n\n  var nativeExec = RegExp.prototype.exec; // This always refers to the native implementation, because the\n  // String#replace polyfill uses ./fix-regexp-well-known-symbol-logic.js,\n  // which loads this file before patching the method.\n\n  var nativeReplace = String.prototype.replace;\n  var patchedExec = nativeExec;\n  var LAST_INDEX = 'lastIndex';\n\n  var UPDATES_LAST_INDEX_WRONG = function () {\n    var re1 = /a/,\n        re2 = /b*/g;\n    nativeExec.call(re1, 'a');\n    nativeExec.call(re2, 'a');\n    return re1[LAST_INDEX] !== 0 || re2[LAST_INDEX] !== 0;\n  }(); // nonparticipating capturing group, copied from es5-shim's String#split patch.\n\n\n  var NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;\n  var PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED;\n\n  if (PATCH) {\n    patchedExec = function exec(str) {\n      var re = this;\n      var lastIndex, reCopy, match, i;\n\n      if (NPCG_INCLUDED) {\n        reCopy = new RegExp('^' + re.source + '$(?!\\\\s)', _flags.call(re));\n      }\n\n      if (UPDATES_LAST_INDEX_WRONG) lastIndex = re[LAST_INDEX];\n      match = nativeExec.call(re, str);\n\n      if (UPDATES_LAST_INDEX_WRONG && match) {\n        re[LAST_INDEX] = re.global ? match.index + match[0].length : lastIndex;\n      }\n\n      if (NPCG_INCLUDED && match && match.length > 1) {\n        // Fix browsers whose `exec` methods don't consistently return `undefined`\n        // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/\n        // eslint-disable-next-line no-loop-func\n        nativeReplace.call(match[0], reCopy, function () {\n          for (i = 1; i < arguments.length - 2; i++) {\n            if (arguments[i] === undefined) match[i] = undefined;\n          }\n        });\n      }\n\n      return match;\n    };\n  }\n\n  var _regexpExec = patchedExec;\n\n  _export({\n    target: 'RegExp',\n    proto: true,\n    forced: _regexpExec !== /./.exec\n  }, {\n    exec: _regexpExec\n  });\n\n  var SPECIES = _wks('species');\n\n  var REPLACE_SUPPORTS_NAMED_GROUPS = !_fails(function () {\n    // #replace needs built-in support for named groups.\n    // #match works fine because it just return the exec results, even if it has\n    // a \"grops\" property.\n    var re = /./;\n\n    re.exec = function () {\n      var result = [];\n      result.groups = {\n        a: '7'\n      };\n      return result;\n    };\n\n    return ''.replace(re, '$<a>') !== '7';\n  });\n\n  var SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = function () {\n    // Chrome 51 has a buggy \"split\" implementation when RegExp#exec !== nativeExec\n    var re = /(?:)/;\n    var originalExec = re.exec;\n\n    re.exec = function () {\n      return originalExec.apply(this, arguments);\n    };\n\n    var result = 'ab'.split(re);\n    return result.length === 2 && result[0] === 'a' && result[1] === 'b';\n  }();\n\n  var _fixReWks = function _fixReWks(KEY, length, exec) {\n    var SYMBOL = _wks(KEY);\n\n    var DELEGATES_TO_SYMBOL = !_fails(function () {\n      // String methods call symbol-named RegEp methods\n      var O = {};\n\n      O[SYMBOL] = function () {\n        return 7;\n      };\n\n      return ''[KEY](O) != 7;\n    });\n    var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL ? !_fails(function () {\n      // Symbol-named RegExp methods call .exec\n      var execCalled = false;\n      var re = /a/;\n\n      re.exec = function () {\n        execCalled = true;\n        return null;\n      };\n\n      if (KEY === 'split') {\n        // RegExp[@@split] doesn't call the regex's exec method, but first creates\n        // a new one. We need to return the patched regex when creating the new one.\n        re.constructor = {};\n\n        re.constructor[SPECIES] = function () {\n          return re;\n        };\n      }\n\n      re[SYMBOL]('');\n      return !execCalled;\n    }) : undefined;\n\n    if (!DELEGATES_TO_SYMBOL || !DELEGATES_TO_EXEC || KEY === 'replace' && !REPLACE_SUPPORTS_NAMED_GROUPS || KEY === 'split' && !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC) {\n      var nativeRegExpMethod = /./[SYMBOL];\n      var fns = exec(_defined, SYMBOL, ''[KEY], function maybeCallNative(nativeMethod, regexp, str, arg2, forceStringMethod) {\n        if (regexp.exec === _regexpExec) {\n          if (DELEGATES_TO_SYMBOL && !forceStringMethod) {\n            // The native String method already delegates to @@method (this\n            // polyfilled function), leasing to infinite recursion.\n            // We avoid it by directly calling the native @@method method.\n            return {\n              done: true,\n              value: nativeRegExpMethod.call(regexp, str, arg2)\n            };\n          }\n\n          return {\n            done: true,\n            value: nativeMethod.call(str, regexp, arg2)\n          };\n        }\n\n        return {\n          done: false\n        };\n      });\n      var strfn = fns[0];\n      var rxfn = fns[1];\n\n      _redefine(String.prototype, KEY, strfn);\n\n      _hide(RegExp.prototype, SYMBOL, length == 2 // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)\n      // 21.2.5.11 RegExp.prototype[@@split](string, limit)\n      ? function (string, arg) {\n        return rxfn.call(string, this, arg);\n      } // 21.2.5.6 RegExp.prototype[@@match](string)\n      // 21.2.5.9 RegExp.prototype[@@search](string)\n      : function (string) {\n        return rxfn.call(string, this);\n      });\n    }\n  };\n\n  var max$1 = Math.max;\n  var min$2 = Math.min;\n  var floor$1 = Math.floor;\n  var SUBSTITUTION_SYMBOLS = /\\$([$&`']|\\d\\d?|<[^>]*>)/g;\n  var SUBSTITUTION_SYMBOLS_NO_NAMED = /\\$([$&`']|\\d\\d?)/g;\n\n  var maybeToString = function maybeToString(it) {\n    return it === undefined ? it : String(it);\n  }; // @@replace logic\n\n\n  _fixReWks('replace', 2, function (defined, REPLACE, $replace, maybeCallNative) {\n    return [// `String.prototype.replace` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.replace\n    function replace(searchValue, replaceValue) {\n      var O = defined(this);\n      var fn = searchValue == undefined ? undefined : searchValue[REPLACE];\n      return fn !== undefined ? fn.call(searchValue, O, replaceValue) : $replace.call(String(O), searchValue, replaceValue);\n    }, // `RegExp.prototype[@@replace]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@replace\n    function (regexp, replaceValue) {\n      var res = maybeCallNative($replace, regexp, this, replaceValue);\n      if (res.done) return res.value;\n\n      var rx = _anObject(regexp);\n\n      var S = String(this);\n      var functionalReplace = typeof replaceValue === 'function';\n      if (!functionalReplace) replaceValue = String(replaceValue);\n      var global = rx.global;\n\n      if (global) {\n        var fullUnicode = rx.unicode;\n        rx.lastIndex = 0;\n      }\n\n      var results = [];\n\n      while (true) {\n        var result = _regexpExecAbstract(rx, S);\n\n        if (result === null) break;\n        results.push(result);\n        if (!global) break;\n        var matchStr = String(result[0]);\n        if (matchStr === '') rx.lastIndex = _advanceStringIndex(S, _toLength(rx.lastIndex), fullUnicode);\n      }\n\n      var accumulatedResult = '';\n      var nextSourcePosition = 0;\n\n      for (var i = 0; i < results.length; i++) {\n        result = results[i];\n        var matched = String(result[0]);\n        var position = max$1(min$2(_toInteger(result.index), S.length), 0);\n        var captures = []; // NOTE: This is equivalent to\n        //   captures = result.slice(1).map(maybeToString)\n        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in\n        // the slice polyfill when slicing native arrays) \"doesn't work\" in safari 9 and\n        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.\n\n        for (var j = 1; j < result.length; j++) {\n          captures.push(maybeToString(result[j]));\n        }\n\n        var namedCaptures = result.groups;\n\n        if (functionalReplace) {\n          var replacerArgs = [matched].concat(captures, position, S);\n          if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);\n          var replacement = String(replaceValue.apply(undefined, replacerArgs));\n        } else {\n          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);\n        }\n\n        if (position >= nextSourcePosition) {\n          accumulatedResult += S.slice(nextSourcePosition, position) + replacement;\n          nextSourcePosition = position + matched.length;\n        }\n      }\n\n      return accumulatedResult + S.slice(nextSourcePosition);\n    }]; // https://tc39.github.io/ecma262/#sec-getsubstitution\n\n    function getSubstitution(matched, str, position, captures, namedCaptures, replacement) {\n      var tailPos = position + matched.length;\n      var m = captures.length;\n      var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;\n\n      if (namedCaptures !== undefined) {\n        namedCaptures = _toObject(namedCaptures);\n        symbols = SUBSTITUTION_SYMBOLS;\n      }\n\n      return $replace.call(replacement, symbols, function (match, ch) {\n        var capture;\n\n        switch (ch.charAt(0)) {\n          case '$':\n            return '$';\n\n          case '&':\n            return matched;\n\n          case '`':\n            return str.slice(0, position);\n\n          case \"'\":\n            return str.slice(tailPos);\n\n          case '<':\n            capture = namedCaptures[ch.slice(1, -1)];\n            break;\n\n          default:\n            // \\d\\d?\n            var n = +ch;\n            if (n === 0) return match;\n\n            if (n > m) {\n              var f = floor$1(n / 10);\n              if (f === 0) return match;\n              if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);\n              return match;\n            }\n\n            capture = captures[n - 1];\n        }\n\n        return capture === undefined ? '' : capture;\n      });\n    }\n  }); // @@match logic\n\n\n  _fixReWks('match', 1, function (defined, MATCH, $match, maybeCallNative) {\n    return [// `String.prototype.match` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.match\n    function match(regexp) {\n      var O = defined(this);\n      var fn = regexp == undefined ? undefined : regexp[MATCH];\n      return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[MATCH](String(O));\n    }, // `RegExp.prototype[@@match]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@match\n    function (regexp) {\n      var res = maybeCallNative($match, regexp, this);\n      if (res.done) return res.value;\n\n      var rx = _anObject(regexp);\n\n      var S = String(this);\n      if (!rx.global) return _regexpExecAbstract(rx, S);\n      var fullUnicode = rx.unicode;\n      rx.lastIndex = 0;\n      var A = [];\n      var n = 0;\n      var result;\n\n      while ((result = _regexpExecAbstract(rx, S)) !== null) {\n        var matchStr = String(result[0]);\n        A[n] = matchStr;\n        if (matchStr === '') rx.lastIndex = _advanceStringIndex(S, _toLength(rx.lastIndex), fullUnicode);\n        n++;\n      }\n\n      return n === 0 ? null : A;\n    }];\n  }); // 7.2.8 IsRegExp(argument)\n\n\n  var MATCH = _wks('match');\n\n  var _isRegexp = function _isRegexp(it) {\n    var isRegExp;\n    return _isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : _cof(it) == 'RegExp');\n  }; // 7.3.20 SpeciesConstructor(O, defaultConstructor)\n\n\n  var SPECIES$1 = _wks('species');\n\n  var _speciesConstructor = function _speciesConstructor(O, D) {\n    var C = _anObject(O).constructor;\n\n    var S;\n    return C === undefined || (S = _anObject(C)[SPECIES$1]) == undefined ? D : _aFunction(S);\n  };\n\n  var $min = Math.min;\n  var $push = [].push;\n  var $SPLIT = 'split';\n  var LENGTH = 'length';\n  var LAST_INDEX$1 = 'lastIndex';\n  var MAX_UINT32 = 0xffffffff; // babel-minify transpiles RegExp('x', 'y') -> /x/y and it causes SyntaxError\n\n  var SUPPORTS_Y = !_fails(function () {}); // @@split logic\n\n  _fixReWks('split', 2, function (defined, SPLIT, $split, maybeCallNative) {\n    var internalSplit;\n\n    if ('abbc'[$SPLIT](/(b)*/)[1] == 'c' || 'test'[$SPLIT](/(?:)/, -1)[LENGTH] != 4 || 'ab'[$SPLIT](/(?:ab)*/)[LENGTH] != 2 || '.'[$SPLIT](/(.?)(.?)/)[LENGTH] != 4 || '.'[$SPLIT](/()()/)[LENGTH] > 1 || ''[$SPLIT](/.?/)[LENGTH]) {\n      // based on es5-shim implementation, need to rework it\n      internalSplit = function internalSplit(separator, limit) {\n        var string = String(this);\n        if (separator === undefined && limit === 0) return []; // If `separator` is not a regex, use native split\n\n        if (!_isRegexp(separator)) return $split.call(string, separator, limit);\n        var output = [];\n        var flags = (separator.ignoreCase ? 'i' : '') + (separator.multiline ? 'm' : '') + (separator.unicode ? 'u' : '') + (separator.sticky ? 'y' : '');\n        var lastLastIndex = 0;\n        var splitLimit = limit === undefined ? MAX_UINT32 : limit >>> 0; // Make `global` and avoid `lastIndex` issues by working with a copy\n\n        var separatorCopy = new RegExp(separator.source, flags + 'g');\n        var match, lastIndex, lastLength;\n\n        while (match = _regexpExec.call(separatorCopy, string)) {\n          lastIndex = separatorCopy[LAST_INDEX$1];\n\n          if (lastIndex > lastLastIndex) {\n            output.push(string.slice(lastLastIndex, match.index));\n            if (match[LENGTH] > 1 && match.index < string[LENGTH]) $push.apply(output, match.slice(1));\n            lastLength = match[0][LENGTH];\n            lastLastIndex = lastIndex;\n            if (output[LENGTH] >= splitLimit) break;\n          }\n\n          if (separatorCopy[LAST_INDEX$1] === match.index) separatorCopy[LAST_INDEX$1]++; // Avoid an infinite loop\n        }\n\n        if (lastLastIndex === string[LENGTH]) {\n          if (lastLength || !separatorCopy.test('')) output.push('');\n        } else output.push(string.slice(lastLastIndex));\n\n        return output[LENGTH] > splitLimit ? output.slice(0, splitLimit) : output;\n      }; // Chakra, V8\n\n    } else if ('0'[$SPLIT](undefined, 0)[LENGTH]) {\n      internalSplit = function internalSplit(separator, limit) {\n        return separator === undefined && limit === 0 ? [] : $split.call(this, separator, limit);\n      };\n    } else {\n      internalSplit = $split;\n    }\n\n    return [// `String.prototype.split` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.split\n    function split(separator, limit) {\n      var O = defined(this);\n      var splitter = separator == undefined ? undefined : separator[SPLIT];\n      return splitter !== undefined ? splitter.call(separator, O, limit) : internalSplit.call(String(O), separator, limit);\n    }, // `RegExp.prototype[@@split]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@split\n    //\n    // NOTE: This cannot be properly polyfilled in engines that don't support\n    // the 'y' flag.\n    function (regexp, limit) {\n      var res = maybeCallNative(internalSplit, regexp, this, limit, internalSplit !== $split);\n      if (res.done) return res.value;\n\n      var rx = _anObject(regexp);\n\n      var S = String(this);\n\n      var C = _speciesConstructor(rx, RegExp);\n\n      var unicodeMatching = rx.unicode;\n      var flags = (rx.ignoreCase ? 'i' : '') + (rx.multiline ? 'm' : '') + (rx.unicode ? 'u' : '') + (SUPPORTS_Y ? 'y' : 'g'); // ^(? + rx + ) is needed, in combination with some S slicing, to\n      // simulate the 'y' flag.\n\n      var splitter = new C(SUPPORTS_Y ? rx : '^(?:' + rx.source + ')', flags);\n      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;\n      if (lim === 0) return [];\n      if (S.length === 0) return _regexpExecAbstract(splitter, S) === null ? [S] : [];\n      var p = 0;\n      var q = 0;\n      var A = [];\n\n      while (q < S.length) {\n        splitter.lastIndex = SUPPORTS_Y ? q : 0;\n\n        var z = _regexpExecAbstract(splitter, SUPPORTS_Y ? S : S.slice(q));\n\n        var e;\n\n        if (z === null || (e = $min(_toLength(splitter.lastIndex + (SUPPORTS_Y ? 0 : q)), S.length)) === p) {\n          q = _advanceStringIndex(S, q, unicodeMatching);\n        } else {\n          A.push(S.slice(p, q));\n          if (A.length === lim) return A;\n\n          for (var i = 1; i <= z.length - 1; i++) {\n            A.push(z[i]);\n            if (A.length === lim) return A;\n          }\n\n          q = p = e;\n        }\n      }\n\n      A.push(S.slice(p));\n      return A;\n    }];\n  });\n  /**\r\n   * --------------------------------------------------------------------------\r\n   * CoreUI Utilities (v2.1.9): get-css-custom-properties.js\r\n   * Licensed under MIT (https://coreui.io/license)\r\n   * @returns {string} css custom property name\r\n   * --------------------------------------------------------------------------\r\n   */\n\n\n  var getCssCustomProperties = function getCssCustomProperties() {\n    var cssCustomProperties = {};\n    var sheets = document.styleSheets;\n    var cssText = '';\n\n    for (var i = sheets.length - 1; i > -1; i--) {\n      var rules = sheets[i].cssRules;\n\n      for (var j = rules.length - 1; j > -1; j--) {\n        if (rules[j].selectorText === '.ie-custom-properties') {\n          cssText = rules[j].cssText;\n          break;\n        }\n      }\n\n      if (cssText) {\n        break;\n      }\n    }\n\n    cssText = cssText.substring(cssText.lastIndexOf('{') + 1, cssText.lastIndexOf('}'));\n    cssText.split(';').forEach(function (property) {\n      if (property) {\n        var name = property.split(': ')[0];\n        var value = property.split(': ')[1];\n\n        if (name && value) {\n          cssCustomProperties[\"--\" + name.trim()] = value.trim();\n        }\n      }\n    });\n    return cssCustomProperties;\n  };\n\n  var minIEVersion = 10;\n\n  var isIE1x = function isIE1x() {\n    return Boolean(document.documentMode) && document.documentMode >= minIEVersion;\n  };\n\n  var isCustomProperty = function isCustomProperty(property) {\n    return property.match(/^--.*/i);\n  };\n\n  var getStyle = function getStyle(property, element) {\n    if (element === void 0) {\n      element = document.body;\n    }\n\n    var style;\n\n    if (isCustomProperty(property) && isIE1x()) {\n      var cssCustomProperties = getCssCustomProperties();\n      style = cssCustomProperties[property];\n    } else {\n      style = window.getComputedStyle(element, null).getPropertyValue(property).replace(/^\\s/, '');\n    }\n\n    return style;\n  };\n  /**\r\n   * --------------------------------------------------------------------------\r\n   * CoreUI Utilities (v2.1.9): get-color.js\r\n   * Licensed under MIT (https://coreui.io/license)\r\n   * --------------------------------------------------------------------------\r\n   */\n\n\n  var getColor = function getColor(rawProperty, element) {\n    if (element === void 0) {\n      element = document.body;\n    }\n\n    var property = \"--\" + rawProperty;\n    var style = getStyle(property, element);\n    return style ? style : rawProperty;\n  };\n  /**\r\n   * --------------------------------------------------------------------------\r\n   * CoreUI Utilities (v2.1.9): hex-to-rgb.js\r\n   * Licensed under MIT (https://coreui.io/license)\r\n   * --------------------------------------------------------------------------\r\n   */\n\n  /* eslint-disable no-magic-numbers */\n\n\n  var hexToRgb = function hexToRgb(color) {\n    if (typeof color === 'undefined') {\n      throw new Error('Hex color is not defined');\n    }\n\n    var hex = color.match(/^#(?:[0-9a-f]{3}){1,2}$/i);\n\n    if (!hex) {\n      throw new Error(color + \" is not a valid hex color\");\n    }\n\n    var r;\n    var g;\n    var b;\n\n    if (color.length === 7) {\n      r = parseInt(color.substring(1, 3), 16);\n      g = parseInt(color.substring(3, 5), 16);\n      b = parseInt(color.substring(5, 7), 16);\n    } else {\n      r = parseInt(color.substring(1, 2), 16);\n      g = parseInt(color.substring(2, 3), 16);\n      b = parseInt(color.substring(3, 5), 16);\n    }\n\n    return \"rgba(\" + r + \", \" + g + \", \" + b + \")\";\n  };\n  /**\r\n   * --------------------------------------------------------------------------\r\n   * CoreUI Utilities (v2.1.9): hex-to-rgba.js\r\n   * Licensed under MIT (https://coreui.io/license)\r\n   * --------------------------------------------------------------------------\r\n   */\n\n  /* eslint-disable no-magic-numbers */\n\n\n  var hexToRgba = function hexToRgba(color, opacity) {\n    if (opacity === void 0) {\n      opacity = 100;\n    }\n\n    if (typeof color === 'undefined') {\n      throw new Error('Hex color is not defined');\n    }\n\n    var hex = color.match(/^#(?:[0-9a-f]{3}){1,2}$/i);\n\n    if (!hex) {\n      throw new Error(color + \" is not a valid hex color\");\n    }\n\n    var r;\n    var g;\n    var b;\n\n    if (color.length === 7) {\n      r = parseInt(color.substring(1, 3), 16);\n      g = parseInt(color.substring(3, 5), 16);\n      b = parseInt(color.substring(5, 7), 16);\n    } else {\n      r = parseInt(color.substring(1, 2), 16);\n      g = parseInt(color.substring(2, 3), 16);\n      b = parseInt(color.substring(3, 5), 16);\n    }\n\n    return \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + opacity / 100 + \")\";\n  }; // 21.2.5.3 get RegExp.prototype.flags()\n\n\n  if (_descriptors && /./g.flags != 'g') _objectDp.f(RegExp.prototype, 'flags', {\n    configurable: true,\n    get: _flags\n  });\n  var TO_STRING = 'toString';\n  var $toString = /./[TO_STRING];\n\n  var define = function define(fn) {\n    _redefine(RegExp.prototype, TO_STRING, fn, true);\n  }; // 21.2.5.14 RegExp.prototype.toString()\n\n\n  if (_fails(function () {\n    return $toString.call({\n      source: 'a',\n      flags: 'b'\n    }) != '/a/b';\n  })) {\n    define(function toString() {\n      var R = _anObject(this);\n\n      return '/'.concat(R.source, '/', 'flags' in R ? R.flags : !_descriptors && R instanceof RegExp ? _flags.call(R) : undefined);\n    }); // FF44- RegExp#toString has a wrong name\n  } else if ($toString.name != TO_STRING) {\n    define(function toString() {\n      return $toString.call(this);\n    });\n  }\n  /**\r\n   * --------------------------------------------------------------------------\r\n   * CoreUI (v2.1.9): rgb-to-hex.js\r\n   * Licensed under MIT (https://coreui.io/license)\r\n   * --------------------------------------------------------------------------\r\n   */\n\n  /* eslint-disable no-magic-numbers */\n\n\n  var rgbToHex = function rgbToHex(color) {\n    if (typeof color === 'undefined') {\n      throw new Error('Hex color is not defined');\n    }\n\n    if (color === 'transparent') {\n      return '#00000000';\n    }\n\n    var rgb = color.match(/^rgba?[\\s+]?\\([\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?/i);\n\n    if (!rgb) {\n      throw new Error(color + \" is not a valid rgb color\");\n    }\n\n    var r = \"0\" + parseInt(rgb[1], 10).toString(16);\n    var g = \"0\" + parseInt(rgb[2], 10).toString(16);\n    var b = \"0\" + parseInt(rgb[3], 10).toString(16);\n    return \"#\" + r.slice(-2) + g.slice(-2) + b.slice(-2);\n  };\n\n  exports.asideMenuCssClasses = asideMenuCssClasses;\n  exports.checkBreakpoint = checkBreakpoint;\n  exports.deepObjectsMerge = deepObjectsMerge;\n  exports.getColor = getColor;\n  exports.getStyle = getStyle;\n  exports.hexToRgb = hexToRgb;\n  exports.hexToRgba = hexToRgba;\n  exports.rgbToHex = rgbToHex;\n  exports.sidebarCssClasses = sidebarCssClasses;\n  exports.validBreakpoints = validBreakpoints;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});"],"sourceRoot":""}