{"version":3,"sources":["utilities/format.js","utilities/handler.js","components/alerts/errorAlert.js","components/modals/confirmModal.js","components/gridView/gridView.js","utilities/currrentActionHelper.js","containers/pages/Transportation/Index.js"],"names":["__webpack_require__","d","__webpack_exports__","formatDateTimeToString","gridViewFormatDateTimeToString","formatString","cloneObject","convertUTCDateToLocalDate","toCurrency","currencyToNumber","moment__WEBPACK_IMPORTED_MODULE_0__","moment__WEBPACK_IMPORTED_MODULE_0___default","n","valueDateTime","stringDateTime","moment","format","stringOrigin","stringReplace","result","indexStart","indexOf","indexEnd","str","chr","length","substr","setCharAt","obj","copy","constructor","attr","hasOwnProperty","stringDate","utcDate","Date","utc","local","numberString","toString","replace","isNaN","parseInt","handleErrorBasic","handleParameter","_i18n_key__WEBPACK_IMPORTED_MODULE_0__","react_redux_toastr__WEBPACK_IMPORTED_MODULE_1__","_contants_common__WEBPACK_IMPORTED_MODULE_2__","errorStatus","stringTitle","t","toastr","error","key","common","error400GetAPI","error401GetAPI","error403GetAPI","error404GetAPI","match","commonConstant","ParamAdd","params","id","ErrorAlert","_React$Component","Object","D_Working_Free_Lancer_Linh_Transportation_WebClient_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","D_Working_Free_Lancer_Linh_Transportation_WebClient_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","D_Working_Free_Lancer_Linh_Transportation_WebClient_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","apply","arguments","D_Working_Free_Lancer_Linh_Transportation_WebClient_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","D_Working_Free_Lancer_Linh_Transportation_WebClient_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","value","_this$props","props","responseData","msgErrorGetAPI","msgRedirectToLogin","msgError","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","status","errorDetail","href","React","Component","ConfirmModal","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","isOpenModal","toggleModal","headerTitle","bodyContent","sizeModal","textBtnYes","textBtnNo","backdropModal","selectedYes","react_default","reactstrap_es","isOpen","size","backdrop","toggle","color","onClick","_handleItem","_currentAction","GridView","_Component","_this","call","openModalChangeStatus","item","handleToggleModal","CHANGE_STATUS","openModalDelete","DELETE","openModalChangeIsDefault","CHANGE_ISDEFAULT","actionName","isSelected","undefined","Id","changeStatusAction","deleteAction","changeIsDefaultAction","setState","isShowStatusConfirmModal","state","isShowDeleteConfirmModal","isShowIsDefaultConfirmModal","handleSwitchFilter","setSessionStorage","FILTER","tableName","isEnableFilter","handleEditAction","history","push","toLowerCase","requestAction","nextProps","deleteModel","changeStatusModel","changeIsDefaultModel","isLoading","responseAction","getAllModel","hasRecordsActionReducer","records","Data","Records","isNullActionReducer","isError","deleteInfo","deleteErrorInfo","removeItemFromItems","success","deleteSuccessInfo","switchStatusInfo","switchStatusErrorInfo","changeStatusItemFromItems","switchStatusSuccessInfo","changeIsDefaultItemFromItems","getSessionStorage","_this2","_this$props2","isLoadingOver","keyFields","disableColumns","directLink","xs","Link","to","GridTitleList","defaultPageSize","PAGE_SIZE","pageSize","showPagination","map","forEach","column","tempModel","datePropertyName","propertyName","includes","propsOfTable","data","columns","filterable","defaultFilterMethod","filter","row","filterValue","pivotId","_index","String","keys","keyName","Header","headerClassName","accessor","show","minWidth","minResizeWidth","Cell","type","checked","original","disabled","unshift","index","titleStatus","Status","active","inActive","deleted","colorStatus","width","update","sortable","Fragment","LoadingOverlay_default","spinner","text","processingSpinner","title","filterTitle","react_es","variant","onChange","es","lg","noDataFound","confirmModal_ConfirmModal","infoTitleConfirmModal","switchStatusConfirmModal","btnOk","btnCancel","deleteConfirmModal","addAction","arrCurrentAction","action","isExistAction","removeAction","val","Transportation","currentAction","TRANSPORTATION","GETALL","Money","applyCheckAuthorized","getAllAction","react_loading_overlay__WEBPACK_IMPORTED_MODULE_10___default","loadingSpinner","_components_alerts_errorAlert__WEBPACK_IMPORTED_MODULE_11__","errorGetAllAPI","redirectToLogin","_components_gridView_gridView__WEBPACK_IMPORTED_MODULE_14__","assign","transportation","reactstrap__WEBPACK_IMPORTED_MODULE_9__","mapDispatchToProps","getAllTransportationAction","changeStatusTransportationAction","deleteTransportationAction","translate","connect","getAllTransportationReducer","changeStatusTransportationReducer","deleteTransportationReducer"],"mappings":"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","file":"static/js/9.1b5cf852.chunk.js","sourcesContent":["import moment from 'moment';\r\nexport function formatStringToDateTime(stringDateTime, formatString) {\r\n    if (!stringDateTime || stringDateTime === '') return null;\r\n    if (formatString == null) formatString = 'DD/MM/YYYY HH:mm';\r\n    var dateTime = new Date(stringDateTime);\r\n    dateTime = moment(dateTime).format(formatString);\r\n    return dateTime;\r\n}\r\nexport function formatDateTimeToString(valueDateTime, formatString) {\r\n    if (!valueDateTime) return null;\r\n    var stringDateTime = moment(valueDateTime).format('YYYY-MM-DDTHH:mm:ss');\r\n    if (formatString != null) stringDateTime = moment(valueDateTime).format(formatString);\r\n    return stringDateTime;\r\n}\r\n\r\nexport function gridViewFormatDateTimeToString(valueDateTime, formatString) {\r\n    if (!valueDateTime) return null;\r\n    var stringDateTime = moment(valueDateTime).format('D/M/YYYY');\r\n    if (formatString != null) stringDateTime = moment(valueDateTime).format(formatString);\r\n    return stringDateTime;\r\n}\r\nexport function formatString(stringOrigin, stringReplace) {\r\n    if (stringOrigin == null || stringOrigin === '') return '';\r\n    let result = '';\r\n    const indexStart = stringOrigin.indexOf('{');\r\n    const indexEnd = stringOrigin.indexOf('}');\r\n    if (indexStart > -1 && indexStart > -1 && indexStart < indexEnd) {\r\n        result = setCharAt(stringOrigin, indexStart, indexEnd, stringReplace);\r\n    }\r\n    return result;\r\n}\r\nfunction setCharAt(str, indexStart, indexEnd, chr) {\r\n    if (indexStart > str.length - 1) return str;\r\n    return str.substr(0, indexStart) + chr + str.substr(indexEnd + 1);\r\n}\r\nexport function cloneObject(obj) {\r\n    if (null == obj || \"object\" != typeof obj) return obj;\r\n    var copy = obj.constructor();\r\n    for (var attr in obj) {\r\n        if (obj.hasOwnProperty(attr)) copy[attr] = obj[attr];\r\n    }\r\n    return copy;\r\n}\r\nexport function convertUTCDateToLocalDate(stringDate){\r\n    let utcDate = new Date(stringDate + 'z');\r\n    let localTime= moment.utc(utcDate).local();\r\n    return localTime;\r\n}\r\n\r\nexport function toCurrency(numberString) {\r\n    numberString = numberString.toString().replace(/,/g,'');\r\n    let result =  numberString.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    return result;\r\n}\r\n\r\nexport function currencyToNumber(numberString) {\r\n    numberString = numberString.toString().replace(/,/g,'');\r\n    let result =  isNaN(parseInt(numberString)) ? 0 : parseInt(numberString);\r\n    return result;\r\n}","import key from '../i18n/key';\r\nimport { toastr } from 'react-redux-toastr';\r\nimport { commonConstant } from '../contants/common';\r\nexport function handleErrorBasic(errorStatus, stringTitle, t) {\r\n    if (errorStatus === 400) {\r\n        toastr.error(stringTitle, t(key.common.error400GetAPI));\r\n        return true;\r\n    }\r\n    if (errorStatus === 401) {\r\n        toastr.error(stringTitle, t(key.common.error401GetAPI));\r\n        return true;\r\n    }\r\n    if (errorStatus === 403) {\r\n        toastr.error(stringTitle, t(key.common.error403GetAPI));\r\n        return true;\r\n    }\r\n    if (errorStatus === 404) {\r\n        toastr.error(stringTitle, t(key.common.error404GetAPI));\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nexport function handleParameter(match) {    \r\n    let result = commonConstant.ParamAdd;\r\n    if (match && match.params && match.params.id) {\r\n        if (match.params.id > 0) {\r\n            result = parseInt(match.params.id);\r\n        } else {\r\n            result = match.params.id;\r\n        }\r\n    }\r\n    return result;\r\n}\r\n","import React from 'react';\r\nimport key from '../../i18n/key';\r\nexport class ErrorAlert extends React.Component {\r\n    render() {\r\n        const { responseData, msgErrorGetAPI, msgRedirectToLogin, t } = this.props;\r\n        const clsError = 'alert alert-danger';\r\n        let msgError = <div className={clsError}>{msgErrorGetAPI}</div>;\r\n        if (responseData && (responseData.status === 401 || responseData.status === 403)) {\r\n            const errorDetail = responseData.status === 401 ? t(key.common.error401GetAPI) : t(key.common.error403GetAPI);\r\n            msgError = <div>\r\n                <div className={clsError}>\r\n                    {msgErrorGetAPI}\r\n                    <br />\r\n                    {errorDetail}\r\n                    <br /><a className='alert-link' href='/login'>{msgRedirectToLogin}</a>\r\n                </div>\r\n            </div>;\r\n        }\r\n        return msgError;\r\n    }\r\n}\r\nexport default ErrorAlert;\r\n","import React from 'react';\r\nimport {\r\n  Button, Modal, ModalBody, ModalFooter, ModalHeader,\r\n} from \"reactstrap\";\r\nexport class ConfirmModal extends React.Component {\r\n  render() {\r\n    const {\r\n      isOpenModal, className, toggleModal,\r\n      headerTitle, bodyContent, sizeModal,\r\n      textBtnYes, textBtnNo, backdropModal,\r\n      selectedYes\r\n    } = this.props;\r\n    return (\r\n      <Modal isOpen={isOpenModal} size={sizeModal} backdrop={backdropModal}\r\n        className={'modal-' + className} toggle={toggleModal}>\r\n        <ModalHeader toggle={toggleModal}>{headerTitle}</ModalHeader>\r\n        <ModalBody>{bodyContent}</ModalBody>\r\n        <ModalFooter>\r\n          <Button className=\"label-button-confirm\" color={className} onClick={selectedYes}>{textBtnYes}</Button>{' '}\r\n          <Button className=\"label-button-confirm\" color=\"secondary\" onClick={toggleModal}>{textBtnNo}</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\nexport default ConfirmModal;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport ReactTable from \"react-table\";\r\nimport key from '../../i18n/key';\r\nimport { Card, CardBody, CardHeader, Col, Row, Badge, Button } from \"reactstrap\";\r\nimport { AppSwitch } from '@coreui/react';\r\nimport LoadingOverlay from 'react-loading-overlay';\r\nimport { ConfirmModal } from '../modals/confirmModal';\r\nimport { commonConstant } from '../../contants/common';\r\nimport { getSessionStorage, setSessionStorage } from '../../utilities/storage';\r\nimport { hasRecordsActionReducer, isNullActionReducer, removeItemFromItems, changeStatusItemFromItems, changeIsDefaultItemFromItems } from '../../utilities/validate';\r\nimport { toastr } from 'react-redux-toastr';\r\nimport { gridViewFormatDateTimeToString } from '../../utilities/format';\r\n\r\nvar _handleItem = null;\r\nvar _currentAction = null;\r\nexport class GridView extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isShowStatusConfirmModal: false,\r\n            isShowDeleteConfirmModal: false,\r\n            isShowIsDefaultConfirmModal: false,\r\n            isEnableFilter: getSessionStorage(commonConstant.FILTER + this.props.tableName) === 'true' ? true : false,\r\n        };\r\n    }\r\n    //CHANGESTATUS\r\n    openModalChangeStatus = (item) => {\r\n        _handleItem = item;\r\n        this.handleToggleModal(commonConstant.CHANGE_STATUS, null);\r\n    }\r\n    //DELETE\r\n    openModalDelete = (item) => {\r\n        _handleItem = item;\r\n        this.handleToggleModal(commonConstant.DELETE, null);\r\n    }\r\n    //CHANGEISDEFAULT\r\n    openModalChangeIsDefault = (item) => {\r\n        _handleItem = item;\r\n        this.handleToggleModal(commonConstant.CHANGE_ISDEFAULT, null);\r\n    }\r\n    //TOGGLE MODAL\r\n    handleToggleModal = (actionName, isSelected = false) => {\r\n        if (isSelected && actionName === commonConstant.CHANGE_STATUS) {\r\n            if (_handleItem && _handleItem.Id) {\r\n                this.props.changeStatusAction(_handleItem.Id);\r\n            }\r\n        }\r\n        else if (isSelected && actionName === commonConstant.DELETE) {\r\n            if (_handleItem && _handleItem.Id) {\r\n                this.props.deleteAction(_handleItem.Id);\r\n            }\r\n        }\r\n        else if (isSelected && actionName === commonConstant.CHANGE_ISDEFAULT) {\r\n            if (_handleItem && _handleItem.Id) {\r\n                this.props.changeIsDefaultAction(_handleItem.Id);\r\n            }\r\n        }\r\n        this.setState({\r\n            isShowStatusConfirmModal: actionName === commonConstant.CHANGE_STATUS ? !this.state.isShowStatusConfirmModal : false,\r\n            isShowDeleteConfirmModal: actionName === commonConstant.DELETE ? !this.state.isShowDeleteConfirmModal : false,\r\n            isShowIsDefaultConfirmModal: actionName === commonConstant.CHANGE_ISDEFAULT ? !this.state.isShowDeleteConfirmModal : false,\r\n        });\r\n    }\r\n    //FILTER\r\n    handleSwitchFilter = () => {\r\n        setSessionStorage(commonConstant.FILTER + this.props.tableName, !this.state.isEnableFilter)\r\n        this.setState({\r\n            isEnableFilter: !this.state.isEnableFilter,\r\n        });\r\n    }\r\n    //EDIT\r\n    handleEditAction = (item) => {\r\n        if (item && item.Id) {\r\n            const { history, tableName } = this.props;\r\n            if (history) {\r\n                history.push(tableName.toLowerCase() + '/' + item.Id);\r\n            }\r\n        }\r\n    }\r\n    requestAction = (nextProps) => {\r\n        let { deleteModel, changeStatusModel, changeIsDefaultModel } = nextProps;\r\n        if (deleteModel && deleteModel.isLoading) {\r\n            _currentAction = commonConstant.DELETE;\r\n            return true;\r\n        }\r\n        if (changeStatusModel && changeStatusModel.isLoading) {\r\n            _currentAction = commonConstant.CHANGE_STATUS;\r\n            return true;\r\n        }\r\n        if (changeIsDefaultModel && changeIsDefaultModel.isLoading) {\r\n            _currentAction = commonConstant.CHANGE_ISDEFAULT;\r\n            return true;\r\n        }\r\n    }\r\n    responseAction = (nextProps) => {\r\n        let { t, getAllModel, deleteModel, changeStatusModel, changeIsDefaultModel } = nextProps;\r\n        let hasData = hasRecordsActionReducer(getAllModel);\r\n        if (hasData) {\r\n            let records = getAllModel.responseData.Data.Records;\r\n            switch (_currentAction && true) {\r\n                //DELETE\r\n                case (commonConstant.DELETE && !isNullActionReducer(deleteModel)):\r\n                    if (deleteModel.isError) {\r\n                        toastr.error(t(key.common.deleteInfo), t(key.common.deleteErrorInfo));\r\n                    } else {\r\n                        getAllModel.responseData.Data.Records = removeItemFromItems(_handleItem, records);\r\n                        toastr.success(t(key.common.deleteInfo), t(key.common.deleteSuccessInfo));\r\n                    }\r\n                    break;\r\n                //CHANGE_STATUS\r\n                case (commonConstant.CHANGE_STATUS && !isNullActionReducer(changeStatusModel)):\r\n                    if (changeStatusModel.isError) {\r\n                        toastr.error(t(key.common.switchStatusInfo), t(key.common.switchStatusErrorInfo));\r\n                    } else {\r\n                        getAllModel.responseData.Data.Records = changeStatusItemFromItems(_handleItem, records);\r\n                        toastr.success(t(key.common.switchStatusInfo), t(key.common.switchStatusSuccessInfo));\r\n                    }\r\n                    break;\r\n                //CHANGE_ISDEFAULT\r\n                case (commonConstant.CHANGE_ISDEFAULT && !isNullActionReducer(changeIsDefaultModel)):\r\n                    if (changeIsDefaultModel.isError) {\r\n                        toastr.error(t(key.common.switchStatusInfo), t(key.common.switchStatusErrorInfo));\r\n                    } else {\r\n                        getAllModel.responseData.Data.Records = changeIsDefaultItemFromItems(_handleItem, records);\r\n                        toastr.success(t(key.common.switchStatusInfo), t(key.common.switchStatusSuccessInfo));\r\n                    }\r\n                    break;\r\n                //DEFAULT    \r\n                default:\r\n                    break;\r\n            }\r\n            _currentAction = null;\r\n        }\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        //request action\r\n        if (this.requestAction(nextProps)) return;\r\n        //response action\r\n        this.responseAction(nextProps);\r\n    }\r\n    //RENDER CONTENT\r\n    render() {\r\n        let { records, t, isLoadingOver, keyFields, disableColumns, tableName } = this.props;\r\n        const directLink = tableName ? tableName.toLowerCase() : '';\r\n        if (!records || records.length === 0) {\r\n            return (\r\n                <div className=\"animated fadeIn\">\r\n                    <Card>\r\n                        <Row>\r\n                            <Col xs=\"6\">\r\n                                <Link to={'/' + directLink + '/add'}>\r\n                                    <Button size=\"sm\" className=\"btn-dropbox btn-brand icon mr-1 mb-1\">\r\n                                        <i className=\"fa fa-plus\"></i>\r\n                                    </Button>\r\n                                </Link>\r\n                                <strong>{t(keyFields.GridTitleList)}</strong>\r\n                            </Col>\r\n                        </Row>\r\n                    </Card>\r\n                </div>\r\n            )\r\n        }\r\n        let defaultPageSize = commonConstant.PAGE_SIZE;\r\n        let pageSize = (records.length > defaultPageSize) ? defaultPageSize : records.length;\r\n        let showPagination = (records.length > defaultPageSize) ? true : false;\r\n\r\n        // Handle Disable Columns    \r\n        if (disableColumns && disableColumns.length > 0) {\r\n            records = records.map(item => {\r\n                disableColumns.forEach(function (column) {\r\n                    delete item[column];\r\n                })\r\n                return item;\r\n            })\r\n        }\r\n\r\n        //Handel Datetime\r\n        if(records.length > 0){\r\n            let tempModel = records[0];\r\n            let datePropertyName = [];\r\n            for(var propertyName in tempModel) {\r\n                if(propertyName.toLowerCase().includes('date')){\r\n                    datePropertyName.push(propertyName);\r\n                }\r\n            }\r\n\r\n            if(datePropertyName.length > 0){\r\n                records.forEach((item)=>{\r\n                    datePropertyName.forEach((propertyName)=>{\r\n                        item[propertyName] = gridViewFormatDateTimeToString(item[propertyName])\r\n                    });\r\n                });\r\n            }\r\n        }\r\n\r\n        const propsOfTable = {\r\n            data: records,\r\n            columns: [],\r\n            //pageSize: pageSize,\r\n            defaultPageSize: pageSize,\r\n            showPagination: showPagination,\r\n            filterable: this.state.isEnableFilter,\r\n            defaultFilterMethod: (filter, row) => {\r\n                let filterValue = filter.value.toLowerCase();\r\n                const id = filter.pivotId || filter.id;\r\n                if (id === 'identifierNumber') {\r\n                    return (row._index + 1) === parseInt(filter.value);\r\n                } else if (row[id] !== undefined) {\r\n                    let cellValue = String(row[id]).toLowerCase();\r\n                    return cellValue.includes(filterValue);\r\n                }\r\n            },\r\n        }\r\n        if (records.length <= defaultPageSize) propsOfTable.pageSize = pageSize;\r\n        if (records && records.length > 0) {\r\n            let columns = Object.keys(records[0]).map((keyName, id) => {\r\n                var column = {\r\n                    Header: t(keyFields[keyName]),\r\n                    headerClassName: 'header-table text-left',\r\n                    accessor: keyName,\r\n                    show: (keyName === 'Id' || keyName === 'Status') ? false : true,\r\n                    minWidth: id === 0 ? 150 : 100,\r\n                    className: 'text-left',\r\n                    minResizeWidth: 50\r\n                };\r\n                if (typeof records[0][keyName] === \"boolean\") {\r\n                    column.Cell = row => (\r\n                        <input type=\"checkbox\" checked={row.original[keyName] ? true : false} disabled />\r\n                    );\r\n                    column.className = 'text-center'\r\n                }\r\n                return column;\r\n            });\r\n            columns.unshift({\r\n                Header: '#',\r\n                headerClassName: 'header-table',\r\n                accessor: 'identifierNumber',\r\n                Cell: (row) => { return <span>{row.index + 1}</span> },\r\n                minWidth: 20,\r\n                className: 'text-center',\r\n                minResizeWidth: 50,\r\n            });\r\n            columns.push({\r\n                Header: t(key.common.status),\r\n                headerClassName: 'header-table',\r\n                accessor: 'status',\r\n                filterable: false,\r\n                Cell: row => {\r\n                    const titleStatus = (row.original.Status === 'Active' || row.original.Status === 1) ? key.common.active :\r\n                        (row.original.Status === 'InActive' || row.original.Status === 0) ? key.common.inActive : key.common.deleted;\r\n                    const colorStatus = (row.original.Status === 'Active' || row.original.Status === 1) ? 'success' :\r\n                        (row.original.Status === 'InActive' || row.original.Status === 0) ? 'danger' : 'secondary';\r\n                    return (\r\n                        <Badge className=\"label-status\" onClick={() => this.openModalChangeStatus(row.original)}\r\n                            color={colorStatus}>\r\n                            {t(titleStatus)}\r\n                        </Badge>\r\n                    )\r\n                },\r\n                width: 100,\r\n                className: 'text-center handle-pointer',\r\n                minResizeWidth: 50,\r\n            });\r\n            columns.push({\r\n                Header: t(key.common.update),\r\n                headerClassName: 'header-table',\r\n                accessor: 'update',\r\n                filterable: false,\r\n                sortable: false,\r\n                Cell: row => (\r\n                    <>\r\n                        <i onClick={() => this.handleEditAction(row.original)} className=\"handle-pointer fa fa-edit fa-lg\"></i> &nbsp;\r\n                        <i onClick={() => this.openModalDelete(row.original)} className=\"handle-pointer fa fa-trash-o fa-lg\"></i>\r\n                    </>\r\n                ),\r\n                width: 80,\r\n                className: 'text-center',\r\n                minResizeWidth: 50,\r\n            });\r\n            propsOfTable.columns = columns;\r\n        }\r\n        return (\r\n            <div className=\"animated fadeIn\">\r\n                <LoadingOverlay active={isLoadingOver} spinner text={t(key.common.processingSpinner)} className=\"overlayFullScreen\" />\r\n                <Card>\r\n                    <CardHeader>\r\n                        <Row>\r\n                            <Col xs=\"6\">\r\n                                <Link to={'/' + directLink + '/add'}>\r\n                                    <Button size=\"sm\" className=\"btn-dropbox btn-brand icon mr-1 mb-1\">\r\n                                        <i className=\"fa fa-plus\"></i>\r\n                                    </Button>\r\n                                </Link>\r\n                                <strong>{t(keyFields.GridTitleList)}</strong>\r\n                            </Col>\r\n                            <Col xs=\"6\" className={'text-right'} title=\"Enables or disables records filtering of columns in the table.\">\r\n                                {t(key.common.filterTitle)}\r\n                                <AppSwitch className={'float-right mx-1'} variant={'pill'} color={'primary'}\r\n                                    onChange={this.handleSwitchFilter} checked={this.state.isEnableFilter} />\r\n                            </Col>\r\n                        </Row>\r\n                    </CardHeader>\r\n                    <CardBody>\r\n                        {\r\n                            records.length > 0 ?\r\n                                <ReactTable {...propsOfTable} /> :\r\n                                <div className=\"animated fadeIn\"><Row><Col xs=\"12\" lg=\"12\">{t(key.common.noDataFound)}</Col></Row></div>\r\n                        }\r\n                        <ConfirmModal isOpenModal={this.state.isShowStatusConfirmModal}\r\n                            toggleModal={() => this.handleToggleModal(commonConstant.CHANGE_STATUS, false)}\r\n                            selectedYes={() => this.handleToggleModal(commonConstant.CHANGE_STATUS, true)}\r\n                            className=\"warning\" sizeModal=\"md\" backdropModal=\"static\"\r\n                            headerTitle={t(key.common.infoTitleConfirmModal)}\r\n                            bodyContent={t(key.common.switchStatusConfirmModal)}\r\n                            textBtnYes={t(key.common.btnOk)}\r\n                            textBtnNo={t(key.common.btnCancel)}\r\n                        />\r\n                        <ConfirmModal isOpenModal={this.state.isShowDeleteConfirmModal}\r\n                            toggleModal={() => this.handleToggleModal(commonConstant.DELETE, false)}\r\n                            selectedYes={() => this.handleToggleModal(commonConstant.DELETE, true)}\r\n                            className=\"danger\" sizeModal=\"md\" backdropModal=\"static\"\r\n                            headerTitle={t(key.common.infoTitleConfirmModal)}\r\n                            bodyContent={t(key.common.deleteConfirmModal)}\r\n                            textBtnYes={t(key.common.btnOk)}\r\n                            textBtnNo={t(key.common.btnCancel)}\r\n                        />\r\n                        <ConfirmModal isOpenModal={this.state.isShowIsDefaultConfirmModal}\r\n                            toggleModal={() => this.handleToggleModal(commonConstant.CHANGE_ISDEFAULT, false)}\r\n                            selectedYes={() => this.handleToggleModal(commonConstant.CHANGE_ISDEFAULT, true)}\r\n                            className=\"warning\" sizeModal=\"md\" backdropModal=\"static\"\r\n                            headerTitle={t(key.common.infoTitleConfirmModal)}\r\n                            bodyContent={t(key.common.switchStatusConfirmModal)}\r\n                            textBtnYes={t(key.common.btnOk)}\r\n                            textBtnNo={t(key.common.btnCancel)}\r\n                        />\r\n                        {/* Option className modal: primary, info, danger, warning,success, \r\n                  Size modal: sm, md, lg */}\r\n                    </CardBody>\r\n                </Card>\r\n            </div >\r\n        );\r\n    }\r\n}","export function addAction(arrCurrentAction, action) {\r\n    arrCurrentAction.push(action);\r\n}\r\n\r\nexport function isExistAction(arrCurrentAction, action) {\r\n    return arrCurrentAction.indexOf(action) !== -1;\r\n}\r\n\r\nexport function removeAction(arrCurrentAction, action) {\r\n    return arrCurrentAction.filter((val) => {\r\n        return val !== action\r\n    });\r\n}","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { translate } from 'react-i18next';\r\nimport key from '../../../i18n/key';\r\nimport { Col, Row } from \"reactstrap\";\r\nimport LoadingOverlay from 'react-loading-overlay';\r\nimport { ErrorAlert } from '../../../components/alerts/errorAlert';\r\nimport { hasRecordsActionReducer, applyCheckAuthorized } from '../../../utilities/validate';\r\nimport { getAllTransportationAction, changeStatusTransportationAction, deleteTransportationAction } from '../../../actions/transportation';\r\nimport { GridView } from '../../../components/gridView/gridView';\r\nimport { addAction, isExistAction, removeAction } from '../../../utilities/currrentActionHelper';\r\nimport { TRANSPORTATION } from \"../../../actionTypes/transportation\";\r\nimport { toCurrency } from \"../../../utilities/format\";\r\nimport { handleErrorBasic } from '../../../utilities/handler';\r\n\r\nclass Transportation extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentAction: []\r\n        };\r\n        applyCheckAuthorized();\r\n    }\r\n    componentDidMount() {\r\n        //Sau khi render hàm này sẽ chạy\r\n        this.props.getAllAction();\r\n    }\r\n    requestAction = (nextProps) => {\r\n        //Khi có action phát đi thì hàm này sẽ handle\r\n        let { getAllModel } = nextProps;\r\n        const { currentAction } = this.state;\r\n        let result = false;\r\n        if (getAllModel.isLoading && !isExistAction(currentAction, TRANSPORTATION.GETALL)) {\r\n            addAction(currentAction, TRANSPORTATION.GETALL)\r\n            result = true;\r\n        }\r\n\r\n        return result;\r\n    }\r\n    responseAction = (nextProps) => {\r\n        //Khi api trả dữ liệu về thì hàm này sẽ handle\r\n        let { getAllModel, t } = nextProps;\r\n        const { currentAction } = this.state;\r\n\r\n        //Get All Transportation\r\n        if (!getAllModel.isLoading && isExistAction(currentAction, TRANSPORTATION.GETALL)) {\r\n            if (!getAllModel.responseData ||\r\n                handleErrorBasic(getAllModel.responseData.status, 'Tải danh sách Vận chuyển', t)) return;\r\n            \r\n            let records = getAllModel.responseData.Data.Records;\r\n            records.forEach(item => {\r\n                item.Money = toCurrency(item.Money)\r\n            });\r\n           \r\n            this.setState({ currentAction: removeAction(currentAction, TRANSPORTATION.GETALL) });\r\n        }\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        //request action\r\n        if (this.requestAction(nextProps)) return;\r\n        //response action\r\n        this.responseAction(nextProps);\r\n    }\r\n    render() {\r\n        const { t, changeStatusModel, deleteModel, getAllModel } = this.props;\r\n        let disableColumns = ['DriverSecondaryName', ];//['Id','Status'];\r\n        if (!getAllModel || !changeStatusModel || !deleteModel) return;\r\n        const isLoadingOver = changeStatusModel.isLoading || deleteModel.isLoading;\r\n        if (getAllModel.isLoading) {\r\n            return <LoadingOverlay active spinner text={t(key.common.loadingSpinner)} />\r\n        } else if (getAllModel.isError) {\r\n            return <ErrorAlert responseData={getAllModel.responseData}\r\n                msgErrorGetAPI={t(key.common.errorGetAllAPI)} t={this.props.t}\r\n                msgRedirectToLogin={t(key.common.redirectToLogin)} />\r\n        } else {\r\n            if (hasRecordsActionReducer(getAllModel)) {\r\n                return <GridView\r\n                    isLoadingOver={isLoadingOver}\r\n                    records={getAllModel.responseData.Data.Records}\r\n                    keyFields={key.transportation}\r\n                    tableName=\"TRANSPORTATION\"\r\n                    disableColumns={disableColumns}\r\n                    {...this.props}\r\n                />\r\n            } else {\r\n                return <div className=\"animated fadeIn\"><Row><Col xs=\"12\" lg=\"12\">{t(key.common.noDataFound)}</Col></Row></div>;\r\n            }\r\n        }\r\n    }\r\n}\r\n//Nhận dữ liệu trả về từ reducer (reducer thì lấy data từ api)\r\nconst mapStateToProps = state => ({\r\n    getAllModel: state.getAllTransportationReducer,\r\n    changeStatusModel: state.changeStatusTransportationReducer,\r\n    deleteModel: state.deleteTransportationReducer,\r\n});\r\n//Phát đi tính hiệu thông qua action (để lấy data từ api)\r\nconst mapDispatchToProps = {\r\n    getAllAction: getAllTransportationAction,\r\n    changeStatusAction: changeStatusTransportationAction,\r\n    deleteAction: deleteTransportationAction,\r\n};\r\nexport default translate()(connect(mapStateToProps, mapDispatchToProps)(Transportation));"],"sourceRoot":""}