{"version":3,"sources":["utilities/format.js","components/alerts/errorAlert.js","components/modals/confirmModal.js","components/gridView/gridView.js","containers/pages/Distance/Index.js"],"names":["__webpack_require__","d","__webpack_exports__","formatDateTimeToString","gridViewFormatDateTimeToString","formatString","cloneObject","convertUTCDateToLocalDate","toCurrency","currencyToNumber","moment__WEBPACK_IMPORTED_MODULE_0__","moment__WEBPACK_IMPORTED_MODULE_0___default","n","valueDateTime","stringDateTime","moment","format","stringOrigin","stringReplace","result","indexStart","indexOf","indexEnd","str","chr","length","substr","setCharAt","obj","copy","constructor","attr","hasOwnProperty","stringDate","utcDate","Date","utc","local","numberString","toString","replace","isNaN","parseInt","ErrorAlert","_React$Component","Object","D_Working_Free_Lancer_Linh_Transportation_WebClient_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","D_Working_Free_Lancer_Linh_Transportation_WebClient_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","D_Working_Free_Lancer_Linh_Transportation_WebClient_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","apply","arguments","D_Working_Free_Lancer_Linh_Transportation_WebClient_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","D_Working_Free_Lancer_Linh_Transportation_WebClient_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","_this$props","props","responseData","msgErrorGetAPI","msgRedirectToLogin","t","msgError","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","status","errorDetail","common","error401GetAPI","error403GetAPI","href","React","Component","ConfirmModal","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","isOpenModal","toggleModal","headerTitle","bodyContent","sizeModal","textBtnYes","textBtnNo","backdropModal","selectedYes","react_default","reactstrap_es","isOpen","size","backdrop","toggle","color","onClick","_handleItem","_currentAction","GridView","_Component","_this","call","openModalChangeStatus","item","handleToggleModal","commonConstant","CHANGE_STATUS","openModalDelete","DELETE","openModalChangeIsDefault","CHANGE_ISDEFAULT","actionName","isSelected","undefined","Id","changeStatusAction","deleteAction","changeIsDefaultAction","setState","isShowStatusConfirmModal","state","isShowDeleteConfirmModal","isShowIsDefaultConfirmModal","handleSwitchFilter","setSessionStorage","FILTER","tableName","isEnableFilter","handleEditAction","history","push","toLowerCase","requestAction","nextProps","deleteModel","changeStatusModel","changeIsDefaultModel","isLoading","responseAction","getAllModel","hasRecordsActionReducer","records","Data","Records","isNullActionReducer","isError","toastr","error","deleteInfo","deleteErrorInfo","removeItemFromItems","success","deleteSuccessInfo","switchStatusInfo","switchStatusErrorInfo","changeStatusItemFromItems","switchStatusSuccessInfo","changeIsDefaultItemFromItems","getSessionStorage","_this2","_this$props2","isLoadingOver","keyFields","disableColumns","directLink","xs","Link","to","GridTitleList","defaultPageSize","PAGE_SIZE","pageSize","showPagination","map","forEach","column","tempModel","datePropertyName","propertyName","includes","propsOfTable","data","columns","filterable","defaultFilterMethod","filter","row","filterValue","id","pivotId","_index","String","keys","keyName","Header","headerClassName","accessor","show","minWidth","minResizeWidth","Cell","type","checked","original","disabled","unshift","index","titleStatus","Status","active","inActive","deleted","colorStatus","width","update","sortable","Fragment","LoadingOverlay_default","spinner","text","processingSpinner","title","filterTitle","react_es","variant","onChange","es","lg","noDataFound","confirmModal_ConfirmModal","infoTitleConfirmModal","switchStatusConfirmModal","btnOk","btnCancel","deleteConfirmModal","Distance","applyCheckAuthorized","getAllAction","react_loading_overlay__WEBPACK_IMPORTED_MODULE_10___default","loadingSpinner","_components_alerts_errorAlert__WEBPACK_IMPORTED_MODULE_11__","errorGetAllAPI","redirectToLogin","_components_gridView_gridView__WEBPACK_IMPORTED_MODULE_14__","assign","distance","reactstrap__WEBPACK_IMPORTED_MODULE_9__","mapDispatchToProps","getAllDistanceAction","changeStatusDistanceAction","deleteDistanceAction","translate","connect","getAllDistanceReducer","changeStatusDistanceReducer","deleteDistanceReducer"],"mappings":"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","file":"static/js/15.234a7617.chunk.js","sourcesContent":["import moment from 'moment';\r\nexport function formatStringToDateTime(stringDateTime, formatString) {\r\n    if (!stringDateTime || stringDateTime === '') return null;\r\n    if (formatString == null) formatString = 'DD/MM/YYYY HH:mm';\r\n    var dateTime = new Date(stringDateTime);\r\n    dateTime = moment(dateTime).format(formatString);\r\n    return dateTime;\r\n}\r\nexport function formatDateTimeToString(valueDateTime, formatString) {\r\n    if (!valueDateTime) return null;\r\n    var stringDateTime = moment(valueDateTime).format('YYYY-MM-DDTHH:mm:ss');\r\n    if (formatString != null) stringDateTime = moment(valueDateTime).format(formatString);\r\n    return stringDateTime;\r\n}\r\n\r\nexport function gridViewFormatDateTimeToString(valueDateTime, formatString) {\r\n    if (!valueDateTime) return null;\r\n    var stringDateTime = moment(valueDateTime).format('D/M/YYYY');\r\n    if (formatString != null) stringDateTime = moment(valueDateTime).format(formatString);\r\n    return stringDateTime;\r\n}\r\nexport function formatString(stringOrigin, stringReplace) {\r\n    if (stringOrigin == null || stringOrigin === '') return '';\r\n    let result = '';\r\n    const indexStart = stringOrigin.indexOf('{');\r\n    const indexEnd = stringOrigin.indexOf('}');\r\n    if (indexStart > -1 && indexStart > -1 && indexStart < indexEnd) {\r\n        result = setCharAt(stringOrigin, indexStart, indexEnd, stringReplace);\r\n    }\r\n    return result;\r\n}\r\nfunction setCharAt(str, indexStart, indexEnd, chr) {\r\n    if (indexStart > str.length - 1) return str;\r\n    return str.substr(0, indexStart) + chr + str.substr(indexEnd + 1);\r\n}\r\nexport function cloneObject(obj) {\r\n    if (null == obj || \"object\" != typeof obj) return obj;\r\n    var copy = obj.constructor();\r\n    for (var attr in obj) {\r\n        if (obj.hasOwnProperty(attr)) copy[attr] = obj[attr];\r\n    }\r\n    return copy;\r\n}\r\nexport function convertUTCDateToLocalDate(stringDate){\r\n    let utcDate = new Date(stringDate + 'z');\r\n    let localTime= moment.utc(utcDate).local();\r\n    return localTime;\r\n}\r\n\r\nexport function toCurrency(numberString) {\r\n    numberString = numberString.toString().replace(/,/g,'');\r\n    let result =  numberString.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    return result;\r\n}\r\n\r\nexport function currencyToNumber(numberString) {\r\n    numberString = numberString.toString().replace(/,/g,'');\r\n    let result =  isNaN(parseInt(numberString)) ? 0 : parseInt(numberString);\r\n    return result;\r\n}","import React from 'react';\r\nimport key from '../../i18n/key';\r\nexport class ErrorAlert extends React.Component {\r\n    render() {\r\n        const { responseData, msgErrorGetAPI, msgRedirectToLogin, t } = this.props;\r\n        const clsError = 'alert alert-danger';\r\n        let msgError = <div className={clsError}>{msgErrorGetAPI}</div>;\r\n        if (responseData && (responseData.status === 401 || responseData.status === 403)) {\r\n            const errorDetail = responseData.status === 401 ? t(key.common.error401GetAPI) : t(key.common.error403GetAPI);\r\n            msgError = <div>\r\n                <div className={clsError}>\r\n                    {msgErrorGetAPI}\r\n                    <br />\r\n                    {errorDetail}\r\n                    <br /><a className='alert-link' href='/login'>{msgRedirectToLogin}</a>\r\n                </div>\r\n            </div>;\r\n        }\r\n        return msgError;\r\n    }\r\n}\r\nexport default ErrorAlert;\r\n","import React from 'react';\r\nimport {\r\n  Button, Modal, ModalBody, ModalFooter, ModalHeader,\r\n} from \"reactstrap\";\r\nexport class ConfirmModal extends React.Component {\r\n  render() {\r\n    const {\r\n      isOpenModal, className, toggleModal,\r\n      headerTitle, bodyContent, sizeModal,\r\n      textBtnYes, textBtnNo, backdropModal,\r\n      selectedYes\r\n    } = this.props;\r\n    return (\r\n      <Modal isOpen={isOpenModal} size={sizeModal} backdrop={backdropModal}\r\n        className={'modal-' + className} toggle={toggleModal}>\r\n        <ModalHeader toggle={toggleModal}>{headerTitle}</ModalHeader>\r\n        <ModalBody>{bodyContent}</ModalBody>\r\n        <ModalFooter>\r\n          <Button className=\"label-button-confirm\" color={className} onClick={selectedYes}>{textBtnYes}</Button>{' '}\r\n          <Button className=\"label-button-confirm\" color=\"secondary\" onClick={toggleModal}>{textBtnNo}</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\nexport default ConfirmModal;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport ReactTable from \"react-table\";\r\nimport key from '../../i18n/key';\r\nimport { Card, CardBody, CardHeader, Col, Row, Badge, Button } from \"reactstrap\";\r\nimport { AppSwitch } from '@coreui/react';\r\nimport LoadingOverlay from 'react-loading-overlay';\r\nimport { ConfirmModal } from '../modals/confirmModal';\r\nimport { commonConstant } from '../../contants/common';\r\nimport { getSessionStorage, setSessionStorage } from '../../utilities/storage';\r\nimport { hasRecordsActionReducer, isNullActionReducer, removeItemFromItems, changeStatusItemFromItems, changeIsDefaultItemFromItems } from '../../utilities/validate';\r\nimport { toastr } from 'react-redux-toastr';\r\nimport { gridViewFormatDateTimeToString } from '../../utilities/format';\r\n\r\nvar _handleItem = null;\r\nvar _currentAction = null;\r\nexport class GridView extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isShowStatusConfirmModal: false,\r\n            isShowDeleteConfirmModal: false,\r\n            isShowIsDefaultConfirmModal: false,\r\n            isEnableFilter: getSessionStorage(commonConstant.FILTER + this.props.tableName) === 'true' ? true : false,\r\n        };\r\n    }\r\n    //CHANGESTATUS\r\n    openModalChangeStatus = (item) => {\r\n        _handleItem = item;\r\n        this.handleToggleModal(commonConstant.CHANGE_STATUS, null);\r\n    }\r\n    //DELETE\r\n    openModalDelete = (item) => {\r\n        _handleItem = item;\r\n        this.handleToggleModal(commonConstant.DELETE, null);\r\n    }\r\n    //CHANGEISDEFAULT\r\n    openModalChangeIsDefault = (item) => {\r\n        _handleItem = item;\r\n        this.handleToggleModal(commonConstant.CHANGE_ISDEFAULT, null);\r\n    }\r\n    //TOGGLE MODAL\r\n    handleToggleModal = (actionName, isSelected = false) => {\r\n        if (isSelected && actionName === commonConstant.CHANGE_STATUS) {\r\n            if (_handleItem && _handleItem.Id) {\r\n                this.props.changeStatusAction(_handleItem.Id);\r\n            }\r\n        }\r\n        else if (isSelected && actionName === commonConstant.DELETE) {\r\n            if (_handleItem && _handleItem.Id) {\r\n                this.props.deleteAction(_handleItem.Id);\r\n            }\r\n        }\r\n        else if (isSelected && actionName === commonConstant.CHANGE_ISDEFAULT) {\r\n            if (_handleItem && _handleItem.Id) {\r\n                this.props.changeIsDefaultAction(_handleItem.Id);\r\n            }\r\n        }\r\n        this.setState({\r\n            isShowStatusConfirmModal: actionName === commonConstant.CHANGE_STATUS ? !this.state.isShowStatusConfirmModal : false,\r\n            isShowDeleteConfirmModal: actionName === commonConstant.DELETE ? !this.state.isShowDeleteConfirmModal : false,\r\n            isShowIsDefaultConfirmModal: actionName === commonConstant.CHANGE_ISDEFAULT ? !this.state.isShowDeleteConfirmModal : false,\r\n        });\r\n    }\r\n    //FILTER\r\n    handleSwitchFilter = () => {\r\n        setSessionStorage(commonConstant.FILTER + this.props.tableName, !this.state.isEnableFilter)\r\n        this.setState({\r\n            isEnableFilter: !this.state.isEnableFilter,\r\n        });\r\n    }\r\n    //EDIT\r\n    handleEditAction = (item) => {\r\n        if (item && item.Id) {\r\n            const { history, tableName } = this.props;\r\n            if (history) {\r\n                history.push(tableName.toLowerCase() + '/' + item.Id);\r\n            }\r\n        }\r\n    }\r\n    requestAction = (nextProps) => {\r\n        let { deleteModel, changeStatusModel, changeIsDefaultModel } = nextProps;\r\n        if (deleteModel && deleteModel.isLoading) {\r\n            _currentAction = commonConstant.DELETE;\r\n            return true;\r\n        }\r\n        if (changeStatusModel && changeStatusModel.isLoading) {\r\n            _currentAction = commonConstant.CHANGE_STATUS;\r\n            return true;\r\n        }\r\n        if (changeIsDefaultModel && changeIsDefaultModel.isLoading) {\r\n            _currentAction = commonConstant.CHANGE_ISDEFAULT;\r\n            return true;\r\n        }\r\n    }\r\n    responseAction = (nextProps) => {\r\n        let { t, getAllModel, deleteModel, changeStatusModel, changeIsDefaultModel } = nextProps;\r\n        let hasData = hasRecordsActionReducer(getAllModel);\r\n        if (hasData) {\r\n            let records = getAllModel.responseData.Data.Records;\r\n            switch (_currentAction && true) {\r\n                //DELETE\r\n                case (commonConstant.DELETE && !isNullActionReducer(deleteModel)):\r\n                    if (deleteModel.isError) {\r\n                        toastr.error(t(key.common.deleteInfo), t(key.common.deleteErrorInfo));\r\n                    } else {\r\n                        getAllModel.responseData.Data.Records = removeItemFromItems(_handleItem, records);\r\n                        toastr.success(t(key.common.deleteInfo), t(key.common.deleteSuccessInfo));\r\n                    }\r\n                    break;\r\n                //CHANGE_STATUS\r\n                case (commonConstant.CHANGE_STATUS && !isNullActionReducer(changeStatusModel)):\r\n                    if (changeStatusModel.isError) {\r\n                        toastr.error(t(key.common.switchStatusInfo), t(key.common.switchStatusErrorInfo));\r\n                    } else {\r\n                        getAllModel.responseData.Data.Records = changeStatusItemFromItems(_handleItem, records);\r\n                        toastr.success(t(key.common.switchStatusInfo), t(key.common.switchStatusSuccessInfo));\r\n                    }\r\n                    break;\r\n                //CHANGE_ISDEFAULT\r\n                case (commonConstant.CHANGE_ISDEFAULT && !isNullActionReducer(changeIsDefaultModel)):\r\n                    if (changeIsDefaultModel.isError) {\r\n                        toastr.error(t(key.common.switchStatusInfo), t(key.common.switchStatusErrorInfo));\r\n                    } else {\r\n                        getAllModel.responseData.Data.Records = changeIsDefaultItemFromItems(_handleItem, records);\r\n                        toastr.success(t(key.common.switchStatusInfo), t(key.common.switchStatusSuccessInfo));\r\n                    }\r\n                    break;\r\n                //DEFAULT    \r\n                default:\r\n                    break;\r\n            }\r\n            _currentAction = null;\r\n        }\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        //request action\r\n        if (this.requestAction(nextProps)) return;\r\n        //response action\r\n        this.responseAction(nextProps);\r\n    }\r\n    //RENDER CONTENT\r\n    render() {\r\n        let { records, t, isLoadingOver, keyFields, disableColumns, tableName } = this.props;\r\n        const directLink = tableName ? tableName.toLowerCase() : '';\r\n        if (!records || records.length === 0) {\r\n            return (\r\n                <div className=\"animated fadeIn\">\r\n                    <Card>\r\n                        <Row>\r\n                            <Col xs=\"6\">\r\n                                <Link to={'/' + directLink + '/add'}>\r\n                                    <Button size=\"sm\" className=\"btn-dropbox btn-brand icon mr-1 mb-1\">\r\n                                        <i className=\"fa fa-plus\"></i>\r\n                                    </Button>\r\n                                </Link>\r\n                                <strong>{t(keyFields.GridTitleList)}</strong>\r\n                            </Col>\r\n                        </Row>\r\n                    </Card>\r\n                </div>\r\n            )\r\n        }\r\n        let defaultPageSize = commonConstant.PAGE_SIZE;\r\n        let pageSize = (records.length > defaultPageSize) ? defaultPageSize : records.length;\r\n        let showPagination = (records.length > defaultPageSize) ? true : false;\r\n\r\n        // Handle Disable Columns    \r\n        if (disableColumns && disableColumns.length > 0) {\r\n            records = records.map(item => {\r\n                disableColumns.forEach(function (column) {\r\n                    delete item[column];\r\n                })\r\n                return item;\r\n            })\r\n        }\r\n\r\n        //Handel Datetime\r\n        if(records.length > 0){\r\n            let tempModel = records[0];\r\n            let datePropertyName = [];\r\n            for(var propertyName in tempModel) {\r\n                if(propertyName.toLowerCase().includes('date')){\r\n                    datePropertyName.push(propertyName);\r\n                }\r\n            }\r\n\r\n            if(datePropertyName.length > 0){\r\n                records.forEach((item)=>{\r\n                    datePropertyName.forEach((propertyName)=>{\r\n                        item[propertyName] = gridViewFormatDateTimeToString(item[propertyName])\r\n                    });\r\n                });\r\n            }\r\n        }\r\n\r\n        const propsOfTable = {\r\n            data: records,\r\n            columns: [],\r\n            //pageSize: pageSize,\r\n            defaultPageSize: pageSize,\r\n            showPagination: showPagination,\r\n            filterable: this.state.isEnableFilter,\r\n            defaultFilterMethod: (filter, row) => {\r\n                let filterValue = filter.value.toLowerCase();\r\n                const id = filter.pivotId || filter.id;\r\n                if (id === 'identifierNumber') {\r\n                    return (row._index + 1) === parseInt(filter.value);\r\n                } else if (row[id] !== undefined) {\r\n                    let cellValue = String(row[id]).toLowerCase();\r\n                    return cellValue.includes(filterValue);\r\n                }\r\n            },\r\n        }\r\n        if (records.length <= defaultPageSize) propsOfTable.pageSize = pageSize;\r\n        if (records && records.length > 0) {\r\n            let columns = Object.keys(records[0]).map((keyName, id) => {\r\n                var column = {\r\n                    Header: t(keyFields[keyName]),\r\n                    headerClassName: 'header-table text-left',\r\n                    accessor: keyName,\r\n                    show: (keyName === 'Id' || keyName === 'Status') ? false : true,\r\n                    minWidth: id === 0 ? 150 : 100,\r\n                    className: 'text-left',\r\n                    minResizeWidth: 50\r\n                };\r\n                if (typeof records[0][keyName] === \"boolean\") {\r\n                    column.Cell = row => (\r\n                        <input type=\"checkbox\" checked={row.original[keyName] ? true : false} disabled />\r\n                    );\r\n                    column.className = 'text-center'\r\n                }\r\n                return column;\r\n            });\r\n            columns.unshift({\r\n                Header: '#',\r\n                headerClassName: 'header-table',\r\n                accessor: 'identifierNumber',\r\n                Cell: (row) => { return <span>{row.index + 1}</span> },\r\n                minWidth: 20,\r\n                className: 'text-center',\r\n                minResizeWidth: 50,\r\n            });\r\n            columns.push({\r\n                Header: t(key.common.status),\r\n                headerClassName: 'header-table',\r\n                accessor: 'status',\r\n                filterable: false,\r\n                Cell: row => {\r\n                    const titleStatus = (row.original.Status === 'Active' || row.original.Status === 1) ? key.common.active :\r\n                        (row.original.Status === 'InActive' || row.original.Status === 0) ? key.common.inActive : key.common.deleted;\r\n                    const colorStatus = (row.original.Status === 'Active' || row.original.Status === 1) ? 'success' :\r\n                        (row.original.Status === 'InActive' || row.original.Status === 0) ? 'danger' : 'secondary';\r\n                    return (\r\n                        <Badge className=\"label-status\" onClick={() => this.openModalChangeStatus(row.original)}\r\n                            color={colorStatus}>\r\n                            {t(titleStatus)}\r\n                        </Badge>\r\n                    )\r\n                },\r\n                width: 100,\r\n                className: 'text-center handle-pointer',\r\n                minResizeWidth: 50,\r\n            });\r\n            columns.push({\r\n                Header: t(key.common.update),\r\n                headerClassName: 'header-table',\r\n                accessor: 'update',\r\n                filterable: false,\r\n                sortable: false,\r\n                Cell: row => (\r\n                    <>\r\n                        <i onClick={() => this.handleEditAction(row.original)} className=\"handle-pointer fa fa-edit fa-lg\"></i> &nbsp;\r\n                        <i onClick={() => this.openModalDelete(row.original)} className=\"handle-pointer fa fa-trash-o fa-lg\"></i>\r\n                    </>\r\n                ),\r\n                width: 80,\r\n                className: 'text-center',\r\n                minResizeWidth: 50,\r\n            });\r\n            propsOfTable.columns = columns;\r\n        }\r\n        return (\r\n            <div className=\"animated fadeIn\">\r\n                <LoadingOverlay active={isLoadingOver} spinner text={t(key.common.processingSpinner)} className=\"overlayFullScreen\" />\r\n                <Card>\r\n                    <CardHeader>\r\n                        <Row>\r\n                            <Col xs=\"6\">\r\n                                <Link to={'/' + directLink + '/add'}>\r\n                                    <Button size=\"sm\" className=\"btn-dropbox btn-brand icon mr-1 mb-1\">\r\n                                        <i className=\"fa fa-plus\"></i>\r\n                                    </Button>\r\n                                </Link>\r\n                                <strong>{t(keyFields.GridTitleList)}</strong>\r\n                            </Col>\r\n                            <Col xs=\"6\" className={'text-right'} title=\"Enables or disables records filtering of columns in the table.\">\r\n                                {t(key.common.filterTitle)}\r\n                                <AppSwitch className={'float-right mx-1'} variant={'pill'} color={'primary'}\r\n                                    onChange={this.handleSwitchFilter} checked={this.state.isEnableFilter} />\r\n                            </Col>\r\n                        </Row>\r\n                    </CardHeader>\r\n                    <CardBody>\r\n                        {\r\n                            records.length > 0 ?\r\n                                <ReactTable {...propsOfTable} /> :\r\n                                <div className=\"animated fadeIn\"><Row><Col xs=\"12\" lg=\"12\">{t(key.common.noDataFound)}</Col></Row></div>\r\n                        }\r\n                        <ConfirmModal isOpenModal={this.state.isShowStatusConfirmModal}\r\n                            toggleModal={() => this.handleToggleModal(commonConstant.CHANGE_STATUS, false)}\r\n                            selectedYes={() => this.handleToggleModal(commonConstant.CHANGE_STATUS, true)}\r\n                            className=\"warning\" sizeModal=\"md\" backdropModal=\"static\"\r\n                            headerTitle={t(key.common.infoTitleConfirmModal)}\r\n                            bodyContent={t(key.common.switchStatusConfirmModal)}\r\n                            textBtnYes={t(key.common.btnOk)}\r\n                            textBtnNo={t(key.common.btnCancel)}\r\n                        />\r\n                        <ConfirmModal isOpenModal={this.state.isShowDeleteConfirmModal}\r\n                            toggleModal={() => this.handleToggleModal(commonConstant.DELETE, false)}\r\n                            selectedYes={() => this.handleToggleModal(commonConstant.DELETE, true)}\r\n                            className=\"danger\" sizeModal=\"md\" backdropModal=\"static\"\r\n                            headerTitle={t(key.common.infoTitleConfirmModal)}\r\n                            bodyContent={t(key.common.deleteConfirmModal)}\r\n                            textBtnYes={t(key.common.btnOk)}\r\n                            textBtnNo={t(key.common.btnCancel)}\r\n                        />\r\n                        <ConfirmModal isOpenModal={this.state.isShowIsDefaultConfirmModal}\r\n                            toggleModal={() => this.handleToggleModal(commonConstant.CHANGE_ISDEFAULT, false)}\r\n                            selectedYes={() => this.handleToggleModal(commonConstant.CHANGE_ISDEFAULT, true)}\r\n                            className=\"warning\" sizeModal=\"md\" backdropModal=\"static\"\r\n                            headerTitle={t(key.common.infoTitleConfirmModal)}\r\n                            bodyContent={t(key.common.switchStatusConfirmModal)}\r\n                            textBtnYes={t(key.common.btnOk)}\r\n                            textBtnNo={t(key.common.btnCancel)}\r\n                        />\r\n                        {/* Option className modal: primary, info, danger, warning,success, \r\n                  Size modal: sm, md, lg */}\r\n                    </CardBody>\r\n                </Card>\r\n            </div >\r\n        );\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { translate } from 'react-i18next';\r\nimport key from '../../../i18n/key';\r\nimport { Col, Row } from \"reactstrap\";\r\nimport LoadingOverlay from 'react-loading-overlay';\r\nimport { ErrorAlert } from '../../../components/alerts/errorAlert';\r\nimport { hasRecordsActionReducer, applyCheckAuthorized } from '../../../utilities/validate';\r\nimport { getAllDistanceAction, changeStatusDistanceAction, deleteDistanceAction } from '../../../actions/distance';\r\nimport { GridView } from '../../../components/gridView/gridView';\r\nclass Distance extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        applyCheckAuthorized();\r\n    }\r\n    componentDidMount() {\r\n        //Sau khi render hàm này sẽ chạy\r\n        this.props.getAllAction();\r\n    }\r\n    requestAction = (nextProps) => {\r\n        //Khi có action phát đi thì hàm này sẽ handle\r\n    }\r\n    responseAction = (nextProps) => {\r\n        //Khi api trả dữ liệu về thì hàm này sẽ handle\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        //request action\r\n        if (this.requestAction(nextProps)) return;\r\n        //response action\r\n        this.responseAction(nextProps);\r\n    }\r\n    render() {\r\n        const { t, changeStatusModel, deleteModel, getAllModel } = this.props;\r\n        let disableColumns = [];//['Id','Status'];\r\n        if (!getAllModel || !changeStatusModel || !deleteModel) return;\r\n        const isLoadingOver = changeStatusModel.isLoading || deleteModel.isLoading;\r\n        if (getAllModel.isLoading) {\r\n            return <LoadingOverlay active spinner text={t(key.common.loadingSpinner)} />\r\n        } else if (getAllModel.isError) {\r\n            return <ErrorAlert responseData={getAllModel.responseData}\r\n                msgErrorGetAPI={t(key.common.errorGetAllAPI)} t={this.props.t}\r\n                msgRedirectToLogin={t(key.common.redirectToLogin)} />\r\n        } else {\r\n            if (hasRecordsActionReducer(getAllModel)) {\r\n                return <GridView\r\n                    isLoadingOver={isLoadingOver}\r\n                    records={getAllModel.responseData.Data.Records}\r\n                    keyFields={key.distance}\r\n                    tableName=\"DISTANCE\"\r\n                    disableColumns={disableColumns}\r\n                    {...this.props}\r\n                />\r\n            } else {\r\n                return <div className=\"animated fadeIn\"><Row><Col xs=\"12\" lg=\"12\">{t(key.common.noDataFound)}</Col></Row></div>;\r\n            }\r\n        }\r\n    }\r\n}\r\n//Nhận dữ liệu trả về từ reducer (reducer thì lấy data từ api)\r\nconst mapStateToProps = state => ({\r\n    getAllModel: state.getAllDistanceReducer,\r\n    changeStatusModel: state.changeStatusDistanceReducer,\r\n    deleteModel: state.deleteDistanceReducer,\r\n});\r\n//Phát đi tính hiệu thông qua action (để lấy data từ api)\r\nconst mapDispatchToProps = {\r\n    getAllAction: getAllDistanceAction,\r\n    changeStatusAction: changeStatusDistanceAction,\r\n    deleteAction: deleteDistanceAction,\r\n};\r\nexport default translate()(connect(mapStateToProps, mapDispatchToProps)(Distance));"],"sourceRoot":""}